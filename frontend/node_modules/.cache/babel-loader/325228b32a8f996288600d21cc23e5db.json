{"remainingRequest":"C:\\Users\\ZJ\\go\\src\\frontend\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\ZJ\\go\\src\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\ZJ\\go\\src\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\ZJ\\go\\src\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ZJ\\go\\src\\frontend\\src\\views\\Room.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ZJ\\go\\src\\frontend\\src\\views\\Room.vue","mtime":1598758185000},{"path":"C:\\Users\\ZJ\\go\\src\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ZJ\\go\\src\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ZJ\\go\\src\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\ZJ\\go\\src\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ZJ\\go\\src\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM3Lm9iamVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3JzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM2Lm9iamVjdC5rZXlzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM3LnN5bWJvbC5hc3luYy1pdGVyYXRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzNi5zeW1ib2wiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLml0ZXJhYmxlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM2LnJlZ2V4cC5zcGxpdCI7CmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSAiQzpcXFVzZXJzXFxaSlxcZ29cXHNyY1xcZnJvbnRlbmRcXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lLWNvcmVqczIvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkiOwoKZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7IHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7IGlmIChlbnVtZXJhYmxlT25seSkgc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7IH0pOyBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7IH0gcmV0dXJuIGtleXM7IH0KCmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV0gIT0gbnVsbCA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpZiAoaSAlIDIpIHsgb3duS2V5cyhzb3VyY2UsIHRydWUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsgfSk7IH0gZWxzZSBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMpIHsgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKTsgfSBlbHNlIHsgb3duS2V5cyhzb3VyY2UpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTsgfSk7IH0gfSByZXR1cm4gdGFyZ2V0OyB9CgovLwovLwovLwovLwppbXBvcnQgeyBtZXJnZUNvbmZpZywgdG9Cb29sLCB0b0ludCB9IGZyb20gJ0AvdXRpbHMnOwppbXBvcnQgKiBhcyBjb25maWcgZnJvbSAnQC9hcGkvY29uZmlnJzsKaW1wb3J0IENoYXRSZW5kZXJlciBmcm9tICdAL2NvbXBvbmVudHMvQ2hhdFJlbmRlcmVyJzsKaW1wb3J0ICogYXMgY29uc3RhbnRzIGZyb20gJ0AvY29tcG9uZW50cy9DaGF0UmVuZGVyZXIvY29uc3RhbnRzJzsKdmFyIENPTU1BTkRfSEVBUlRCRUFUID0gMDsKdmFyIENPTU1BTkRfSk9JTl9ST09NID0gMTsKdmFyIENPTU1BTkRfQUREX1RFWFQgPSAyOwp2YXIgQ09NTUFORF9BRERfR0lGVCA9IDM7CnZhciBDT01NQU5EX0FERF9NRU1CRVIgPSA0Owp2YXIgQ09NTUFORF9BRERfU1VQRVJfQ0hBVCA9IDU7CnZhciBDT01NQU5EX0RFTF9TVVBFUl9DSEFUID0gNjsKdmFyIENPTU1BTkRfVVBEQVRFX1RSQU5TTEFUSU9OID0gNzsKdmFyIENPTU1BTkRfQUREX0xPVkUgPSA4Owp2YXIgQ09NTUFORF9RVUlUX1JPT00gPSA5Owp2YXIgQ09NTUFORF9BRERfRk9MTE9XID0gMTA7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnUm9vbScsCiAgY29tcG9uZW50czogewogICAgQ2hhdFJlbmRlcmVyOiBDaGF0UmVuZGVyZXIKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjb25maWc6IF9vYmplY3RTcHJlYWQoe30sIGNvbmZpZy5ERUZBVUxUX0NPTkZJRyksCiAgICAgIHdlYnNvY2tldDogbnVsbCwKICAgICAgcmV0cnlDb3VudDogMCwKICAgICAgaXNEZXN0cm95aW5nOiBmYWxzZSwKICAgICAgaGVhcnRiZWF0VGltZXJJZDogbnVsbAogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBibG9ja0tleXdvcmRzOiBmdW5jdGlvbiBibG9ja0tleXdvcmRzKCkgewogICAgICByZXR1cm4gdGhpcy5jb25maWcuYmxvY2tLZXl3b3Jkcy5zcGxpdCgnXG4nKS5maWx0ZXIoZnVuY3Rpb24gKHZhbCkgewogICAgICAgIHJldHVybiB2YWw7CiAgICAgIH0pOwogICAgfSwKICAgIGJsb2NrVXNlcnM6IGZ1bmN0aW9uIGJsb2NrVXNlcnMoKSB7CiAgICAgIHJldHVybiB0aGlzLmNvbmZpZy5ibG9ja1VzZXJzLnNwbGl0KCdcbicpLmZpbHRlcihmdW5jdGlvbiAodmFsKSB7CiAgICAgICAgcmV0dXJuIHZhbDsKICAgICAgfSk7CiAgICB9CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdGhpcy51cGRhdGVDb25maWcoKTsKICAgIHRoaXMud3NDb25uZWN0KCk7IC8vIOaPkOekuueUqOaIt+W3suWKoOi9vQoKICAgIHRoaXMuJG1lc3NhZ2UoewogICAgICBtZXNzYWdlOiAnTG9hZGVkJywKICAgICAgZHVyYXRpb246ICc1MDAnCiAgICB9KTsKICB9LAogIGJlZm9yZURlc3Ryb3k6IGZ1bmN0aW9uIGJlZm9yZURlc3Ryb3koKSB7CiAgICB0aGlzLmlzRGVzdHJveWluZyA9IHRydWU7CiAgICB0aGlzLndlYnNvY2tldC5jbG9zZSgpOwogIH0sCiAgbWV0aG9kczogewogICAgdXBkYXRlQ29uZmlnOiBmdW5jdGlvbiB1cGRhdGVDb25maWcoKSB7CiAgICAgIHZhciBjZmcgPSB7fTsgLy8g55WZ56m655qE5L2/55So6buY6K6k5YC8CgogICAgICBmb3IgKHZhciBpIGluIHRoaXMuJHJvdXRlLnF1ZXJ5KSB7CiAgICAgICAgaWYgKHRoaXMuJHJvdXRlLnF1ZXJ5W2ldICE9PSAnJykgewogICAgICAgICAgY2ZnW2ldID0gdGhpcy4kcm91dGUucXVlcnlbaV07CiAgICAgICAgfQogICAgICB9CgogICAgICBjZmcgPSBtZXJnZUNvbmZpZyhjZmcsIGNvbmZpZy5ERUZBVUxUX0NPTkZJRyk7CiAgICAgIGNmZy5taW5HaWZ0UHJpY2UgPSB0b0ludChjZmcubWluR2lmdFByaWNlLCBjb25maWcuREVGQVVMVF9DT05GSUcubWluR2lmdFByaWNlKTsKICAgICAgY2ZnLnNob3dEYW5tYWt1ID0gdG9Cb29sKGNmZy5zaG93RGFubWFrdSk7CiAgICAgIGNmZy5zaG93TG92ZSA9IHRvQm9vbChjZmcuc2hvd0xvdmUpOwogICAgICBjZmcuc2hvd0ZvbGxvdyA9IHRvQm9vbChjZmcuc2hvd0ZvbGxvdyk7CiAgICAgIGNmZy5zaG93Sm9pbiA9IHRvQm9vbChjZmcuc2hvd0pvaW4pOwogICAgICBjZmcuc2hvd1F1aXQgPSB0b0Jvb2woY2ZnLnNob3dRdWl0KTsKICAgICAgY2ZnLnNob3dHaWZ0ID0gdG9Cb29sKGNmZy5zaG93R2lmdCk7CiAgICAgIGNmZy5zaG93R2lmdE5hbWUgPSB0b0Jvb2woY2ZnLnNob3dHaWZ0TmFtZSk7CiAgICAgIGNmZy5zaG93R2lmdFByaWNlID0gdG9Cb29sKGNmZy5zaG93R2lmdFByaWNlKTsKICAgICAgY2ZnLm1lcmdlU2ltaWxhckRhbm1ha3UgPSB0b0Jvb2woY2ZnLm1lcmdlU2ltaWxhckRhbm1ha3UpOwogICAgICBjZmcubWVyZ2VTaW1pbGFyT3RoZXIgPSB0b0Jvb2woY2ZnLm1lcmdlU2ltaWxhck90aGVyKTsKICAgICAgY2ZnLm1lcmdlR2lmdCA9IHRvQm9vbChjZmcubWVyZ2VHaWZ0KTsKICAgICAgY2ZnLm1heE51bWJlciA9IHRvSW50KGNmZy5tYXhOdW1iZXIsIGNvbmZpZy5ERUZBVUxUX0NPTkZJRy5tYXhOdW1iZXIpOwogICAgICBjZmcuYmxvY2tHaWZ0RGFubWFrdSA9IHRvQm9vbChjZmcuYmxvY2tHaWZ0RGFubWFrdSk7CiAgICAgIGNmZy5ibG9ja0xldmVsID0gdG9JbnQoY2ZnLmJsb2NrTGV2ZWwsIGNvbmZpZy5ERUZBVUxUX0NPTkZJRy5ibG9ja0xldmVsKTsKICAgICAgY2ZnLmJsb2NrTmV3YmllID0gdG9Cb29sKGNmZy5ibG9ja05ld2JpZSk7CiAgICAgIGNmZy5ibG9ja05vdE1vYmlsZVZlcmlmaWVkID0gdG9Cb29sKGNmZy5ibG9ja05vdE1vYmlsZVZlcmlmaWVkKTsKICAgICAgY2ZnLmJsb2NrTWVkYWxMZXZlbCA9IHRvSW50KGNmZy5ibG9ja01lZGFsTGV2ZWwsIGNvbmZpZy5ERUZBVUxUX0NPTkZJRy5ibG9ja01lZGFsTGV2ZWwpOwogICAgICBjZmcuYXV0b1RyYW5zbGF0ZSA9IHRvQm9vbChjZmcuYXV0b1RyYW5zbGF0ZSk7CiAgICAgIHRoaXMuY29uZmlnID0gY2ZnOwogICAgfSwKICAgIHdzQ29ubmVjdDogZnVuY3Rpb24gd3NDb25uZWN0KCkgewogICAgICB2YXIgcHJvdG9jb2wgPSB3aW5kb3cubG9jYXRpb24ucHJvdG9jb2wgPT09ICdodHRwczonID8gJ3dzcycgOiAnd3MnOyAvLyDlvIDlj5Hml7bkvb/nlKhsb2NhbGhvc3Q6MTI0NTAKCiAgICAgIHZhciBob3N0ID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdkZXZlbG9wbWVudCcgPyAnbG9jYWxob3N0OjEyNDUxJyA6IHdpbmRvdy5sb2NhdGlvbi5ob3N0OwogICAgICB2YXIgdXJsID0gIiIuY29uY2F0KHByb3RvY29sLCAiOi8vIikuY29uY2F0KGhvc3QsICIvY2hhdCIpOwogICAgICB0aGlzLndlYnNvY2tldCA9IG5ldyBXZWJTb2NrZXQodXJsKTsKICAgICAgdGhpcy53ZWJzb2NrZXQub25vcGVuID0gdGhpcy5vbldzT3BlbjsKICAgICAgdGhpcy53ZWJzb2NrZXQub25jbG9zZSA9IHRoaXMub25Xc0Nsb3NlOwogICAgICB0aGlzLndlYnNvY2tldC5vbm1lc3NhZ2UgPSB0aGlzLm9uV3NNZXNzYWdlOwogICAgICB0aGlzLmhlYXJ0YmVhdFRpbWVySWQgPSB3aW5kb3cuc2V0SW50ZXJ2YWwodGhpcy5zZW5kSGVhcnRiZWF0LCAxMCAqIDEwMDApOwogICAgfSwKICAgIHNlbmRIZWFydGJlYXQ6IGZ1bmN0aW9uIHNlbmRIZWFydGJlYXQoKSB7CiAgICAgIHRoaXMud2Vic29ja2V0LnNlbmQoSlNPTi5zdHJpbmdpZnkoewogICAgICAgIGNtZDogQ09NTUFORF9IRUFSVEJFQVQKICAgICAgfSkpOwogICAgfSwKICAgIG9uV3NPcGVuOiBmdW5jdGlvbiBvbldzT3BlbigpIHsKICAgICAgdGhpcy5yZXRyeUNvdW50ID0gMDsKICAgICAgdGhpcy53ZWJzb2NrZXQuc2VuZChKU09OLnN0cmluZ2lmeSh7CiAgICAgICAgY21kOiBDT01NQU5EX0pPSU5fUk9PTSwKICAgICAgICBkYXRhOiB7CiAgICAgICAgICByb29tSWQ6IHBhcnNlSW50KHRoaXMuJHJvdXRlLnBhcmFtcy5yb29tSWQpLAogICAgICAgICAgY29uZmlnOiB7CiAgICAgICAgICAgIGF1dG9UcmFuc2xhdGU6IHRoaXMuY29uZmlnLmF1dG9UcmFuc2xhdGUKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0pKTsKICAgIH0sCiAgICBvbldzQ2xvc2U6IGZ1bmN0aW9uIG9uV3NDbG9zZSgpIHsKICAgICAgaWYgKHRoaXMuaGVhcnRiZWF0VGltZXJJZCkgewogICAgICAgIHdpbmRvdy5jbGVhckludGVydmFsKHRoaXMuaGVhcnRiZWF0VGltZXJJZCk7CiAgICAgICAgdGhpcy5oZWFydGJlYXRUaW1lcklkID0gbnVsbDsKICAgICAgfQoKICAgICAgaWYgKHRoaXMuaXNEZXN0cm95aW5nKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICB3aW5kb3cuY29uc29sZS5sb2coIlx1NjM4OVx1N0VCRlx1OTFDRFx1OEZERVx1NEUyRCIuY29uY2F0KCsrdGhpcy5yZXRyeUNvdW50KSk7CiAgICAgIHRoaXMud3NDb25uZWN0KCk7CiAgICB9LAogICAgb25Xc01lc3NhZ2U6IGZ1bmN0aW9uIG9uV3NNZXNzYWdlKGV2ZW50KSB7CiAgICAgIHZhciBfSlNPTiRwYXJzZSA9IEpTT04ucGFyc2UoZXZlbnQuZGF0YSksCiAgICAgICAgICBjbWQgPSBfSlNPTiRwYXJzZS5jbWQsCiAgICAgICAgICBkYXRhID0gX0pTT04kcGFyc2UuZGF0YTsKCiAgICAgIHZhciBtZXNzYWdlID0gbnVsbDsKCiAgICAgIHN3aXRjaCAoY21kKSB7CiAgICAgICAgY2FzZSBDT01NQU5EX0pPSU5fUk9PTToKICAgICAgICAgIGlmICghdGhpcy5jb25maWcuc2hvd0pvaW4gfHwgdGhpcy5tZXJnZVNpbWlsYXJPdGhlcihkYXRhLmF1dGhvck5hbWUsIGRhdGEuY29udGVudCkpIHsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICB9CgogICAgICAgICAgbWVzc2FnZSA9IHsKICAgICAgICAgICAgaWQ6IGRhdGEuaWQsCiAgICAgICAgICAgIHR5cGU6IGNvbnN0YW50cy5NRVNTQUdFX1RZUEVfSk9JTiwKICAgICAgICAgICAgYXZhdGFyVXJsOiBkYXRhLmF2YXRhclVybCwKICAgICAgICAgICAgdGltZTogbmV3IERhdGUoZGF0YS50aW1lc3RhbXAgKiAxMDAwKSwKICAgICAgICAgICAgYXV0aG9yTmFtZTogZGF0YS5hdXRob3JOYW1lLAogICAgICAgICAgICBhdXRob3JUeXBlOiBkYXRhLmF1dGhvclR5cGUsCiAgICAgICAgICAgIGNvbnRlbnQ6IGRhdGEuY29udGVudCwKICAgICAgICAgICAgcHJpdmlsZWdlVHlwZTogZGF0YS5wcml2aWxlZ2VUeXBlLAogICAgICAgICAgICByZXBlYXRlZDogMSwKICAgICAgICAgICAgdHJhbnNsYXRpb246IGRhdGEudHJhbnNsYXRpb24KICAgICAgICAgIH07CiAgICAgICAgICBicmVhazsKCiAgICAgICAgY2FzZSBDT01NQU5EX1FVSVRfUk9PTToKICAgICAgICAgIGlmICghdGhpcy5jb25maWcuc2hvd1F1aXQgfHwgdGhpcy5tZXJnZVNpbWlsYXJPdGhlcihkYXRhLmF1dGhvck5hbWUsIGRhdGEuY29udGVudCkpIHsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICB9CgogICAgICAgICAgbWVzc2FnZSA9IHsKICAgICAgICAgICAgaWQ6IGRhdGEuaWQsCiAgICAgICAgICAgIHR5cGU6IGNvbnN0YW50cy5NRVNTQUdFX1RZUEVfUVVJVCwKICAgICAgICAgICAgYXZhdGFyVXJsOiBkYXRhLmF2YXRhclVybCwKICAgICAgICAgICAgdGltZTogbmV3IERhdGUoZGF0YS50aW1lc3RhbXAgKiAxMDAwKSwKICAgICAgICAgICAgYXV0aG9yTmFtZTogZGF0YS5hdXRob3JOYW1lLAogICAgICAgICAgICBhdXRob3JUeXBlOiBkYXRhLmF1dGhvclR5cGUsCiAgICAgICAgICAgIGNvbnRlbnQ6IGRhdGEuY29udGVudCwKICAgICAgICAgICAgcHJpdmlsZWdlVHlwZTogZGF0YS5wcml2aWxlZ2VUeXBlLAogICAgICAgICAgICByZXBlYXRlZDogMSwKICAgICAgICAgICAgdHJhbnNsYXRpb246IGRhdGEudHJhbnNsYXRpb24KICAgICAgICAgIH07CiAgICAgICAgICBicmVhazsKCiAgICAgICAgY2FzZSBDT01NQU5EX0FERF9URVhUOgogICAgICAgICAgaWYgKCF0aGlzLmNvbmZpZy5zaG93RGFubWFrdSB8fCAhdGhpcy5maWx0ZXJUZXh0TWVzc2FnZShkYXRhKSB8fCB0aGlzLm1lcmdlU2ltaWxhclRleHQoZGF0YS5jb250ZW50KSkgewogICAgICAgICAgICBicmVhazsKICAgICAgICAgIH0KCiAgICAgICAgICBtZXNzYWdlID0gewogICAgICAgICAgICBpZDogZGF0YS5pZCwKICAgICAgICAgICAgdHlwZTogY29uc3RhbnRzLk1FU1NBR0VfVFlQRV9URVhULAogICAgICAgICAgICBhdmF0YXJVcmw6IGRhdGEuYXZhdGFyVXJsLAogICAgICAgICAgICB0aW1lOiBuZXcgRGF0ZShkYXRhLnRpbWVzdGFtcCAqIDEwMDApLAogICAgICAgICAgICBhdXRob3JOYW1lOiBkYXRhLmF1dGhvck5hbWUsCiAgICAgICAgICAgIGF1dGhvclR5cGU6IGRhdGEuYXV0aG9yVHlwZSwKICAgICAgICAgICAgY29udGVudDogZGF0YS5jb250ZW50LAogICAgICAgICAgICBwcml2aWxlZ2VUeXBlOiBkYXRhLnByaXZpbGVnZVR5cGUsCiAgICAgICAgICAgIHJlcGVhdGVkOiAxLAogICAgICAgICAgICB0cmFuc2xhdGlvbjogZGF0YS50cmFuc2xhdGlvbgogICAgICAgICAgfTsKICAgICAgICAgIGJyZWFrOwoKICAgICAgICBjYXNlIENPTU1BTkRfQUREX0dJRlQ6CiAgICAgICAgICB7CiAgICAgICAgICAgIGlmICghdGhpcy5jb25maWcuc2hvd0dpZnQpIHsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgdmFyIHByaWNlID0gZGF0YS50b3RhbENvaW4gLyAxMDAwOwoKICAgICAgICAgICAgaWYgKHRoaXMubWVyZ2VTaW1pbGFyR2lmdChkYXRhLmF1dGhvck5hbWUsIHByaWNlLCBkYXRhLmdpZnROYW1lLCBkYXRhLm51bSkpIHsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKHByaWNlIDwgdGhpcy5jb25maWcubWluR2lmdFByaWNlKSB7CiAgICAgICAgICAgICAgLy8g5Lii5Lq6CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIG1lc3NhZ2UgPSB7CiAgICAgICAgICAgICAgaWQ6IGRhdGEuaWQsCiAgICAgICAgICAgICAgdHlwZTogY29uc3RhbnRzLk1FU1NBR0VfVFlQRV9HSUZULAogICAgICAgICAgICAgIGF2YXRhclVybDogZGF0YS5hdmF0YXJVcmwsCiAgICAgICAgICAgICAgdGltZTogbmV3IERhdGUoZGF0YS50aW1lc3RhbXAgKiAxMDAwKSwKICAgICAgICAgICAgICBhdXRob3JOYW1lOiBkYXRhLmF1dGhvck5hbWUsCiAgICAgICAgICAgICAgcHJpY2U6IHByaWNlLAogICAgICAgICAgICAgIGdpZnROYW1lOiBkYXRhLmdpZnROYW1lLAogICAgICAgICAgICAgIG51bTogZGF0YS5udW0KICAgICAgICAgICAgfTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICB9CgogICAgICAgIGNhc2UgQ09NTUFORF9BRERfTE9WRToKICAgICAgICAgIHsKICAgICAgICAgICAgaWYgKCF0aGlzLmNvbmZpZy5zaG93TG92ZSB8fCB0aGlzLm1lcmdlU2ltaWxhck90aGVyKGRhdGEuYXV0aG9yTmFtZSwgZGF0YS5jb250ZW50KSkgewogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CgogICAgICAgICAgICBtZXNzYWdlID0gewogICAgICAgICAgICAgIGlkOiBkYXRhLmlkLAogICAgICAgICAgICAgIHR5cGU6IGNvbnN0YW50cy5NRVNTQUdFX1RZUEVfTE9WRSwKICAgICAgICAgICAgICBhdmF0YXJVcmw6IGRhdGEuYXZhdGFyVXJsLAogICAgICAgICAgICAgIHRpbWU6IG5ldyBEYXRlKGRhdGEudGltZXN0YW1wICogMTAwMCksCiAgICAgICAgICAgICAgYXV0aG9yTmFtZTogZGF0YS5hdXRob3JOYW1lLAogICAgICAgICAgICAgIGF1dGhvclR5cGU6IGRhdGEuYXV0aG9yVHlwZSwKICAgICAgICAgICAgICBjb250ZW50OiBkYXRhLmNvbnRlbnQsCiAgICAgICAgICAgICAgcHJpY2U6IDAsCiAgICAgICAgICAgICAgcmVwZWF0ZWQ6IDEsCiAgICAgICAgICAgICAgZ2lmdE5hbWU6IGRhdGEuZ2lmdE5hbWUsCiAgICAgICAgICAgICAgbnVtOiBkYXRhLm51bQogICAgICAgICAgICB9OwogICAgICAgICAgICBicmVhazsKICAgICAgICAgIH0KCiAgICAgICAgY2FzZSBDT01NQU5EX0FERF9GT0xMT1c6CiAgICAgICAgICB7CiAgICAgICAgICAgIGlmICghdGhpcy5jb25maWcuc2hvd0ZvbGxvdykgewogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CgogICAgICAgICAgICBtZXNzYWdlID0gewogICAgICAgICAgICAgIGlkOiBkYXRhLmlkLAogICAgICAgICAgICAgIHR5cGU6IGNvbnN0YW50cy5NRVNTQUdFX1RZUEVfRk9MTE9XLAogICAgICAgICAgICAgIGF2YXRhclVybDogZGF0YS5hdmF0YXJVcmwsCiAgICAgICAgICAgICAgdGltZTogbmV3IERhdGUoZGF0YS50aW1lc3RhbXAgKiAxMDAwKSwKICAgICAgICAgICAgICBhdXRob3JOYW1lOiBkYXRhLmF1dGhvck5hbWUsCiAgICAgICAgICAgICAgY29udGVudDogZGF0YS5jb250ZW50LAogICAgICAgICAgICAgIHByaWNlOiAwLAogICAgICAgICAgICAgIGdpZnROYW1lOiBkYXRhLmdpZnROYW1lLAogICAgICAgICAgICAgIG51bTogZGF0YS5udW0KICAgICAgICAgICAgfTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICB9CgogICAgICAgIGNhc2UgQ09NTUFORF9BRERfTUVNQkVSOgogICAgICAgICAgaWYgKCF0aGlzLmNvbmZpZy5zaG93R2lmdCB8fCAhdGhpcy5maWx0ZXJOZXdNZW1iZXJNZXNzYWdlKGRhdGEpKSB7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgfQoKICAgICAgICAgIG1lc3NhZ2UgPSB7CiAgICAgICAgICAgIGlkOiBkYXRhLmlkLAogICAgICAgICAgICB0eXBlOiBjb25zdGFudHMuTUVTU0FHRV9UWVBFX01FTUJFUiwKICAgICAgICAgICAgYXZhdGFyVXJsOiBkYXRhLmF2YXRhclVybCwKICAgICAgICAgICAgdGltZTogbmV3IERhdGUoZGF0YS50aW1lc3RhbXAgKiAxMDAwKSwKICAgICAgICAgICAgYXV0aG9yTmFtZTogZGF0YS5hdXRob3JOYW1lLAogICAgICAgICAgICB0aXRsZTogJ05FVyBNRU1CRVIhJywKICAgICAgICAgICAgY29udGVudDogIldlbGNvbWUgIi5jb25jYXQoZGF0YS5hdXRob3JOYW1lLCAiISIpCiAgICAgICAgICB9OwogICAgICAgICAgYnJlYWs7CgogICAgICAgIGNhc2UgQ09NTUFORF9BRERfU1VQRVJfQ0hBVDoKICAgICAgICAgIGlmICghdGhpcy5jb25maWcuc2hvd0dpZnQgfHwgIXRoaXMuZmlsdGVyU3VwZXJDaGF0TWVzc2FnZShkYXRhKSkgewogICAgICAgICAgICBicmVhazsKICAgICAgICAgIH0KCiAgICAgICAgICBpZiAoZGF0YS5wcmljZSA8IHRoaXMuY29uZmlnLm1pbkdpZnRQcmljZSkgewogICAgICAgICAgICAvLyDkuKLkuroKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICB9CgogICAgICAgICAgbWVzc2FnZSA9IHsKICAgICAgICAgICAgaWQ6IGRhdGEuaWQsCiAgICAgICAgICAgIHR5cGU6IGNvbnN0YW50cy5NRVNTQUdFX1RZUEVfU1VQRVJfQ0hBVCwKICAgICAgICAgICAgYXZhdGFyVXJsOiBkYXRhLmF2YXRhclVybCwKICAgICAgICAgICAgYXV0aG9yTmFtZTogZGF0YS5hdXRob3JOYW1lLAogICAgICAgICAgICBwcmljZTogZGF0YS5wcmljZSwKICAgICAgICAgICAgdGltZTogbmV3IERhdGUoZGF0YS50aW1lc3RhbXAgKiAxMDAwKSwKICAgICAgICAgICAgY29udGVudDogZGF0YS5jb250ZW50LnRyaW0oKQogICAgICAgICAgfTsKICAgICAgICAgIGJyZWFrOwoKICAgICAgICBjYXNlIENPTU1BTkRfREVMX1NVUEVSX0NIQVQ6CiAgICAgICAgICB2YXIgX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiA9IHRydWU7CiAgICAgICAgICB2YXIgX2RpZEl0ZXJhdG9yRXJyb3IgPSBmYWxzZTsKICAgICAgICAgIHZhciBfaXRlcmF0b3JFcnJvciA9IHVuZGVmaW5lZDsKCiAgICAgICAgICB0cnkgewogICAgICAgICAgICBmb3IgKHZhciBfaXRlcmF0b3IgPSBkYXRhLmlkc1tTeW1ib2wuaXRlcmF0b3JdKCksIF9zdGVwOyAhKF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24gPSAoX3N0ZXAgPSBfaXRlcmF0b3IubmV4dCgpKS5kb25lKTsgX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiA9IHRydWUpIHsKICAgICAgICAgICAgICB2YXIgaWQgPSBfc3RlcC52YWx1ZTsKICAgICAgICAgICAgICB0aGlzLiRyZWZzLnJlbmRlcmVyLmRlbE1lc3NhZ2UoaWQpOwogICAgICAgICAgICB9CiAgICAgICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICAgICAgX2RpZEl0ZXJhdG9yRXJyb3IgPSB0cnVlOwogICAgICAgICAgICBfaXRlcmF0b3JFcnJvciA9IGVycjsKICAgICAgICAgIH0gZmluYWxseSB7CiAgICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgICAgaWYgKCFfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uICYmIF9pdGVyYXRvci5yZXR1cm4gIT0gbnVsbCkgewogICAgICAgICAgICAgICAgX2l0ZXJhdG9yLnJldHVybigpOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSBmaW5hbGx5IHsKICAgICAgICAgICAgICBpZiAoX2RpZEl0ZXJhdG9yRXJyb3IpIHsKICAgICAgICAgICAgICAgIHRocm93IF9pdGVyYXRvckVycm9yOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQoKICAgICAgICAgIGJyZWFrOwoKICAgICAgICBjYXNlIENPTU1BTkRfVVBEQVRFX1RSQU5TTEFUSU9OOgogICAgICAgICAgaWYgKCF0aGlzLmNvbmZpZy5hdXRvVHJhbnNsYXRlKSB7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgfQoKICAgICAgICAgIGRhdGEgPSB7CiAgICAgICAgICAgIGlkOiBkYXRhWzBdLAogICAgICAgICAgICB0cmFuc2xhdGlvbjogZGF0YVsxXQogICAgICAgICAgfTsKICAgICAgICAgIHRoaXMuJHJlZnMucmVuZGVyZXIudXBkYXRlTWVzc2FnZShkYXRhLmlkLCB7CiAgICAgICAgICAgIHRyYW5zbGF0aW9uOiBkYXRhLnRyYW5zbGF0aW9uCiAgICAgICAgICB9KTsKICAgICAgICAgIGJyZWFrOwogICAgICB9CgogICAgICBpZiAobWVzc2FnZSkgewogICAgICAgIHRoaXMuJHJlZnMucmVuZGVyZXIuYWRkTWVzc2FnZShtZXNzYWdlKTsKICAgICAgfQogICAgfSwKICAgIGZpbHRlclRleHRNZXNzYWdlOiBmdW5jdGlvbiBmaWx0ZXJUZXh0TWVzc2FnZShkYXRhKSB7CiAgICAgIGlmICh0aGlzLmNvbmZpZy5ibG9ja0dpZnREYW5tYWt1ICYmIGRhdGEuaXNHaWZ0RGFubWFrdSkgewogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfSBlbHNlIGlmICh0aGlzLmNvbmZpZy5ibG9ja0xldmVsID4gMCAmJiBkYXRhLmF1dGhvckxldmVsIDwgdGhpcy5jb25maWcuYmxvY2tMZXZlbCkgewogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfSBlbHNlIGlmICh0aGlzLmNvbmZpZy5ibG9ja05ld2JpZSAmJiBkYXRhLmlzTmV3YmllKSB7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9IGVsc2UgaWYgKHRoaXMuY29uZmlnLmJsb2NrTm90TW9iaWxlVmVyaWZpZWQgJiYgIWRhdGEuaXNNb2JpbGVWZXJpZmllZCkgewogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfSBlbHNlIGlmICh0aGlzLmNvbmZpZy5ibG9ja01lZGFsTGV2ZWwgPiAwICYmIGRhdGEubWVkYWxMZXZlbCA8IHRoaXMuY29uZmlnLmJsb2NrTWVkYWxMZXZlbCkgewogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfQoKICAgICAgcmV0dXJuIHRoaXMuZmlsdGVyU3VwZXJDaGF0TWVzc2FnZShkYXRhKTsKICAgIH0sCiAgICBmaWx0ZXJTdXBlckNoYXRNZXNzYWdlOiBmdW5jdGlvbiBmaWx0ZXJTdXBlckNoYXRNZXNzYWdlKGRhdGEpIHsKICAgICAgdmFyIF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24yID0gdHJ1ZTsKICAgICAgdmFyIF9kaWRJdGVyYXRvckVycm9yMiA9IGZhbHNlOwogICAgICB2YXIgX2l0ZXJhdG9yRXJyb3IyID0gdW5kZWZpbmVkOwoKICAgICAgdHJ5IHsKICAgICAgICBmb3IgKHZhciBfaXRlcmF0b3IyID0gdGhpcy5ibG9ja0tleXdvcmRzW1N5bWJvbC5pdGVyYXRvcl0oKSwgX3N0ZXAyOyAhKF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24yID0gKF9zdGVwMiA9IF9pdGVyYXRvcjIubmV4dCgpKS5kb25lKTsgX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjIgPSB0cnVlKSB7CiAgICAgICAgICB2YXIga2V5d29yZCA9IF9zdGVwMi52YWx1ZTsKCiAgICAgICAgICBpZiAoZGF0YS5jb250ZW50LmluZGV4T2Yoa2V5d29yZCkgIT09IC0xKSB7CiAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgIF9kaWRJdGVyYXRvckVycm9yMiA9IHRydWU7CiAgICAgICAgX2l0ZXJhdG9yRXJyb3IyID0gZXJyOwogICAgICB9IGZpbmFsbHkgewogICAgICAgIHRyeSB7CiAgICAgICAgICBpZiAoIV9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24yICYmIF9pdGVyYXRvcjIucmV0dXJuICE9IG51bGwpIHsKICAgICAgICAgICAgX2l0ZXJhdG9yMi5yZXR1cm4oKTsKICAgICAgICAgIH0KICAgICAgICB9IGZpbmFsbHkgewogICAgICAgICAgaWYgKF9kaWRJdGVyYXRvckVycm9yMikgewogICAgICAgICAgICB0aHJvdyBfaXRlcmF0b3JFcnJvcjI7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CgogICAgICByZXR1cm4gdGhpcy5maWx0ZXJOZXdNZW1iZXJNZXNzYWdlKGRhdGEpOwogICAgfSwKICAgIGZpbHRlck5ld01lbWJlck1lc3NhZ2U6IGZ1bmN0aW9uIGZpbHRlck5ld01lbWJlck1lc3NhZ2UoZGF0YSkgewogICAgICB2YXIgX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjMgPSB0cnVlOwogICAgICB2YXIgX2RpZEl0ZXJhdG9yRXJyb3IzID0gZmFsc2U7CiAgICAgIHZhciBfaXRlcmF0b3JFcnJvcjMgPSB1bmRlZmluZWQ7CgogICAgICB0cnkgewogICAgICAgIGZvciAodmFyIF9pdGVyYXRvcjMgPSB0aGlzLmJsb2NrVXNlcnNbU3ltYm9sLml0ZXJhdG9yXSgpLCBfc3RlcDM7ICEoX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjMgPSAoX3N0ZXAzID0gX2l0ZXJhdG9yMy5uZXh0KCkpLmRvbmUpOyBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uMyA9IHRydWUpIHsKICAgICAgICAgIHZhciB1c2VyID0gX3N0ZXAzLnZhbHVlOwoKICAgICAgICAgIGlmIChkYXRhLmF1dGhvck5hbWUgPT09IHVzZXIpIHsKICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgX2RpZEl0ZXJhdG9yRXJyb3IzID0gdHJ1ZTsKICAgICAgICBfaXRlcmF0b3JFcnJvcjMgPSBlcnI7CiAgICAgIH0gZmluYWxseSB7CiAgICAgICAgdHJ5IHsKICAgICAgICAgIGlmICghX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjMgJiYgX2l0ZXJhdG9yMy5yZXR1cm4gIT0gbnVsbCkgewogICAgICAgICAgICBfaXRlcmF0b3IzLnJldHVybigpOwogICAgICAgICAgfQogICAgICAgIH0gZmluYWxseSB7CiAgICAgICAgICBpZiAoX2RpZEl0ZXJhdG9yRXJyb3IzKSB7CiAgICAgICAgICAgIHRocm93IF9pdGVyYXRvckVycm9yMzsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KCiAgICAgIHJldHVybiB0cnVlOwogICAgfSwKICAgIG1lcmdlU2ltaWxhclRleHQ6IGZ1bmN0aW9uIG1lcmdlU2ltaWxhclRleHQoY29udGVudCkgewogICAgICBpZiAoIXRoaXMuY29uZmlnLm1lcmdlU2ltaWxhckRhbm1ha3UpIHsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0KCiAgICAgIHJldHVybiB0aGlzLiRyZWZzLnJlbmRlcmVyLm1lcmdlU2ltaWxhclRleHQoY29udGVudCk7CiAgICB9LAogICAgbWVyZ2VTaW1pbGFyT3RoZXI6IGZ1bmN0aW9uIG1lcmdlU2ltaWxhck90aGVyKGF1dGhvck5hbWUsIGNvbnRlbnQpIHsKICAgICAgaWYgKCF0aGlzLmNvbmZpZy5tZXJnZVNpbWlsYXJPdGhlcikgewogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfQoKICAgICAgcmV0dXJuIHRoaXMuJHJlZnMucmVuZGVyZXIubWVyZ2VTaW1pbGFyT3RoZXIoYXV0aG9yTmFtZSwgY29udGVudCk7CiAgICB9LAogICAgbWVyZ2VTaW1pbGFyR2lmdDogZnVuY3Rpb24gbWVyZ2VTaW1pbGFyR2lmdChhdXRob3JOYW1lLCBwcmljZSwgZ2lmdE5hbWUsIG51bSkgewogICAgICBpZiAoIXRoaXMuY29uZmlnLm1lcmdlR2lmdCkgewogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfQoKICAgICAgcmV0dXJuIHRoaXMuJHJlZnMucmVuZGVyZXIubWVyZ2VTaW1pbGFyR2lmdChhdXRob3JOYW1lLCBwcmljZSwgZ2lmdE5hbWUsIG51bSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["Room.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <chat-renderer ref=\"renderer\" :maxNumber=\"config.maxNumber\" :showGiftName=\"config.showGiftName\"  :showGiftPrice=\"config.showGiftPrice\"></chat-renderer>\n</template>\n\n<script>\nimport {mergeConfig, toBool, toInt} from '@/utils'\nimport * as config from '@/api/config'\nimport ChatRenderer from '@/components/ChatRenderer'\nimport * as constants from '@/components/ChatRenderer/constants'\n\nconst COMMAND_HEARTBEAT = 0\nconst COMMAND_JOIN_ROOM = 1\nconst COMMAND_ADD_TEXT = 2\nconst COMMAND_ADD_GIFT = 3\nconst COMMAND_ADD_MEMBER = 4\nconst COMMAND_ADD_SUPER_CHAT = 5\nconst COMMAND_DEL_SUPER_CHAT = 6\nconst COMMAND_UPDATE_TRANSLATION = 7\nconst COMMAND_ADD_LOVE = 8\nconst COMMAND_QUIT_ROOM = 9\nconst COMMAND_ADD_FOLLOW = 10\n\nexport default {\n  name: 'Room',\n  components: {\n    ChatRenderer\n  },\n  data() {\n    return {\n      config: {...config.DEFAULT_CONFIG},\n\n      websocket: null,\n      retryCount: 0,\n      isDestroying: false,\n      heartbeatTimerId: null\n    }\n  },\n  computed: {\n    blockKeywords() {\n      return this.config.blockKeywords.split('\\n').filter(val => val)\n    },\n    blockUsers() {\n      return this.config.blockUsers.split('\\n').filter(val => val)\n    }\n  },\n  created() {\n    this.updateConfig()\n    this.wsConnect()\n    // 提示用户已加载\n    this.$message({\n      message: 'Loaded',\n      duration: '500'\n    })\n  },\n  beforeDestroy() {\n    this.isDestroying = true\n    this.websocket.close()\n  },\n  methods: {\n    updateConfig() {\n      let cfg = {}\n      // 留空的使用默认值\n      for (let i in this.$route.query) {\n        if (this.$route.query[i] !== '') {\n          cfg[i] = this.$route.query[i]\n        }\n      }\n      cfg = mergeConfig(cfg, config.DEFAULT_CONFIG)\n      cfg.minGiftPrice = toInt(cfg.minGiftPrice, config.DEFAULT_CONFIG.minGiftPrice)\n      cfg.showDanmaku = toBool(cfg.showDanmaku)\n      cfg.showLove = toBool(cfg.showLove)\n      cfg.showFollow = toBool(cfg.showFollow)\n      cfg.showJoin = toBool(cfg.showJoin)\n      cfg.showQuit = toBool(cfg.showQuit)\n      cfg.showGift = toBool(cfg.showGift)\n      cfg.showGiftName = toBool(cfg.showGiftName)\n      cfg.showGiftPrice = toBool(cfg.showGiftPrice)\n      cfg.mergeSimilarDanmaku = toBool(cfg.mergeSimilarDanmaku)\n      cfg.mergeSimilarOther = toBool(cfg.mergeSimilarOther)\n      cfg.mergeGift = toBool(cfg.mergeGift)\n      cfg.maxNumber = toInt(cfg.maxNumber, config.DEFAULT_CONFIG.maxNumber)\n      cfg.blockGiftDanmaku = toBool(cfg.blockGiftDanmaku)\n      cfg.blockLevel = toInt(cfg.blockLevel, config.DEFAULT_CONFIG.blockLevel)\n      cfg.blockNewbie = toBool(cfg.blockNewbie)\n      cfg.blockNotMobileVerified = toBool(cfg.blockNotMobileVerified)\n      cfg.blockMedalLevel = toInt(cfg.blockMedalLevel, config.DEFAULT_CONFIG.blockMedalLevel)\n      cfg.autoTranslate = toBool(cfg.autoTranslate)\n\n      this.config = cfg\n    },\n    wsConnect() {\n      const protocol = window.location.protocol === 'https:' ? 'wss' : 'ws'\n      // 开发时使用localhost:12450\n      const host = process.env.NODE_ENV === 'development' ? 'localhost:12451' : window.location.host\n      const url = `${protocol}://${host}/chat`\n      this.websocket = new WebSocket(url)\n      this.websocket.onopen = this.onWsOpen\n      this.websocket.onclose = this.onWsClose\n      this.websocket.onmessage = this.onWsMessage\n      this.heartbeatTimerId = window.setInterval(this.sendHeartbeat, 10 * 1000)\n    },\n    sendHeartbeat() {\n      this.websocket.send(JSON.stringify({\n        cmd: COMMAND_HEARTBEAT\n      }))\n    },\n    onWsOpen() {\n      this.retryCount = 0\n      this.websocket.send(JSON.stringify({\n        cmd: COMMAND_JOIN_ROOM,\n        data: {\n          roomId: parseInt(this.$route.params.roomId),\n          config: {\n            autoTranslate: this.config.autoTranslate\n          }\n        }\n      }))\n    },\n    onWsClose() {\n      if (this.heartbeatTimerId) {\n        window.clearInterval(this.heartbeatTimerId)\n        this.heartbeatTimerId = null\n      }\n      if (this.isDestroying) {\n        return\n      }\n      window.console.log(`掉线重连中${++this.retryCount}`)\n      this.wsConnect()\n    },\n    onWsMessage(event) {\n      let {cmd, data} = JSON.parse(event.data)\n      let message = null\n      switch (cmd) {\n      case COMMAND_JOIN_ROOM:\n        if (!this.config.showJoin || this.mergeSimilarOther(data.authorName, data.content)) {\n          break\n        }\n        message = {\n          id: data.id,\n          type: constants.MESSAGE_TYPE_JOIN,\n          avatarUrl: data.avatarUrl,\n          time: new Date(data.timestamp * 1000),\n          authorName: data.authorName,\n          authorType: data.authorType,\n          content: data.content,\n          privilegeType: data.privilegeType,\n          repeated: 1,\n          translation: data.translation\n        }\n        break\n      case COMMAND_QUIT_ROOM:\n        if (!this.config.showQuit || this.mergeSimilarOther(data.authorName, data.content)) {\n          break\n        }\n        message = {\n          id: data.id,\n          type: constants.MESSAGE_TYPE_QUIT,\n          avatarUrl: data.avatarUrl,\n          time: new Date(data.timestamp * 1000),\n          authorName: data.authorName,\n          authorType: data.authorType,\n          content: data.content,\n          privilegeType: data.privilegeType,\n          repeated: 1,\n          translation: data.translation\n        }\n        break\n      case COMMAND_ADD_TEXT:\n        if (!this.config.showDanmaku || !this.filterTextMessage(data) || this.mergeSimilarText(data.content)) {\n          break\n        }\n        message = {\n          id: data.id,\n          type: constants.MESSAGE_TYPE_TEXT,\n          avatarUrl: data.avatarUrl,\n          time: new Date(data.timestamp * 1000),\n          authorName: data.authorName,\n          authorType: data.authorType,\n          content: data.content,\n          privilegeType: data.privilegeType,\n          repeated: 1,\n          translation: data.translation\n        }\n        break\n      case COMMAND_ADD_GIFT: {\n        if (!this.config.showGift) {\n          break\n        }\n        let price = data.totalCoin / 1000\n        if (this.mergeSimilarGift(data.authorName, price, data.giftName, data.num)) {\n          break\n        }\n        if (price < this.config.minGiftPrice) { // 丢人\n          break\n        }\n        message = {\n          id: data.id,\n          type: constants.MESSAGE_TYPE_GIFT,\n          avatarUrl: data.avatarUrl,\n          time: new Date(data.timestamp * 1000),\n          authorName: data.authorName,\n          price: price,\n          giftName: data.giftName,\n          num: data.num\n        }\n        break\n      }\n      case COMMAND_ADD_LOVE: {\n        if (!this.config.showLove || this.mergeSimilarOther(data.authorName, data.content)) {\n          break\n        }\n        message = {\n          id: data.id,\n          type: constants.MESSAGE_TYPE_LOVE,\n          avatarUrl: data.avatarUrl,\n          time: new Date(data.timestamp * 1000),\n          authorName: data.authorName,\n          authorType: data.authorType,\n          content: data.content,\n          price: 0,\n          repeated: 1,\n          giftName: data.giftName,\n          num: data.num\n        }\n        break\n      }\n      case COMMAND_ADD_FOLLOW: {\n        if (!this.config.showFollow) {\n          break\n        }\n        message = {\n          id: data.id,\n          type: constants.MESSAGE_TYPE_FOLLOW,\n          avatarUrl: data.avatarUrl,\n          time: new Date(data.timestamp * 1000),\n          authorName: data.authorName,\n          content: data.content,\n          price: 0,\n          giftName: data.giftName,\n          num: data.num\n        }\n        break\n      }\n      case COMMAND_ADD_MEMBER:\n        if (!this.config.showGift || !this.filterNewMemberMessage(data)) {\n          break\n        }\n        message = {\n          id: data.id,\n          type: constants.MESSAGE_TYPE_MEMBER,\n          avatarUrl: data.avatarUrl,\n          time: new Date(data.timestamp * 1000),\n          authorName: data.authorName,\n          title: 'NEW MEMBER!',\n          content: `Welcome ${data.authorName}!`\n        }\n        break\n      case COMMAND_ADD_SUPER_CHAT:\n        if (!this.config.showGift || !this.filterSuperChatMessage(data)) {\n          break\n        }\n        if (data.price < this.config.minGiftPrice) { // 丢人\n          break\n        }\n        message = {\n          id: data.id,\n          type: constants.MESSAGE_TYPE_SUPER_CHAT,\n          avatarUrl: data.avatarUrl,\n          authorName: data.authorName,\n          price: data.price,\n          time: new Date(data.timestamp * 1000),\n          content: data.content.trim()\n        }\n        break\n      case COMMAND_DEL_SUPER_CHAT:\n        for (let id of data.ids) {\n          this.$refs.renderer.delMessage(id)\n        }\n        break\n      case COMMAND_UPDATE_TRANSLATION:\n        if (!this.config.autoTranslate) {\n          break\n        }\n        data = {\n          id: data[0],\n          translation: data[1]\n        }\n        this.$refs.renderer.updateMessage(data.id, {translation: data.translation})\n        break\n      }\n      if (message) {\n        this.$refs.renderer.addMessage(message)\n      }\n    \n    },\n    filterTextMessage(data) {\n      if (this.config.blockGiftDanmaku && data.isGiftDanmaku) {\n        return false\n      } else if (this.config.blockLevel > 0 && data.authorLevel < this.config.blockLevel) {\n        return false\n      } else if (this.config.blockNewbie && data.isNewbie) {\n        return false\n      } else if (this.config.blockNotMobileVerified && !data.isMobileVerified) {\n        return false\n      } else if (this.config.blockMedalLevel > 0 && data.medalLevel < this.config.blockMedalLevel) {\n        return false\n      }\n      return this.filterSuperChatMessage(data)\n    },\n    filterSuperChatMessage(data) {\n      for (let keyword of this.blockKeywords) {\n        if (data.content.indexOf(keyword) !== -1) {\n          return false\n        }\n      }\n      return this.filterNewMemberMessage(data)\n    },\n    filterNewMemberMessage(data) {\n      for (let user of this.blockUsers) {\n        if (data.authorName === user) {\n          return false\n        }\n      }\n      return true\n    },\n    mergeSimilarText(content) {\n      if (!this.config.mergeSimilarDanmaku) {\n        return false\n      }\n      return this.$refs.renderer.mergeSimilarText(content)\n    },\n    mergeSimilarOther(authorName, content) {\n      if (!this.config.mergeSimilarOther) {\n        return false\n      }\n      return this.$refs.renderer.mergeSimilarOther(authorName, content)\n    },\n    mergeSimilarGift(authorName, price, giftName, num) {\n      if (!this.config.mergeGift) {\n        return false\n      }\n      return this.$refs.renderer.mergeSimilarGift(authorName, price, giftName, num)\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views"}]}