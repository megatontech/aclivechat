// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.4
// source: Im.proto

package acproto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Basic_SharePlatform int32

const (
	Basic_kSharePlatformInvalid       Basic_SharePlatform = 0
	Basic_kSharePlatformWechat        Basic_SharePlatform = 1
	Basic_kSharePlatformWechatMoments Basic_SharePlatform = 2
	Basic_kSharePlatformQQ            Basic_SharePlatform = 3
	Basic_kSharePlatformQzone         Basic_SharePlatform = 4
	Basic_kSharePlatformWeibo         Basic_SharePlatform = 5
	Basic_kSharePlatformKuaishou      Basic_SharePlatform = 6
	Basic_kSharePlatformFacebook      Basic_SharePlatform = 7
	Basic_kSharePlatformTwitter       Basic_SharePlatform = 8
	Basic_kSharePlatformGoogle        Basic_SharePlatform = 9
	Basic_kSharePlatformKakao         Basic_SharePlatform = 10
	Basic_kSharePlatformZalo          Basic_SharePlatform = 11
)

// Enum value maps for Basic_SharePlatform.
var (
	Basic_SharePlatform_name = map[int32]string{
		0:  "kSharePlatformInvalid",
		1:  "kSharePlatformWechat",
		2:  "kSharePlatformWechatMoments",
		3:  "kSharePlatformQQ",
		4:  "kSharePlatformQzone",
		5:  "kSharePlatformWeibo",
		6:  "kSharePlatformKuaishou",
		7:  "kSharePlatformFacebook",
		8:  "kSharePlatformTwitter",
		9:  "kSharePlatformGoogle",
		10: "kSharePlatformKakao",
		11: "kSharePlatformZalo",
	}
	Basic_SharePlatform_value = map[string]int32{
		"kSharePlatformInvalid":       0,
		"kSharePlatformWechat":        1,
		"kSharePlatformWechatMoments": 2,
		"kSharePlatformQQ":            3,
		"kSharePlatformQzone":         4,
		"kSharePlatformWeibo":         5,
		"kSharePlatformKuaishou":      6,
		"kSharePlatformFacebook":      7,
		"kSharePlatformTwitter":       8,
		"kSharePlatformGoogle":        9,
		"kSharePlatformKakao":         10,
		"kSharePlatformZalo":          11,
	}
)

func (x Basic_SharePlatform) Enum() *Basic_SharePlatform {
	p := new(Basic_SharePlatform)
	*p = x
	return p
}

func (x Basic_SharePlatform) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Basic_SharePlatform) Descriptor() protoreflect.EnumDescriptor {
	return file_Im_proto_enumTypes[0].Descriptor()
}

func (Basic_SharePlatform) Type() protoreflect.EnumType {
	return &file_Im_proto_enumTypes[0]
}

func (x Basic_SharePlatform) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Basic_SharePlatform.Descriptor instead.
func (Basic_SharePlatform) EnumDescriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{0, 0}
}

type Basic_PacketHeader_Flags int32

const (
	Basic_PacketHeader_kDirUpstream   Basic_PacketHeader_Flags = 0
	Basic_PacketHeader_kDirDownstream Basic_PacketHeader_Flags = 1
	Basic_PacketHeader_kDirMask       Basic_PacketHeader_Flags = 1
)

// Enum value maps for Basic_PacketHeader_Flags.
var (
	Basic_PacketHeader_Flags_name = map[int32]string{
		0: "kDirUpstream",
		1: "kDirDownstream",
		// Duplicate value: 1: "kDirMask",
	}
	Basic_PacketHeader_Flags_value = map[string]int32{
		"kDirUpstream":   0,
		"kDirDownstream": 1,
		"kDirMask":       1,
	}
)

func (x Basic_PacketHeader_Flags) Enum() *Basic_PacketHeader_Flags {
	p := new(Basic_PacketHeader_Flags)
	*p = x
	return p
}

func (x Basic_PacketHeader_Flags) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Basic_PacketHeader_Flags) Descriptor() protoreflect.EnumDescriptor {
	return file_Im_proto_enumTypes[1].Descriptor()
}

func (Basic_PacketHeader_Flags) Type() protoreflect.EnumType {
	return &file_Im_proto_enumTypes[1]
}

func (x Basic_PacketHeader_Flags) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Basic_PacketHeader_Flags.Descriptor instead.
func (Basic_PacketHeader_Flags) EnumDescriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{0, 0, 0}
}

type Basic_PacketHeader_EncodingType int32

const (
	Basic_PacketHeader_kEncodingNone Basic_PacketHeader_EncodingType = 0
	Basic_PacketHeader_kEncodingLz4  Basic_PacketHeader_EncodingType = 1
)

// Enum value maps for Basic_PacketHeader_EncodingType.
var (
	Basic_PacketHeader_EncodingType_name = map[int32]string{
		0: "kEncodingNone",
		1: "kEncodingLz4",
	}
	Basic_PacketHeader_EncodingType_value = map[string]int32{
		"kEncodingNone": 0,
		"kEncodingLz4":  1,
	}
)

func (x Basic_PacketHeader_EncodingType) Enum() *Basic_PacketHeader_EncodingType {
	p := new(Basic_PacketHeader_EncodingType)
	*p = x
	return p
}

func (x Basic_PacketHeader_EncodingType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Basic_PacketHeader_EncodingType) Descriptor() protoreflect.EnumDescriptor {
	return file_Im_proto_enumTypes[2].Descriptor()
}

func (Basic_PacketHeader_EncodingType) Type() protoreflect.EnumType {
	return &file_Im_proto_enumTypes[2]
}

func (x Basic_PacketHeader_EncodingType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Basic_PacketHeader_EncodingType.Descriptor instead.
func (Basic_PacketHeader_EncodingType) EnumDescriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{0, 0, 1}
}

type Basic_PacketHeader_EncryptionMode int32

const (
	Basic_PacketHeader_kEncryptionNone         Basic_PacketHeader_EncryptionMode = 0
	Basic_PacketHeader_kEncryptionServiceToken Basic_PacketHeader_EncryptionMode = 1
	Basic_PacketHeader_kEncryptionSessionKey   Basic_PacketHeader_EncryptionMode = 2
)

// Enum value maps for Basic_PacketHeader_EncryptionMode.
var (
	Basic_PacketHeader_EncryptionMode_name = map[int32]string{
		0: "kEncryptionNone",
		1: "kEncryptionServiceToken",
		2: "kEncryptionSessionKey",
	}
	Basic_PacketHeader_EncryptionMode_value = map[string]int32{
		"kEncryptionNone":         0,
		"kEncryptionServiceToken": 1,
		"kEncryptionSessionKey":   2,
	}
)

func (x Basic_PacketHeader_EncryptionMode) Enum() *Basic_PacketHeader_EncryptionMode {
	p := new(Basic_PacketHeader_EncryptionMode)
	*p = x
	return p
}

func (x Basic_PacketHeader_EncryptionMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Basic_PacketHeader_EncryptionMode) Descriptor() protoreflect.EnumDescriptor {
	return file_Im_proto_enumTypes[3].Descriptor()
}

func (Basic_PacketHeader_EncryptionMode) Type() protoreflect.EnumType {
	return &file_Im_proto_enumTypes[3]
}

func (x Basic_PacketHeader_EncryptionMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Basic_PacketHeader_EncryptionMode.Descriptor instead.
func (Basic_PacketHeader_EncryptionMode) EnumDescriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{0, 0, 2}
}

type Basic_PacketHeader_Feature int32

const (
	Basic_PacketHeader_kReserve     Basic_PacketHeader_Feature = 0
	Basic_PacketHeader_kCompressLz4 Basic_PacketHeader_Feature = 1
)

// Enum value maps for Basic_PacketHeader_Feature.
var (
	Basic_PacketHeader_Feature_name = map[int32]string{
		0: "kReserve",
		1: "kCompressLz4",
	}
	Basic_PacketHeader_Feature_value = map[string]int32{
		"kReserve":     0,
		"kCompressLz4": 1,
	}
)

func (x Basic_PacketHeader_Feature) Enum() *Basic_PacketHeader_Feature {
	p := new(Basic_PacketHeader_Feature)
	*p = x
	return p
}

func (x Basic_PacketHeader_Feature) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Basic_PacketHeader_Feature) Descriptor() protoreflect.EnumDescriptor {
	return file_Im_proto_enumTypes[4].Descriptor()
}

func (Basic_PacketHeader_Feature) Type() protoreflect.EnumType {
	return &file_Im_proto_enumTypes[4]
}

func (x Basic_PacketHeader_Feature) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Basic_PacketHeader_Feature.Descriptor instead.
func (Basic_PacketHeader_Feature) EnumDescriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{0, 0, 3}
}

type Basic_PingRequest_PingType int32

const (
	Basic_PingRequest_kInvalid       Basic_PingRequest_PingType = 0
	Basic_PingRequest_kPriorRegister Basic_PingRequest_PingType = 1
	Basic_PingRequest_kPostRegister  Basic_PingRequest_PingType = 2
)

// Enum value maps for Basic_PingRequest_PingType.
var (
	Basic_PingRequest_PingType_name = map[int32]string{
		0: "kInvalid",
		1: "kPriorRegister",
		2: "kPostRegister",
	}
	Basic_PingRequest_PingType_value = map[string]int32{
		"kInvalid":       0,
		"kPriorRegister": 1,
		"kPostRegister":  2,
	}
)

func (x Basic_PingRequest_PingType) Enum() *Basic_PingRequest_PingType {
	p := new(Basic_PingRequest_PingType)
	*p = x
	return p
}

func (x Basic_PingRequest_PingType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Basic_PingRequest_PingType) Descriptor() protoreflect.EnumDescriptor {
	return file_Im_proto_enumTypes[5].Descriptor()
}

func (Basic_PingRequest_PingType) Type() protoreflect.EnumType {
	return &file_Im_proto_enumTypes[5]
}

func (x Basic_PingRequest_PingType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Basic_PingRequest_PingType.Descriptor instead.
func (Basic_PingRequest_PingType) EnumDescriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{0, 5, 0}
}

type Basic_RegisterRequest_PresenceStatus int32

const (
	Basic_RegisterRequest_kPresenceOffline Basic_RegisterRequest_PresenceStatus = 0
	Basic_RegisterRequest_kPresenceOnline  Basic_RegisterRequest_PresenceStatus = 1
)

// Enum value maps for Basic_RegisterRequest_PresenceStatus.
var (
	Basic_RegisterRequest_PresenceStatus_name = map[int32]string{
		0: "kPresenceOffline",
		1: "kPresenceOnline",
	}
	Basic_RegisterRequest_PresenceStatus_value = map[string]int32{
		"kPresenceOffline": 0,
		"kPresenceOnline":  1,
	}
)

func (x Basic_RegisterRequest_PresenceStatus) Enum() *Basic_RegisterRequest_PresenceStatus {
	p := new(Basic_RegisterRequest_PresenceStatus)
	*p = x
	return p
}

func (x Basic_RegisterRequest_PresenceStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Basic_RegisterRequest_PresenceStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_Im_proto_enumTypes[6].Descriptor()
}

func (Basic_RegisterRequest_PresenceStatus) Type() protoreflect.EnumType {
	return &file_Im_proto_enumTypes[6]
}

func (x Basic_RegisterRequest_PresenceStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Basic_RegisterRequest_PresenceStatus.Descriptor instead.
func (Basic_RegisterRequest_PresenceStatus) EnumDescriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{0, 7, 0}
}

type Basic_RegisterRequest_ActiveStatus int32

const (
	Basic_RegisterRequest_kInvalid         Basic_RegisterRequest_ActiveStatus = 0
	Basic_RegisterRequest_kAppInForeground Basic_RegisterRequest_ActiveStatus = 1
	Basic_RegisterRequest_kAppinBackground Basic_RegisterRequest_ActiveStatus = 2
)

// Enum value maps for Basic_RegisterRequest_ActiveStatus.
var (
	Basic_RegisterRequest_ActiveStatus_name = map[int32]string{
		0: "kInvalid",
		1: "kAppInForeground",
		2: "kAppinBackground",
	}
	Basic_RegisterRequest_ActiveStatus_value = map[string]int32{
		"kInvalid":         0,
		"kAppInForeground": 1,
		"kAppinBackground": 2,
	}
)

func (x Basic_RegisterRequest_ActiveStatus) Enum() *Basic_RegisterRequest_ActiveStatus {
	p := new(Basic_RegisterRequest_ActiveStatus)
	*p = x
	return p
}

func (x Basic_RegisterRequest_ActiveStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Basic_RegisterRequest_ActiveStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_Im_proto_enumTypes[7].Descriptor()
}

func (Basic_RegisterRequest_ActiveStatus) Type() protoreflect.EnumType {
	return &file_Im_proto_enumTypes[7]
}

func (x Basic_RegisterRequest_ActiveStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Basic_RegisterRequest_ActiveStatus.Descriptor instead.
func (Basic_RegisterRequest_ActiveStatus) EnumDescriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{0, 7, 1}
}

type Basic_AccessPoint_AddressType int32

const (
	Basic_AccessPoint_kIPV4   Basic_AccessPoint_AddressType = 0
	Basic_AccessPoint_kIPV6   Basic_AccessPoint_AddressType = 1
	Basic_AccessPoint_kDomain Basic_AccessPoint_AddressType = 2
)

// Enum value maps for Basic_AccessPoint_AddressType.
var (
	Basic_AccessPoint_AddressType_name = map[int32]string{
		0: "kIPV4",
		1: "kIPV6",
		2: "kDomain",
	}
	Basic_AccessPoint_AddressType_value = map[string]int32{
		"kIPV4":   0,
		"kIPV6":   1,
		"kDomain": 2,
	}
)

func (x Basic_AccessPoint_AddressType) Enum() *Basic_AccessPoint_AddressType {
	p := new(Basic_AccessPoint_AddressType)
	*p = x
	return p
}

func (x Basic_AccessPoint_AddressType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Basic_AccessPoint_AddressType) Descriptor() protoreflect.EnumDescriptor {
	return file_Im_proto_enumTypes[8].Descriptor()
}

func (Basic_AccessPoint_AddressType) Type() protoreflect.EnumType {
	return &file_Im_proto_enumTypes[8]
}

func (x Basic_AccessPoint_AddressType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Basic_AccessPoint_AddressType.Descriptor instead.
func (Basic_AccessPoint_AddressType) EnumDescriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{0, 14, 0}
}

type Basic_TokenInfo_TokenType int32

const (
	Basic_TokenInfo_kInvalid      Basic_TokenInfo_TokenType = 0
	Basic_TokenInfo_kServiceToken Basic_TokenInfo_TokenType = 1
)

// Enum value maps for Basic_TokenInfo_TokenType.
var (
	Basic_TokenInfo_TokenType_name = map[int32]string{
		0: "kInvalid",
		1: "kServiceToken",
	}
	Basic_TokenInfo_TokenType_value = map[string]int32{
		"kInvalid":      0,
		"kServiceToken": 1,
	}
)

func (x Basic_TokenInfo_TokenType) Enum() *Basic_TokenInfo_TokenType {
	p := new(Basic_TokenInfo_TokenType)
	*p = x
	return p
}

func (x Basic_TokenInfo_TokenType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Basic_TokenInfo_TokenType) Descriptor() protoreflect.EnumDescriptor {
	return file_Im_proto_enumTypes[9].Descriptor()
}

func (Basic_TokenInfo_TokenType) Type() protoreflect.EnumType {
	return &file_Im_proto_enumTypes[9]
}

func (x Basic_TokenInfo_TokenType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Basic_TokenInfo_TokenType.Descriptor instead.
func (Basic_TokenInfo_TokenType) EnumDescriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{0, 15, 0}
}

type Basic_PushServiceToken_PushType int32

const (
	Basic_PushServiceToken_kPushTypeInvalid Basic_PushServiceToken_PushType = 0
	Basic_PushServiceToken_kPushTypeAPNS    Basic_PushServiceToken_PushType = 1
	Basic_PushServiceToken_kPushTypeXmPush  Basic_PushServiceToken_PushType = 2
	Basic_PushServiceToken_kPushTypeJgPush  Basic_PushServiceToken_PushType = 3
	Basic_PushServiceToken_kPushTypeGtPUsh  Basic_PushServiceToken_PushType = 4
	Basic_PushServiceToken_kPushTypeOpPush  Basic_PushServiceToken_PushType = 5
	Basic_PushServiceToken_kPushTYpeVvPush  Basic_PushServiceToken_PushType = 6
	Basic_PushServiceToken_kPushTypeHwPush  Basic_PushServiceToken_PushType = 7
	Basic_PushServiceToken_kPushTYpeFcm     Basic_PushServiceToken_PushType = 8
)

// Enum value maps for Basic_PushServiceToken_PushType.
var (
	Basic_PushServiceToken_PushType_name = map[int32]string{
		0: "kPushTypeInvalid",
		1: "kPushTypeAPNS",
		2: "kPushTypeXmPush",
		3: "kPushTypeJgPush",
		4: "kPushTypeGtPUsh",
		5: "kPushTypeOpPush",
		6: "kPushTYpeVvPush",
		7: "kPushTypeHwPush",
		8: "kPushTYpeFcm",
	}
	Basic_PushServiceToken_PushType_value = map[string]int32{
		"kPushTypeInvalid": 0,
		"kPushTypeAPNS":    1,
		"kPushTypeXmPush":  2,
		"kPushTypeJgPush":  3,
		"kPushTypeGtPUsh":  4,
		"kPushTypeOpPush":  5,
		"kPushTYpeVvPush":  6,
		"kPushTypeHwPush":  7,
		"kPushTYpeFcm":     8,
	}
)

func (x Basic_PushServiceToken_PushType) Enum() *Basic_PushServiceToken_PushType {
	p := new(Basic_PushServiceToken_PushType)
	*p = x
	return p
}

func (x Basic_PushServiceToken_PushType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Basic_PushServiceToken_PushType) Descriptor() protoreflect.EnumDescriptor {
	return file_Im_proto_enumTypes[10].Descriptor()
}

func (Basic_PushServiceToken_PushType) Type() protoreflect.EnumType {
	return &file_Im_proto_enumTypes[10]
}

func (x Basic_PushServiceToken_PushType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Basic_PushServiceToken_PushType.Descriptor instead.
func (Basic_PushServiceToken_PushType) EnumDescriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{0, 16, 0}
}

type Basic_DeviceInfo_PlatformType int32

const (
	Basic_DeviceInfo_kInvalid       Basic_DeviceInfo_PlatformType = 0
	Basic_DeviceInfo_kAndroid       Basic_DeviceInfo_PlatformType = 1
	Basic_DeviceInfo_kiOS           Basic_DeviceInfo_PlatformType = 2
	Basic_DeviceInfo_kWindows       Basic_DeviceInfo_PlatformType = 3
	Basic_DeviceInfo_WECHAT_ANDROID Basic_DeviceInfo_PlatformType = 4
	Basic_DeviceInfo_WECHAT_IOS     Basic_DeviceInfo_PlatformType = 5
	Basic_DeviceInfo_H5             Basic_DeviceInfo_PlatformType = 6
	Basic_DeviceInfo_kPlatformNum   Basic_DeviceInfo_PlatformType = 7
)

// Enum value maps for Basic_DeviceInfo_PlatformType.
var (
	Basic_DeviceInfo_PlatformType_name = map[int32]string{
		0: "kInvalid",
		1: "kAndroid",
		2: "kiOS",
		3: "kWindows",
		4: "WECHAT_ANDROID",
		5: "WECHAT_IOS",
		6: "H5",
		7: "kPlatformNum",
	}
	Basic_DeviceInfo_PlatformType_value = map[string]int32{
		"kInvalid":       0,
		"kAndroid":       1,
		"kiOS":           2,
		"kWindows":       3,
		"WECHAT_ANDROID": 4,
		"WECHAT_IOS":     5,
		"H5":             6,
		"kPlatformNum":   7,
	}
)

func (x Basic_DeviceInfo_PlatformType) Enum() *Basic_DeviceInfo_PlatformType {
	p := new(Basic_DeviceInfo_PlatformType)
	*p = x
	return p
}

func (x Basic_DeviceInfo_PlatformType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Basic_DeviceInfo_PlatformType) Descriptor() protoreflect.EnumDescriptor {
	return file_Im_proto_enumTypes[11].Descriptor()
}

func (Basic_DeviceInfo_PlatformType) Type() protoreflect.EnumType {
	return &file_Im_proto_enumTypes[11]
}

func (x Basic_DeviceInfo_PlatformType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Basic_DeviceInfo_PlatformType.Descriptor instead.
func (Basic_DeviceInfo_PlatformType) EnumDescriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{0, 19, 0}
}

type Basic_EnvInfo_NetworkType int32

const (
	Basic_EnvInfo_kInvalid  Basic_EnvInfo_NetworkType = 0
	Basic_EnvInfo_kWIFI     Basic_EnvInfo_NetworkType = 1
	Basic_EnvInfo_kCellular Basic_EnvInfo_NetworkType = 2
)

// Enum value maps for Basic_EnvInfo_NetworkType.
var (
	Basic_EnvInfo_NetworkType_name = map[int32]string{
		0: "kInvalid",
		1: "kWIFI",
		2: "kCellular",
	}
	Basic_EnvInfo_NetworkType_value = map[string]int32{
		"kInvalid":  0,
		"kWIFI":     1,
		"kCellular": 2,
	}
)

func (x Basic_EnvInfo_NetworkType) Enum() *Basic_EnvInfo_NetworkType {
	p := new(Basic_EnvInfo_NetworkType)
	*p = x
	return p
}

func (x Basic_EnvInfo_NetworkType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Basic_EnvInfo_NetworkType) Descriptor() protoreflect.EnumDescriptor {
	return file_Im_proto_enumTypes[12].Descriptor()
}

func (Basic_EnvInfo_NetworkType) Type() protoreflect.EnumType {
	return &file_Im_proto_enumTypes[12]
}

func (x Basic_EnvInfo_NetworkType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Basic_EnvInfo_NetworkType.Descriptor instead.
func (Basic_EnvInfo_NetworkType) EnumDescriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{0, 20, 0}
}

type Message_KsUserRelationShip int32

const (
	Message_kUNKNOW           Message_KsUserRelationShip = 0
	Message_FOLLOW_EACH_OTHER Message_KsUserRelationShip = 1
	Message_TO_FOLLOW_FROM    Message_KsUserRelationShip = 2
	Message_FROM_FOLLOW_TO    Message_KsUserRelationShip = 3
)

// Enum value maps for Message_KsUserRelationShip.
var (
	Message_KsUserRelationShip_name = map[int32]string{
		0: "kUNKNOW",
		1: "FOLLOW_EACH_OTHER",
		2: "TO_FOLLOW_FROM",
		3: "FROM_FOLLOW_TO",
	}
	Message_KsUserRelationShip_value = map[string]int32{
		"kUNKNOW":           0,
		"FOLLOW_EACH_OTHER": 1,
		"TO_FOLLOW_FROM":    2,
		"FROM_FOLLOW_TO":    3,
	}
)

func (x Message_KsUserRelationShip) Enum() *Message_KsUserRelationShip {
	p := new(Message_KsUserRelationShip)
	*p = x
	return p
}

func (x Message_KsUserRelationShip) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Message_KsUserRelationShip) Descriptor() protoreflect.EnumDescriptor {
	return file_Im_proto_enumTypes[13].Descriptor()
}

func (Message_KsUserRelationShip) Type() protoreflect.EnumType {
	return &file_Im_proto_enumTypes[13]
}

func (x Message_KsUserRelationShip) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Message_KsUserRelationShip.Descriptor instead.
func (Message_KsUserRelationShip) EnumDescriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 0}
}

type Message_AccountType int32

const (
	Message_UNKNOWN  Message_AccountType = 0
	Message_OFFICIAL Message_AccountType = 1
	Message_NORMAL   Message_AccountType = 2
	Message_STRANGER Message_AccountType = 3
)

// Enum value maps for Message_AccountType.
var (
	Message_AccountType_name = map[int32]string{
		0: "UNKNOWN",
		1: "OFFICIAL",
		2: "NORMAL",
		3: "STRANGER",
	}
	Message_AccountType_value = map[string]int32{
		"UNKNOWN":  0,
		"OFFICIAL": 1,
		"NORMAL":   2,
		"STRANGER": 3,
	}
)

func (x Message_AccountType) Enum() *Message_AccountType {
	p := new(Message_AccountType)
	*p = x
	return p
}

func (x Message_AccountType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Message_AccountType) Descriptor() protoreflect.EnumDescriptor {
	return file_Im_proto_enumTypes[14].Descriptor()
}

func (Message_AccountType) Type() protoreflect.EnumType {
	return &file_Im_proto_enumTypes[14]
}

func (x Message_AccountType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Message_AccountType.Descriptor instead.
func (Message_AccountType) EnumDescriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 1}
}

type Message_ChatTargetType int32

const (
	Message_CTT_USER              Message_ChatTargetType = 0
	Message_CTT_CHAT_ROOM         Message_ChatTargetType = 2
	Message_CTT_MULTI_PLAYER_ROOM Message_ChatTargetType = 3
	Message_CTT_GROUP             Message_ChatTargetType = 4
	Message_CTT_CHANNEL           Message_ChatTargetType = 5
	Message_CTT_AGGREGATE         Message_ChatTargetType = 6
)

// Enum value maps for Message_ChatTargetType.
var (
	Message_ChatTargetType_name = map[int32]string{
		0: "CTT_USER",
		2: "CTT_CHAT_ROOM",
		3: "CTT_MULTI_PLAYER_ROOM",
		4: "CTT_GROUP",
		5: "CTT_CHANNEL",
		6: "CTT_AGGREGATE",
	}
	Message_ChatTargetType_value = map[string]int32{
		"CTT_USER":              0,
		"CTT_CHAT_ROOM":         2,
		"CTT_MULTI_PLAYER_ROOM": 3,
		"CTT_GROUP":             4,
		"CTT_CHANNEL":           5,
		"CTT_AGGREGATE":         6,
	}
)

func (x Message_ChatTargetType) Enum() *Message_ChatTargetType {
	p := new(Message_ChatTargetType)
	*p = x
	return p
}

func (x Message_ChatTargetType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Message_ChatTargetType) Descriptor() protoreflect.EnumDescriptor {
	return file_Im_proto_enumTypes[15].Descriptor()
}

func (Message_ChatTargetType) Type() protoreflect.EnumType {
	return &file_Im_proto_enumTypes[15]
}

func (x Message_ChatTargetType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Message_ChatTargetType.Descriptor instead.
func (Message_ChatTargetType) EnumDescriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 2}
}

type Message_SystemUser int32

const (
	Message_kSystemUserInvalid Message_SystemUser = 0
	Message_SYSTEM_USER_ID     Message_SystemUser = 10000
)

// Enum value maps for Message_SystemUser.
var (
	Message_SystemUser_name = map[int32]string{
		0:     "kSystemUserInvalid",
		10000: "SYSTEM_USER_ID",
	}
	Message_SystemUser_value = map[string]int32{
		"kSystemUserInvalid": 0,
		"SYSTEM_USER_ID":     10000,
	}
)

func (x Message_SystemUser) Enum() *Message_SystemUser {
	p := new(Message_SystemUser)
	*p = x
	return p
}

func (x Message_SystemUser) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Message_SystemUser) Descriptor() protoreflect.EnumDescriptor {
	return file_Im_proto_enumTypes[16].Descriptor()
}

func (Message_SystemUser) Type() protoreflect.EnumType {
	return &file_Im_proto_enumTypes[16]
}

func (x Message_SystemUser) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Message_SystemUser.Descriptor instead.
func (Message_SystemUser) EnumDescriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 3}
}

type Message_RemindBody_RemindType int32

const (
	Message_RemindBody_UNKNOWN            Message_RemindBody_RemindType = 0
	Message_RemindBody_AT_ALL             Message_RemindBody_RemindType = 1
	Message_RemindBody_AT_USER            Message_RemindBody_RemindType = 2
	Message_RemindBody_GROUP_BULLETIN     Message_RemindBody_RemindType = 3
	Message_RemindBody_RECEIPT_MESSAGE    Message_RemindBody_RemindType = 4
	Message_RemindBody_GROUP_JOIN_REQUEST Message_RemindBody_RemindType = 5
)

// Enum value maps for Message_RemindBody_RemindType.
var (
	Message_RemindBody_RemindType_name = map[int32]string{
		0: "UNKNOWN",
		1: "AT_ALL",
		2: "AT_USER",
		3: "GROUP_BULLETIN",
		4: "RECEIPT_MESSAGE",
		5: "GROUP_JOIN_REQUEST",
	}
	Message_RemindBody_RemindType_value = map[string]int32{
		"UNKNOWN":            0,
		"AT_ALL":             1,
		"AT_USER":            2,
		"GROUP_BULLETIN":     3,
		"RECEIPT_MESSAGE":    4,
		"GROUP_JOIN_REQUEST": 5,
	}
)

func (x Message_RemindBody_RemindType) Enum() *Message_RemindBody_RemindType {
	p := new(Message_RemindBody_RemindType)
	*p = x
	return p
}

func (x Message_RemindBody_RemindType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Message_RemindBody_RemindType) Descriptor() protoreflect.EnumDescriptor {
	return file_Im_proto_enumTypes[17].Descriptor()
}

func (Message_RemindBody_RemindType) Type() protoreflect.EnumType {
	return &file_Im_proto_enumTypes[17]
}

func (x Message_RemindBody_RemindType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Message_RemindBody_RemindType.Descriptor instead.
func (Message_RemindBody_RemindType) EnumDescriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 9, 0}
}

type Cloud_Channel_UserAction int32

const (
	Cloud_Channel_USER_ACTION_UNKNOWN Cloud_Channel_UserAction = 0
	Cloud_Channel_USER_JOIN_CHANNEL   Cloud_Channel_UserAction = 1
	Cloud_Channel_USER_QUIT_CHANNEL   Cloud_Channel_UserAction = 2
	Cloud_Channel_USER_OFFLINE        Cloud_Channel_UserAction = 3
)

// Enum value maps for Cloud_Channel_UserAction.
var (
	Cloud_Channel_UserAction_name = map[int32]string{
		0: "USER_ACTION_UNKNOWN",
		1: "USER_JOIN_CHANNEL",
		2: "USER_QUIT_CHANNEL",
		3: "USER_OFFLINE",
	}
	Cloud_Channel_UserAction_value = map[string]int32{
		"USER_ACTION_UNKNOWN": 0,
		"USER_JOIN_CHANNEL":   1,
		"USER_QUIT_CHANNEL":   2,
		"USER_OFFLINE":        3,
	}
)

func (x Cloud_Channel_UserAction) Enum() *Cloud_Channel_UserAction {
	p := new(Cloud_Channel_UserAction)
	*p = x
	return p
}

func (x Cloud_Channel_UserAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Cloud_Channel_UserAction) Descriptor() protoreflect.EnumDescriptor {
	return file_Im_proto_enumTypes[18].Descriptor()
}

func (Cloud_Channel_UserAction) Type() protoreflect.EnumType {
	return &file_Im_proto_enumTypes[18]
}

func (x Cloud_Channel_UserAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Cloud_Channel_UserAction.Descriptor instead.
func (Cloud_Channel_UserAction) EnumDescriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 0, 0}
}

type Cloud_Profile_UserOnlineStatus_Status int32

const (
	Cloud_Profile_UserOnlineStatus_UNKNOWN Cloud_Profile_UserOnlineStatus_Status = 0
	Cloud_Profile_UserOnlineStatus_ONLINE  Cloud_Profile_UserOnlineStatus_Status = 1
	Cloud_Profile_UserOnlineStatus_OFFLINE Cloud_Profile_UserOnlineStatus_Status = 2
)

// Enum value maps for Cloud_Profile_UserOnlineStatus_Status.
var (
	Cloud_Profile_UserOnlineStatus_Status_name = map[int32]string{
		0: "UNKNOWN",
		1: "ONLINE",
		2: "OFFLINE",
	}
	Cloud_Profile_UserOnlineStatus_Status_value = map[string]int32{
		"UNKNOWN": 0,
		"ONLINE":  1,
		"OFFLINE": 2,
	}
)

func (x Cloud_Profile_UserOnlineStatus_Status) Enum() *Cloud_Profile_UserOnlineStatus_Status {
	p := new(Cloud_Profile_UserOnlineStatus_Status)
	*p = x
	return p
}

func (x Cloud_Profile_UserOnlineStatus_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Cloud_Profile_UserOnlineStatus_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_Im_proto_enumTypes[19].Descriptor()
}

func (Cloud_Profile_UserOnlineStatus_Status) Type() protoreflect.EnumType {
	return &file_Im_proto_enumTypes[19]
}

func (x Cloud_Profile_UserOnlineStatus_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Cloud_Profile_UserOnlineStatus_Status.Descriptor instead.
func (Cloud_Profile_UserOnlineStatus_Status) EnumDescriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 2, 0, 0}
}

type Cloud_Data_Update_KsImDataUpdateType int32

const (
	Cloud_Data_Update_INVALID                     Cloud_Data_Update_KsImDataUpdateType = 0
	Cloud_Data_Update_GROUP_INFO_UPDATE           Cloud_Data_Update_KsImDataUpdateType = 1
	Cloud_Data_Update_GROUP_MEMBER_LIST_UPDATE    Cloud_Data_Update_KsImDataUpdateType = 2
	Cloud_Data_Update_YOU_BE_KICKED               Cloud_Data_Update_KsImDataUpdateType = 3
	Cloud_Data_Update_MESSAGE_READ_EVENT          Cloud_Data_Update_KsImDataUpdateType = 4
	Cloud_Data_Update_MESSAGE_RECEIPT_EVENT       Cloud_Data_Update_KsImDataUpdateType = 5
	Cloud_Data_Update_FRIEND_LIST_UPDATE          Cloud_Data_Update_KsImDataUpdateType = 6
	Cloud_Data_Update_FRIEND_REQUEST_COUNT_UPDATE Cloud_Data_Update_KsImDataUpdateType = 7
	Cloud_Data_Update_BLACK_LIST_UPDATE           Cloud_Data_Update_KsImDataUpdateType = 8
)

// Enum value maps for Cloud_Data_Update_KsImDataUpdateType.
var (
	Cloud_Data_Update_KsImDataUpdateType_name = map[int32]string{
		0: "INVALID",
		1: "GROUP_INFO_UPDATE",
		2: "GROUP_MEMBER_LIST_UPDATE",
		3: "YOU_BE_KICKED",
		4: "MESSAGE_READ_EVENT",
		5: "MESSAGE_RECEIPT_EVENT",
		6: "FRIEND_LIST_UPDATE",
		7: "FRIEND_REQUEST_COUNT_UPDATE",
		8: "BLACK_LIST_UPDATE",
	}
	Cloud_Data_Update_KsImDataUpdateType_value = map[string]int32{
		"INVALID":                     0,
		"GROUP_INFO_UPDATE":           1,
		"GROUP_MEMBER_LIST_UPDATE":    2,
		"YOU_BE_KICKED":               3,
		"MESSAGE_READ_EVENT":          4,
		"MESSAGE_RECEIPT_EVENT":       5,
		"FRIEND_LIST_UPDATE":          6,
		"FRIEND_REQUEST_COUNT_UPDATE": 7,
		"BLACK_LIST_UPDATE":           8,
	}
)

func (x Cloud_Data_Update_KsImDataUpdateType) Enum() *Cloud_Data_Update_KsImDataUpdateType {
	p := new(Cloud_Data_Update_KsImDataUpdateType)
	*p = x
	return p
}

func (x Cloud_Data_Update_KsImDataUpdateType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Cloud_Data_Update_KsImDataUpdateType) Descriptor() protoreflect.EnumDescriptor {
	return file_Im_proto_enumTypes[20].Descriptor()
}

func (Cloud_Data_Update_KsImDataUpdateType) Type() protoreflect.EnumType {
	return &file_Im_proto_enumTypes[20]
}

func (x Cloud_Data_Update_KsImDataUpdateType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Cloud_Data_Update_KsImDataUpdateType.Descriptor instead.
func (Cloud_Data_Update_KsImDataUpdateType) EnumDescriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 3, 0, 0}
}

type Cloud_Message_ImcMessageType int32

const (
	Cloud_Message_TEXT               Cloud_Message_ImcMessageType = 0
	Cloud_Message_IMAGE              Cloud_Message_ImcMessageType = 1
	Cloud_Message_CUSTOM             Cloud_Message_ImcMessageType = 2
	Cloud_Message_AUDIO              Cloud_Message_ImcMessageType = 3
	Cloud_Message_VIDEO              Cloud_Message_ImcMessageType = 4
	Cloud_Message_EMOTICON           Cloud_Message_ImcMessageType = 5
	Cloud_Message_FILE               Cloud_Message_ImcMessageType = 6
	Cloud_Message_NOTICE             Cloud_Message_ImcMessageType = 10
	Cloud_Message_RECALLED           Cloud_Message_ImcMessageType = 11
	Cloud_Message_REFERENCE          Cloud_Message_ImcMessageType = 12
	Cloud_Message_MERGE_FORWARD      Cloud_Message_ImcMessageType = 13
	Cloud_Message_PLACE_HOLDER       Cloud_Message_ImcMessageType = 100
	Cloud_Message_REPLACE            Cloud_Message_ImcMessageType = 101
	Cloud_Message_INVISIBLE_TYPE_MAS Cloud_Message_ImcMessageType = 199
	Cloud_Message_RICH_NOTICE        Cloud_Message_ImcMessageType = 200
)

// Enum value maps for Cloud_Message_ImcMessageType.
var (
	Cloud_Message_ImcMessageType_name = map[int32]string{
		0:   "TEXT",
		1:   "IMAGE",
		2:   "CUSTOM",
		3:   "AUDIO",
		4:   "VIDEO",
		5:   "EMOTICON",
		6:   "FILE",
		10:  "NOTICE",
		11:  "RECALLED",
		12:  "REFERENCE",
		13:  "MERGE_FORWARD",
		100: "PLACE_HOLDER",
		101: "REPLACE",
		199: "INVISIBLE_TYPE_MAS",
		200: "RICH_NOTICE",
	}
	Cloud_Message_ImcMessageType_value = map[string]int32{
		"TEXT":               0,
		"IMAGE":              1,
		"CUSTOM":             2,
		"AUDIO":              3,
		"VIDEO":              4,
		"EMOTICON":           5,
		"FILE":               6,
		"NOTICE":             10,
		"RECALLED":           11,
		"REFERENCE":          12,
		"MERGE_FORWARD":      13,
		"PLACE_HOLDER":       100,
		"REPLACE":            101,
		"INVISIBLE_TYPE_MAS": 199,
		"RICH_NOTICE":        200,
	}
)

func (x Cloud_Message_ImcMessageType) Enum() *Cloud_Message_ImcMessageType {
	p := new(Cloud_Message_ImcMessageType)
	*p = x
	return p
}

func (x Cloud_Message_ImcMessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Cloud_Message_ImcMessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_Im_proto_enumTypes[21].Descriptor()
}

func (Cloud_Message_ImcMessageType) Type() protoreflect.EnumType {
	return &file_Im_proto_enumTypes[21]
}

func (x Cloud_Message_ImcMessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Cloud_Message_ImcMessageType.Descriptor instead.
func (Cloud_Message_ImcMessageType) EnumDescriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 0}
}

type Cloud_Message_NoticeMetaType int32

const (
	Cloud_Message_UNKNOWN_NOTICE_META_TYPE       Cloud_Message_NoticeMetaType = 0
	Cloud_Message_COMMON_NOTICE_META_TYPE        Cloud_Message_NoticeMetaType = 1
	Cloud_Message_CONFIRM_INVITE_INTO_GROUP_META Cloud_Message_NoticeMetaType = 2
	Cloud_Message_CONFIRM_JOIN_INTO_GROUP_META   Cloud_Message_NoticeMetaType = 3
	Cloud_Message_LINKED_PROFILE_META_TYPE       Cloud_Message_NoticeMetaType = 4
)

// Enum value maps for Cloud_Message_NoticeMetaType.
var (
	Cloud_Message_NoticeMetaType_name = map[int32]string{
		0: "UNKNOWN_NOTICE_META_TYPE",
		1: "COMMON_NOTICE_META_TYPE",
		2: "CONFIRM_INVITE_INTO_GROUP_META",
		3: "CONFIRM_JOIN_INTO_GROUP_META",
		4: "LINKED_PROFILE_META_TYPE",
	}
	Cloud_Message_NoticeMetaType_value = map[string]int32{
		"UNKNOWN_NOTICE_META_TYPE":       0,
		"COMMON_NOTICE_META_TYPE":        1,
		"CONFIRM_INVITE_INTO_GROUP_META": 2,
		"CONFIRM_JOIN_INTO_GROUP_META":   3,
		"LINKED_PROFILE_META_TYPE":       4,
	}
)

func (x Cloud_Message_NoticeMetaType) Enum() *Cloud_Message_NoticeMetaType {
	p := new(Cloud_Message_NoticeMetaType)
	*p = x
	return p
}

func (x Cloud_Message_NoticeMetaType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Cloud_Message_NoticeMetaType) Descriptor() protoreflect.EnumDescriptor {
	return file_Im_proto_enumTypes[22].Descriptor()
}

func (Cloud_Message_NoticeMetaType) Type() protoreflect.EnumType {
	return &file_Im_proto_enumTypes[22]
}

func (x Cloud_Message_NoticeMetaType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Cloud_Message_NoticeMetaType.Descriptor instead.
func (Cloud_Message_NoticeMetaType) EnumDescriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 1}
}

type Cloud_Message_GroupFindType int32

const (
	Cloud_Message_BY_UNKNOWN    Cloud_Message_GroupFindType = 0
	Cloud_Message_BY_ID         Cloud_Message_GroupFindType = 1
	Cloud_Message_BY_NAME       Cloud_Message_GroupFindType = 2
	Cloud_Message_BY_QR_CODE    Cloud_Message_GroupFindType = 3
	Cloud_Message_BY_CARD       Cloud_Message_GroupFindType = 4
	Cloud_Message_BY_INVITATION Cloud_Message_GroupFindType = 5
	Cloud_Message_BY_SHARE_LINK Cloud_Message_GroupFindType = 6
)

// Enum value maps for Cloud_Message_GroupFindType.
var (
	Cloud_Message_GroupFindType_name = map[int32]string{
		0: "BY_UNKNOWN",
		1: "BY_ID",
		2: "BY_NAME",
		3: "BY_QR_CODE",
		4: "BY_CARD",
		5: "BY_INVITATION",
		6: "BY_SHARE_LINK",
	}
	Cloud_Message_GroupFindType_value = map[string]int32{
		"BY_UNKNOWN":    0,
		"BY_ID":         1,
		"BY_NAME":       2,
		"BY_QR_CODE":    3,
		"BY_CARD":       4,
		"BY_INVITATION": 5,
		"BY_SHARE_LINK": 6,
	}
)

func (x Cloud_Message_GroupFindType) Enum() *Cloud_Message_GroupFindType {
	p := new(Cloud_Message_GroupFindType)
	*p = x
	return p
}

func (x Cloud_Message_GroupFindType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Cloud_Message_GroupFindType) Descriptor() protoreflect.EnumDescriptor {
	return file_Im_proto_enumTypes[23].Descriptor()
}

func (Cloud_Message_GroupFindType) Type() protoreflect.EnumType {
	return &file_Im_proto_enumTypes[23]
}

func (x Cloud_Message_GroupFindType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Cloud_Message_GroupFindType.Descriptor instead.
func (Cloud_Message_GroupFindType) EnumDescriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 2}
}

type Cloud_Message_JoinRequestStatus int32

const (
	Cloud_Message_UNKNOWN_STATUS Cloud_Message_JoinRequestStatus = 0
	Cloud_Message_REQUESTED      Cloud_Message_JoinRequestStatus = 1
	Cloud_Message_APPROVED       Cloud_Message_JoinRequestStatus = 2
	Cloud_Message_REFUSED        Cloud_Message_JoinRequestStatus = 3
)

// Enum value maps for Cloud_Message_JoinRequestStatus.
var (
	Cloud_Message_JoinRequestStatus_name = map[int32]string{
		0: "UNKNOWN_STATUS",
		1: "REQUESTED",
		2: "APPROVED",
		3: "REFUSED",
	}
	Cloud_Message_JoinRequestStatus_value = map[string]int32{
		"UNKNOWN_STATUS": 0,
		"REQUESTED":      1,
		"APPROVED":       2,
		"REFUSED":        3,
	}
)

func (x Cloud_Message_JoinRequestStatus) Enum() *Cloud_Message_JoinRequestStatus {
	p := new(Cloud_Message_JoinRequestStatus)
	*p = x
	return p
}

func (x Cloud_Message_JoinRequestStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Cloud_Message_JoinRequestStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_Im_proto_enumTypes[24].Descriptor()
}

func (Cloud_Message_JoinRequestStatus) Type() protoreflect.EnumType {
	return &file_Im_proto_enumTypes[24]
}

func (x Cloud_Message_JoinRequestStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Cloud_Message_JoinRequestStatus.Descriptor instead.
func (Cloud_Message_JoinRequestStatus) EnumDescriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 3}
}

type Cloud_Message_InvitePermissionType int32

const (
	Cloud_Message_UNKNOWN_INVITE_PERMISSION_TYPE Cloud_Message_InvitePermissionType = 0
	Cloud_Message_EVERYONE                       Cloud_Message_InvitePermissionType = 1
	Cloud_Message_ONLY_ADMIN                     Cloud_Message_InvitePermissionType = 2
)

// Enum value maps for Cloud_Message_InvitePermissionType.
var (
	Cloud_Message_InvitePermissionType_name = map[int32]string{
		0: "UNKNOWN_INVITE_PERMISSION_TYPE",
		1: "EVERYONE",
		2: "ONLY_ADMIN",
	}
	Cloud_Message_InvitePermissionType_value = map[string]int32{
		"UNKNOWN_INVITE_PERMISSION_TYPE": 0,
		"EVERYONE":                       1,
		"ONLY_ADMIN":                     2,
	}
)

func (x Cloud_Message_InvitePermissionType) Enum() *Cloud_Message_InvitePermissionType {
	p := new(Cloud_Message_InvitePermissionType)
	*p = x
	return p
}

func (x Cloud_Message_InvitePermissionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Cloud_Message_InvitePermissionType) Descriptor() protoreflect.EnumDescriptor {
	return file_Im_proto_enumTypes[25].Descriptor()
}

func (Cloud_Message_InvitePermissionType) Type() protoreflect.EnumType {
	return &file_Im_proto_enumTypes[25]
}

func (x Cloud_Message_InvitePermissionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Cloud_Message_InvitePermissionType.Descriptor instead.
func (Cloud_Message_InvitePermissionType) EnumDescriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 4}
}

type Cloud_Message_JoinNeedPermissionType int32

const (
	Cloud_Message_UNKNOWN_JOIN_NEED_PERMISSION_TYPE Cloud_Message_JoinNeedPermissionType = 0
	Cloud_Message_NONE                              Cloud_Message_JoinNeedPermissionType = 1
	Cloud_Message_ADMIN                             Cloud_Message_JoinNeedPermissionType = 2
)

// Enum value maps for Cloud_Message_JoinNeedPermissionType.
var (
	Cloud_Message_JoinNeedPermissionType_name = map[int32]string{
		0: "UNKNOWN_JOIN_NEED_PERMISSION_TYPE",
		1: "NONE",
		2: "ADMIN",
	}
	Cloud_Message_JoinNeedPermissionType_value = map[string]int32{
		"UNKNOWN_JOIN_NEED_PERMISSION_TYPE": 0,
		"NONE":                              1,
		"ADMIN":                             2,
	}
)

func (x Cloud_Message_JoinNeedPermissionType) Enum() *Cloud_Message_JoinNeedPermissionType {
	p := new(Cloud_Message_JoinNeedPermissionType)
	*p = x
	return p
}

func (x Cloud_Message_JoinNeedPermissionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Cloud_Message_JoinNeedPermissionType) Descriptor() protoreflect.EnumDescriptor {
	return file_Im_proto_enumTypes[26].Descriptor()
}

func (Cloud_Message_JoinNeedPermissionType) Type() protoreflect.EnumType {
	return &file_Im_proto_enumTypes[26]
}

func (x Cloud_Message_JoinNeedPermissionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Cloud_Message_JoinNeedPermissionType.Descriptor instead.
func (Cloud_Message_JoinNeedPermissionType) EnumDescriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 5}
}

type Cloud_Message_GroupStatus int32

const (
	Cloud_Message_UNKNOW_GROUP_STATUS Cloud_Message_GroupStatus = 0
	Cloud_Message_VALID               Cloud_Message_GroupStatus = 1
	Cloud_Message_INVALID             Cloud_Message_GroupStatus = 2
)

// Enum value maps for Cloud_Message_GroupStatus.
var (
	Cloud_Message_GroupStatus_name = map[int32]string{
		0: "UNKNOW_GROUP_STATUS",
		1: "VALID",
		2: "INVALID",
	}
	Cloud_Message_GroupStatus_value = map[string]int32{
		"UNKNOW_GROUP_STATUS": 0,
		"VALID":               1,
		"INVALID":             2,
	}
)

func (x Cloud_Message_GroupStatus) Enum() *Cloud_Message_GroupStatus {
	p := new(Cloud_Message_GroupStatus)
	*p = x
	return p
}

func (x Cloud_Message_GroupStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Cloud_Message_GroupStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_Im_proto_enumTypes[27].Descriptor()
}

func (Cloud_Message_GroupStatus) Type() protoreflect.EnumType {
	return &file_Im_proto_enumTypes[27]
}

func (x Cloud_Message_GroupStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Cloud_Message_GroupStatus.Descriptor instead.
func (Cloud_Message_GroupStatus) EnumDescriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 6}
}

type Cloud_Message_GroupType int32

const (
	Cloud_Message_UNKNOW_GROUP_TYPE Cloud_Message_GroupType = 0
	Cloud_Message_PRIVATE           Cloud_Message_GroupType = 3
	Cloud_Message_PUBLIC            Cloud_Message_GroupType = 4
)

// Enum value maps for Cloud_Message_GroupType.
var (
	Cloud_Message_GroupType_name = map[int32]string{
		0: "UNKNOW_GROUP_TYPE",
		3: "PRIVATE",
		4: "PUBLIC",
	}
	Cloud_Message_GroupType_value = map[string]int32{
		"UNKNOW_GROUP_TYPE": 0,
		"PRIVATE":           3,
		"PUBLIC":            4,
	}
)

func (x Cloud_Message_GroupType) Enum() *Cloud_Message_GroupType {
	p := new(Cloud_Message_GroupType)
	*p = x
	return p
}

func (x Cloud_Message_GroupType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Cloud_Message_GroupType) Descriptor() protoreflect.EnumDescriptor {
	return file_Im_proto_enumTypes[28].Descriptor()
}

func (Cloud_Message_GroupType) Type() protoreflect.EnumType {
	return &file_Im_proto_enumTypes[28]
}

func (x Cloud_Message_GroupType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Cloud_Message_GroupType.Descriptor instead.
func (Cloud_Message_GroupType) EnumDescriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 7}
}

type Cloud_Message_ForbiddenState int32

const (
	Cloud_Message_UNKNOWN_FORBIDDEN_STATE Cloud_Message_ForbiddenState = 0
	Cloud_Message_UN_FORBIDDEN            Cloud_Message_ForbiddenState = 1
	Cloud_Message_FORBID_MESSAGE          Cloud_Message_ForbiddenState = 2
)

// Enum value maps for Cloud_Message_ForbiddenState.
var (
	Cloud_Message_ForbiddenState_name = map[int32]string{
		0: "UNKNOWN_FORBIDDEN_STATE",
		1: "UN_FORBIDDEN",
		2: "FORBID_MESSAGE",
	}
	Cloud_Message_ForbiddenState_value = map[string]int32{
		"UNKNOWN_FORBIDDEN_STATE": 0,
		"UN_FORBIDDEN":            1,
		"FORBID_MESSAGE":          2,
	}
)

func (x Cloud_Message_ForbiddenState) Enum() *Cloud_Message_ForbiddenState {
	p := new(Cloud_Message_ForbiddenState)
	*p = x
	return p
}

func (x Cloud_Message_ForbiddenState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Cloud_Message_ForbiddenState) Descriptor() protoreflect.EnumDescriptor {
	return file_Im_proto_enumTypes[29].Descriptor()
}

func (Cloud_Message_ForbiddenState) Type() protoreflect.EnumType {
	return &file_Im_proto_enumTypes[29]
}

func (x Cloud_Message_ForbiddenState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Cloud_Message_ForbiddenState.Descriptor instead.
func (Cloud_Message_ForbiddenState) EnumDescriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 8}
}

type Cloud_Message_PassThroughType int32

const (
	Cloud_Message_INVALID_PTT Cloud_Message_PassThroughType = 0
	Cloud_Message_INPUTTING   Cloud_Message_PassThroughType = 1
)

// Enum value maps for Cloud_Message_PassThroughType.
var (
	Cloud_Message_PassThroughType_name = map[int32]string{
		0: "INVALID_PTT",
		1: "INPUTTING",
	}
	Cloud_Message_PassThroughType_value = map[string]int32{
		"INVALID_PTT": 0,
		"INPUTTING":   1,
	}
)

func (x Cloud_Message_PassThroughType) Enum() *Cloud_Message_PassThroughType {
	p := new(Cloud_Message_PassThroughType)
	*p = x
	return p
}

func (x Cloud_Message_PassThroughType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Cloud_Message_PassThroughType) Descriptor() protoreflect.EnumDescriptor {
	return file_Im_proto_enumTypes[30].Descriptor()
}

func (Cloud_Message_PassThroughType) Type() protoreflect.EnumType {
	return &file_Im_proto_enumTypes[30]
}

func (x Cloud_Message_PassThroughType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Cloud_Message_PassThroughType.Descriptor instead.
func (Cloud_Message_PassThroughType) EnumDescriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 9}
}

type Cloud_Message_Emoticon_Type int32

const (
	Cloud_Message_Emoticon_UNKNOWN        Cloud_Message_Emoticon_Type = 0
	Cloud_Message_Emoticon_BASIC          Cloud_Message_Emoticon_Type = 1
	Cloud_Message_Emoticon_IMAGE          Cloud_Message_Emoticon_Type = 2
	Cloud_Message_Emoticon_GIF            Cloud_Message_Emoticon_Type = 3
	Cloud_Message_Emoticon_SPECIAL_EFFECT Cloud_Message_Emoticon_Type = 4
	Cloud_Message_Emoticon_SCRIPT         Cloud_Message_Emoticon_Type = 5
)

// Enum value maps for Cloud_Message_Emoticon_Type.
var (
	Cloud_Message_Emoticon_Type_name = map[int32]string{
		0: "UNKNOWN",
		1: "BASIC",
		2: "IMAGE",
		3: "GIF",
		4: "SPECIAL_EFFECT",
		5: "SCRIPT",
	}
	Cloud_Message_Emoticon_Type_value = map[string]int32{
		"UNKNOWN":        0,
		"BASIC":          1,
		"IMAGE":          2,
		"GIF":            3,
		"SPECIAL_EFFECT": 4,
		"SCRIPT":         5,
	}
)

func (x Cloud_Message_Emoticon_Type) Enum() *Cloud_Message_Emoticon_Type {
	p := new(Cloud_Message_Emoticon_Type)
	*p = x
	return p
}

func (x Cloud_Message_Emoticon_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Cloud_Message_Emoticon_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_Im_proto_enumTypes[31].Descriptor()
}

func (Cloud_Message_Emoticon_Type) Type() protoreflect.EnumType {
	return &file_Im_proto_enumTypes[31]
}

func (x Cloud_Message_Emoticon_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Cloud_Message_Emoticon_Type.Descriptor instead.
func (Cloud_Message_Emoticon_Type) EnumDescriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 8, 0}
}

type Cloud_Message_GroupInvideResponse_InviteStatus int32

const (
	Cloud_Message_GroupInvideResponse_UNKNOWN_STATUS Cloud_Message_GroupInvideResponse_InviteStatus = 0
	Cloud_Message_GroupInvideResponse_SUCC           Cloud_Message_GroupInvideResponse_InviteStatus = 1
	Cloud_Message_GroupInvideResponse_PENDING        Cloud_Message_GroupInvideResponse_InviteStatus = 2
)

// Enum value maps for Cloud_Message_GroupInvideResponse_InviteStatus.
var (
	Cloud_Message_GroupInvideResponse_InviteStatus_name = map[int32]string{
		0: "UNKNOWN_STATUS",
		1: "SUCC",
		2: "PENDING",
	}
	Cloud_Message_GroupInvideResponse_InviteStatus_value = map[string]int32{
		"UNKNOWN_STATUS": 0,
		"SUCC":           1,
		"PENDING":        2,
	}
)

func (x Cloud_Message_GroupInvideResponse_InviteStatus) Enum() *Cloud_Message_GroupInvideResponse_InviteStatus {
	p := new(Cloud_Message_GroupInvideResponse_InviteStatus)
	*p = x
	return p
}

func (x Cloud_Message_GroupInvideResponse_InviteStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Cloud_Message_GroupInvideResponse_InviteStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_Im_proto_enumTypes[32].Descriptor()
}

func (Cloud_Message_GroupInvideResponse_InviteStatus) Type() protoreflect.EnumType {
	return &file_Im_proto_enumTypes[32]
}

func (x Cloud_Message_GroupInvideResponse_InviteStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Cloud_Message_GroupInvideResponse_InviteStatus.Descriptor instead.
func (Cloud_Message_GroupInvideResponse_InviteStatus) EnumDescriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 22, 0}
}

type Cloud_Message_GroupJoinResponse_JoinStatus int32

const (
	Cloud_Message_GroupJoinResponse_UNKNOWN_STATUS Cloud_Message_GroupJoinResponse_JoinStatus = 0
	Cloud_Message_GroupJoinResponse_SUCC           Cloud_Message_GroupJoinResponse_JoinStatus = 1
	Cloud_Message_GroupJoinResponse_PENDING        Cloud_Message_GroupJoinResponse_JoinStatus = 2
)

// Enum value maps for Cloud_Message_GroupJoinResponse_JoinStatus.
var (
	Cloud_Message_GroupJoinResponse_JoinStatus_name = map[int32]string{
		0: "UNKNOWN_STATUS",
		1: "SUCC",
		2: "PENDING",
	}
	Cloud_Message_GroupJoinResponse_JoinStatus_value = map[string]int32{
		"UNKNOWN_STATUS": 0,
		"SUCC":           1,
		"PENDING":        2,
	}
)

func (x Cloud_Message_GroupJoinResponse_JoinStatus) Enum() *Cloud_Message_GroupJoinResponse_JoinStatus {
	p := new(Cloud_Message_GroupJoinResponse_JoinStatus)
	*p = x
	return p
}

func (x Cloud_Message_GroupJoinResponse_JoinStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Cloud_Message_GroupJoinResponse_JoinStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_Im_proto_enumTypes[33].Descriptor()
}

func (Cloud_Message_GroupJoinResponse_JoinStatus) Type() protoreflect.EnumType {
	return &file_Im_proto_enumTypes[33]
}

func (x Cloud_Message_GroupJoinResponse_JoinStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Cloud_Message_GroupJoinResponse_JoinStatus.Descriptor instead.
func (Cloud_Message_GroupJoinResponse_JoinStatus) EnumDescriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 24, 0}
}

type Cloud_Message_GroupJoinRequestAckRequest_GroupJoinAckType int32

const (
	Cloud_Message_GroupJoinRequestAckRequest_UNKNOWN_TYPE Cloud_Message_GroupJoinRequestAckRequest_GroupJoinAckType = 0
	Cloud_Message_GroupJoinRequestAckRequest_AGREE        Cloud_Message_GroupJoinRequestAckRequest_GroupJoinAckType = 1
	Cloud_Message_GroupJoinRequestAckRequest_REFUSE       Cloud_Message_GroupJoinRequestAckRequest_GroupJoinAckType = 2
	Cloud_Message_GroupJoinRequestAckRequest_IGNORE       Cloud_Message_GroupJoinRequestAckRequest_GroupJoinAckType = 3
)

// Enum value maps for Cloud_Message_GroupJoinRequestAckRequest_GroupJoinAckType.
var (
	Cloud_Message_GroupJoinRequestAckRequest_GroupJoinAckType_name = map[int32]string{
		0: "UNKNOWN_TYPE",
		1: "AGREE",
		2: "REFUSE",
		3: "IGNORE",
	}
	Cloud_Message_GroupJoinRequestAckRequest_GroupJoinAckType_value = map[string]int32{
		"UNKNOWN_TYPE": 0,
		"AGREE":        1,
		"REFUSE":       2,
		"IGNORE":       3,
	}
)

func (x Cloud_Message_GroupJoinRequestAckRequest_GroupJoinAckType) Enum() *Cloud_Message_GroupJoinRequestAckRequest_GroupJoinAckType {
	p := new(Cloud_Message_GroupJoinRequestAckRequest_GroupJoinAckType)
	*p = x
	return p
}

func (x Cloud_Message_GroupJoinRequestAckRequest_GroupJoinAckType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Cloud_Message_GroupJoinRequestAckRequest_GroupJoinAckType) Descriptor() protoreflect.EnumDescriptor {
	return file_Im_proto_enumTypes[34].Descriptor()
}

func (Cloud_Message_GroupJoinRequestAckRequest_GroupJoinAckType) Type() protoreflect.EnumType {
	return &file_Im_proto_enumTypes[34]
}

func (x Cloud_Message_GroupJoinRequestAckRequest_GroupJoinAckType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Cloud_Message_GroupJoinRequestAckRequest_GroupJoinAckType.Descriptor instead.
func (Cloud_Message_GroupJoinRequestAckRequest_GroupJoinAckType) EnumDescriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 25, 0}
}

type Cloud_Message_GroupMember_GroupMemberStatus int32

const (
	Cloud_Message_GroupMember_UNKNOWN_MEMBER_STATUS Cloud_Message_GroupMember_GroupMemberStatus = 0
	Cloud_Message_GroupMember_NORMAL                Cloud_Message_GroupMember_GroupMemberStatus = 1
	Cloud_Message_GroupMember_QUITTED               Cloud_Message_GroupMember_GroupMemberStatus = 2
	Cloud_Message_GroupMember_KICKED                Cloud_Message_GroupMember_GroupMemberStatus = 3
	Cloud_Message_GroupMember_DISMISSED             Cloud_Message_GroupMember_GroupMemberStatus = 4
)

// Enum value maps for Cloud_Message_GroupMember_GroupMemberStatus.
var (
	Cloud_Message_GroupMember_GroupMemberStatus_name = map[int32]string{
		0: "UNKNOWN_MEMBER_STATUS",
		1: "NORMAL",
		2: "QUITTED",
		3: "KICKED",
		4: "DISMISSED",
	}
	Cloud_Message_GroupMember_GroupMemberStatus_value = map[string]int32{
		"UNKNOWN_MEMBER_STATUS": 0,
		"NORMAL":                1,
		"QUITTED":               2,
		"KICKED":                3,
		"DISMISSED":             4,
	}
)

func (x Cloud_Message_GroupMember_GroupMemberStatus) Enum() *Cloud_Message_GroupMember_GroupMemberStatus {
	p := new(Cloud_Message_GroupMember_GroupMemberStatus)
	*p = x
	return p
}

func (x Cloud_Message_GroupMember_GroupMemberStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Cloud_Message_GroupMember_GroupMemberStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_Im_proto_enumTypes[35].Descriptor()
}

func (Cloud_Message_GroupMember_GroupMemberStatus) Type() protoreflect.EnumType {
	return &file_Im_proto_enumTypes[35]
}

func (x Cloud_Message_GroupMember_GroupMemberStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Cloud_Message_GroupMember_GroupMemberStatus.Descriptor instead.
func (Cloud_Message_GroupMember_GroupMemberStatus) EnumDescriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 55, 0}
}

type Cloud_Message_GroupMember_GroupMemberRole int32

const (
	Cloud_Message_GroupMember_UNKNOWN_ROLE Cloud_Message_GroupMember_GroupMemberRole = 0
	Cloud_Message_GroupMember_COMMON       Cloud_Message_GroupMember_GroupMemberRole = 1
	Cloud_Message_GroupMember_ADMIN        Cloud_Message_GroupMember_GroupMemberRole = 2
)

// Enum value maps for Cloud_Message_GroupMember_GroupMemberRole.
var (
	Cloud_Message_GroupMember_GroupMemberRole_name = map[int32]string{
		0: "UNKNOWN_ROLE",
		1: "COMMON",
		2: "ADMIN",
	}
	Cloud_Message_GroupMember_GroupMemberRole_value = map[string]int32{
		"UNKNOWN_ROLE": 0,
		"COMMON":       1,
		"ADMIN":        2,
	}
)

func (x Cloud_Message_GroupMember_GroupMemberRole) Enum() *Cloud_Message_GroupMember_GroupMemberRole {
	p := new(Cloud_Message_GroupMember_GroupMemberRole)
	*p = x
	return p
}

func (x Cloud_Message_GroupMember_GroupMemberRole) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Cloud_Message_GroupMember_GroupMemberRole) Descriptor() protoreflect.EnumDescriptor {
	return file_Im_proto_enumTypes[36].Descriptor()
}

func (Cloud_Message_GroupMember_GroupMemberRole) Type() protoreflect.EnumType {
	return &file_Im_proto_enumTypes[36]
}

func (x Cloud_Message_GroupMember_GroupMemberRole) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Cloud_Message_GroupMember_GroupMemberRole.Descriptor instead.
func (Cloud_Message_GroupMember_GroupMemberRole) EnumDescriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 55, 1}
}

type Basic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Basic) Reset() {
	*x = Basic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Basic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Basic) ProtoMessage() {}

func (x *Basic) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Basic.ProtoReflect.Descriptor instead.
func (*Basic) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{0}
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1}
}

type Cloud struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Cloud) Reset() {
	*x = Cloud{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud) ProtoMessage() {}

func (x *Cloud) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud.ProtoReflect.Descriptor instead.
func (*Cloud) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2}
}

type Basic_PacketHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId             int32                             `protobuf:"varint,1,opt,name=appId,proto3" json:"appId,omitempty"`
	Uid               int64                             `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	InstanceId        int64                             `protobuf:"varint,3,opt,name=instanceId,proto3" json:"instanceId,omitempty"`
	Flags             uint32                            `protobuf:"varint,5,opt,name=flags,proto3" json:"flags,omitempty"`
	EncodingType      Basic_PacketHeader_EncodingType   `protobuf:"varint,6,opt,name=encodingType,proto3,enum=AcFunDanmu.Im.Basic_PacketHeader_EncodingType" json:"encodingType,omitempty"`
	DecodedPayloadLen int32                             `protobuf:"varint,7,opt,name=decodedPayloadLen,proto3" json:"decodedPayloadLen,omitempty"`
	EncryptionMode    Basic_PacketHeader_EncryptionMode `protobuf:"varint,8,opt,name=encryptionMode,proto3,enum=AcFunDanmu.Im.Basic_PacketHeader_EncryptionMode" json:"encryptionMode,omitempty"`
	TokenInfo         *Basic_TokenInfo                  `protobuf:"bytes,9,opt,name=tokenInfo,proto3" json:"tokenInfo,omitempty"`
	SeqId             int64                             `protobuf:"varint,10,opt,name=seqId,proto3" json:"seqId,omitempty"`
	Features          []Basic_PacketHeader_Feature      `protobuf:"varint,11,rep,packed,name=features,proto3,enum=AcFunDanmu.Im.Basic_PacketHeader_Feature" json:"features,omitempty"`
	Kpn               string                            `protobuf:"bytes,12,opt,name=kpn,proto3" json:"kpn,omitempty"`
}

func (x *Basic_PacketHeader) Reset() {
	*x = Basic_PacketHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Basic_PacketHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Basic_PacketHeader) ProtoMessage() {}

func (x *Basic_PacketHeader) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Basic_PacketHeader.ProtoReflect.Descriptor instead.
func (*Basic_PacketHeader) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Basic_PacketHeader) GetAppId() int32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *Basic_PacketHeader) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *Basic_PacketHeader) GetInstanceId() int64 {
	if x != nil {
		return x.InstanceId
	}
	return 0
}

func (x *Basic_PacketHeader) GetFlags() uint32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *Basic_PacketHeader) GetEncodingType() Basic_PacketHeader_EncodingType {
	if x != nil {
		return x.EncodingType
	}
	return Basic_PacketHeader_kEncodingNone
}

func (x *Basic_PacketHeader) GetDecodedPayloadLen() int32 {
	if x != nil {
		return x.DecodedPayloadLen
	}
	return 0
}

func (x *Basic_PacketHeader) GetEncryptionMode() Basic_PacketHeader_EncryptionMode {
	if x != nil {
		return x.EncryptionMode
	}
	return Basic_PacketHeader_kEncryptionNone
}

func (x *Basic_PacketHeader) GetTokenInfo() *Basic_TokenInfo {
	if x != nil {
		return x.TokenInfo
	}
	return nil
}

func (x *Basic_PacketHeader) GetSeqId() int64 {
	if x != nil {
		return x.SeqId
	}
	return 0
}

func (x *Basic_PacketHeader) GetFeatures() []Basic_PacketHeader_Feature {
	if x != nil {
		return x.Features
	}
	return nil
}

func (x *Basic_PacketHeader) GetKpn() string {
	if x != nil {
		return x.Kpn
	}
	return ""
}

type Basic_User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId int32 `protobuf:"varint,1,opt,name=appId,proto3" json:"appId,omitempty"`
	Uid   int64 `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *Basic_User) Reset() {
	*x = Basic_User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Basic_User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Basic_User) ProtoMessage() {}

func (x *Basic_User) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Basic_User.ProtoReflect.Descriptor instead.
func (*Basic_User) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Basic_User) GetAppId() int32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *Basic_User) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type Basic_UserInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User       *Basic_User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	InstanceId int64       `protobuf:"varint,2,opt,name=instanceId,proto3" json:"instanceId,omitempty"`
}

func (x *Basic_UserInstance) Reset() {
	*x = Basic_UserInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Basic_UserInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Basic_UserInstance) ProtoMessage() {}

func (x *Basic_UserInstance) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Basic_UserInstance.ProtoReflect.Descriptor instead.
func (*Basic_UserInstance) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Basic_UserInstance) GetUser() *Basic_User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *Basic_UserInstance) GetInstanceId() int64 {
	if x != nil {
		return x.InstanceId
	}
	return 0
}

type Basic_UpstreamPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Command          string                  `protobuf:"bytes,1,opt,name=command,proto3" json:"command,omitempty"`
	SeqId            int64                   `protobuf:"varint,2,opt,name=seqId,proto3" json:"seqId,omitempty"`
	RetryCount       uint32                  `protobuf:"varint,3,opt,name=retryCount,proto3" json:"retryCount,omitempty"`
	PayloadData      []byte                  `protobuf:"bytes,4,opt,name=payloadData,proto3" json:"payloadData,omitempty"`
	UserInstance     *Basic_UserInstance     `protobuf:"bytes,5,opt,name=userInstance,proto3" json:"userInstance,omitempty"`
	ErrorCode        int32                   `protobuf:"varint,6,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
	SettingInfo      *Basic_SettingInfo      `protobuf:"bytes,7,opt,name=settingInfo,proto3" json:"settingInfo,omitempty"`
	RequestBasicInfo *Basic_RequestBasicInfo `protobuf:"bytes,8,opt,name=requestBasicInfo,proto3" json:"requestBasicInfo,omitempty"`
	SubBiz           string                  `protobuf:"bytes,9,opt,name=subBiz,proto3" json:"subBiz,omitempty"`
	FrontendInfo     *Basic_FrontendInfo     `protobuf:"bytes,10,opt,name=frontendInfo,proto3" json:"frontendInfo,omitempty"`
	Kpn              string                  `protobuf:"bytes,11,opt,name=kpn,proto3" json:"kpn,omitempty"`
	AnonymouseUser   bool                    `protobuf:"varint,12,opt,name=anonymouseUser,proto3" json:"anonymouseUser,omitempty"`
}

func (x *Basic_UpstreamPayload) Reset() {
	*x = Basic_UpstreamPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Basic_UpstreamPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Basic_UpstreamPayload) ProtoMessage() {}

func (x *Basic_UpstreamPayload) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Basic_UpstreamPayload.ProtoReflect.Descriptor instead.
func (*Basic_UpstreamPayload) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{0, 3}
}

func (x *Basic_UpstreamPayload) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *Basic_UpstreamPayload) GetSeqId() int64 {
	if x != nil {
		return x.SeqId
	}
	return 0
}

func (x *Basic_UpstreamPayload) GetRetryCount() uint32 {
	if x != nil {
		return x.RetryCount
	}
	return 0
}

func (x *Basic_UpstreamPayload) GetPayloadData() []byte {
	if x != nil {
		return x.PayloadData
	}
	return nil
}

func (x *Basic_UpstreamPayload) GetUserInstance() *Basic_UserInstance {
	if x != nil {
		return x.UserInstance
	}
	return nil
}

func (x *Basic_UpstreamPayload) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *Basic_UpstreamPayload) GetSettingInfo() *Basic_SettingInfo {
	if x != nil {
		return x.SettingInfo
	}
	return nil
}

func (x *Basic_UpstreamPayload) GetRequestBasicInfo() *Basic_RequestBasicInfo {
	if x != nil {
		return x.RequestBasicInfo
	}
	return nil
}

func (x *Basic_UpstreamPayload) GetSubBiz() string {
	if x != nil {
		return x.SubBiz
	}
	return ""
}

func (x *Basic_UpstreamPayload) GetFrontendInfo() *Basic_FrontendInfo {
	if x != nil {
		return x.FrontendInfo
	}
	return nil
}

func (x *Basic_UpstreamPayload) GetKpn() string {
	if x != nil {
		return x.Kpn
	}
	return ""
}

func (x *Basic_UpstreamPayload) GetAnonymouseUser() bool {
	if x != nil {
		return x.AnonymouseUser
	}
	return false
}

type Basic_DownstreamPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Command     string `protobuf:"bytes,1,opt,name=command,proto3" json:"command,omitempty"`
	SeqId       int64  `protobuf:"varint,2,opt,name=seqId,proto3" json:"seqId,omitempty"`
	ErrorCode   int32  `protobuf:"varint,3,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
	PayloadData []byte `protobuf:"bytes,4,opt,name=payloadData,proto3" json:"payloadData,omitempty"`
	ErrorMsg    string `protobuf:"bytes,5,opt,name=errorMsg,proto3" json:"errorMsg,omitempty"`
	ErrorData   []byte `protobuf:"bytes,6,opt,name=errorData,proto3" json:"errorData,omitempty"`
	SubBiz      string `protobuf:"bytes,7,opt,name=subBiz,proto3" json:"subBiz,omitempty"`
}

func (x *Basic_DownstreamPayload) Reset() {
	*x = Basic_DownstreamPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Basic_DownstreamPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Basic_DownstreamPayload) ProtoMessage() {}

func (x *Basic_DownstreamPayload) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Basic_DownstreamPayload.ProtoReflect.Descriptor instead.
func (*Basic_DownstreamPayload) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{0, 4}
}

func (x *Basic_DownstreamPayload) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *Basic_DownstreamPayload) GetSeqId() int64 {
	if x != nil {
		return x.SeqId
	}
	return 0
}

func (x *Basic_DownstreamPayload) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *Basic_DownstreamPayload) GetPayloadData() []byte {
	if x != nil {
		return x.PayloadData
	}
	return nil
}

func (x *Basic_DownstreamPayload) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

func (x *Basic_DownstreamPayload) GetErrorData() []byte {
	if x != nil {
		return x.ErrorData
	}
	return nil
}

func (x *Basic_DownstreamPayload) GetSubBiz() string {
	if x != nil {
		return x.SubBiz
	}
	return ""
}

type Basic_PingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PingType  Basic_PingRequest_PingType `protobuf:"varint,1,opt,name=pingType,proto3,enum=AcFunDanmu.Im.Basic_PingRequest_PingType" json:"pingType,omitempty"`
	PingRound uint32                     `protobuf:"varint,2,opt,name=pingRound,proto3" json:"pingRound,omitempty"`
}

func (x *Basic_PingRequest) Reset() {
	*x = Basic_PingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Basic_PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Basic_PingRequest) ProtoMessage() {}

func (x *Basic_PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Basic_PingRequest.ProtoReflect.Descriptor instead.
func (*Basic_PingRequest) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{0, 5}
}

func (x *Basic_PingRequest) GetPingType() Basic_PingRequest_PingType {
	if x != nil {
		return x.PingType
	}
	return Basic_PingRequest_kInvalid
}

func (x *Basic_PingRequest) GetPingRound() uint32 {
	if x != nil {
		return x.PingRound
	}
	return 0
}

type Basic_PingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerTimestamp int32  `protobuf:"fixed32,1,opt,name=serverTimestamp,proto3" json:"serverTimestamp,omitempty"`
	ClientIp        uint32 `protobuf:"fixed32,2,opt,name=clientIp,proto3" json:"clientIp,omitempty"`
	RedirectIp      uint32 `protobuf:"fixed32,3,opt,name=redirectIp,proto3" json:"redirectIp,omitempty"`
	RedirectPort    uint32 `protobuf:"varint,4,opt,name=redirectPort,proto3" json:"redirectPort,omitempty"`
}

func (x *Basic_PingResponse) Reset() {
	*x = Basic_PingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Basic_PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Basic_PingResponse) ProtoMessage() {}

func (x *Basic_PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Basic_PingResponse.ProtoReflect.Descriptor instead.
func (*Basic_PingResponse) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{0, 6}
}

func (x *Basic_PingResponse) GetServerTimestamp() int32 {
	if x != nil {
		return x.ServerTimestamp
	}
	return 0
}

func (x *Basic_PingResponse) GetClientIp() uint32 {
	if x != nil {
		return x.ClientIp
	}
	return 0
}

func (x *Basic_PingResponse) GetRedirectIp() uint32 {
	if x != nil {
		return x.RedirectIp
	}
	return 0
}

func (x *Basic_PingResponse) GetRedirectPort() uint32 {
	if x != nil {
		return x.RedirectPort
	}
	return 0
}

type Basic_RegisterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppInfo              *Basic_AppInfo                       `protobuf:"bytes,1,opt,name=appInfo,proto3" json:"appInfo,omitempty"`
	DeviceInfo           *Basic_DeviceInfo                    `protobuf:"bytes,2,opt,name=deviceInfo,proto3" json:"deviceInfo,omitempty"`
	EnvInfo              *Basic_EnvInfo                       `protobuf:"bytes,3,opt,name=envInfo,proto3" json:"envInfo,omitempty"`
	PresenceStatus       Basic_RegisterRequest_PresenceStatus `protobuf:"varint,4,opt,name=presenceStatus,proto3,enum=AcFunDanmu.Im.Basic_RegisterRequest_PresenceStatus" json:"presenceStatus,omitempty"`
	AppActiveStatus      Basic_RegisterRequest_ActiveStatus   `protobuf:"varint,5,opt,name=appActiveStatus,proto3,enum=AcFunDanmu.Im.Basic_RegisterRequest_ActiveStatus" json:"appActiveStatus,omitempty"`
	AppCustomStatus      []byte                               `protobuf:"bytes,6,opt,name=appCustomStatus,proto3" json:"appCustomStatus,omitempty"`
	PushServiceToken     *Basic_PushServiceToken              `protobuf:"bytes,7,opt,name=pushServiceToken,proto3" json:"pushServiceToken,omitempty"`
	InstanceId           int64                                `protobuf:"varint,8,opt,name=instanceId,proto3" json:"instanceId,omitempty"`
	PushServiceTokenList []*Basic_PushServiceToken            `protobuf:"bytes,9,rep,name=pushServiceTokenList,proto3" json:"pushServiceTokenList,omitempty"`
	KeepaliveIntervalSec int32                                `protobuf:"varint,10,opt,name=keepaliveIntervalSec,proto3" json:"keepaliveIntervalSec,omitempty"`
	ZtCommonInfo         *Basic_ZtCommonInfo                  `protobuf:"bytes,11,opt,name=ztCommonInfo,proto3" json:"ztCommonInfo,omitempty"`
}

func (x *Basic_RegisterRequest) Reset() {
	*x = Basic_RegisterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Basic_RegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Basic_RegisterRequest) ProtoMessage() {}

func (x *Basic_RegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Basic_RegisterRequest.ProtoReflect.Descriptor instead.
func (*Basic_RegisterRequest) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{0, 7}
}

func (x *Basic_RegisterRequest) GetAppInfo() *Basic_AppInfo {
	if x != nil {
		return x.AppInfo
	}
	return nil
}

func (x *Basic_RegisterRequest) GetDeviceInfo() *Basic_DeviceInfo {
	if x != nil {
		return x.DeviceInfo
	}
	return nil
}

func (x *Basic_RegisterRequest) GetEnvInfo() *Basic_EnvInfo {
	if x != nil {
		return x.EnvInfo
	}
	return nil
}

func (x *Basic_RegisterRequest) GetPresenceStatus() Basic_RegisterRequest_PresenceStatus {
	if x != nil {
		return x.PresenceStatus
	}
	return Basic_RegisterRequest_kPresenceOffline
}

func (x *Basic_RegisterRequest) GetAppActiveStatus() Basic_RegisterRequest_ActiveStatus {
	if x != nil {
		return x.AppActiveStatus
	}
	return Basic_RegisterRequest_kInvalid
}

func (x *Basic_RegisterRequest) GetAppCustomStatus() []byte {
	if x != nil {
		return x.AppCustomStatus
	}
	return nil
}

func (x *Basic_RegisterRequest) GetPushServiceToken() *Basic_PushServiceToken {
	if x != nil {
		return x.PushServiceToken
	}
	return nil
}

func (x *Basic_RegisterRequest) GetInstanceId() int64 {
	if x != nil {
		return x.InstanceId
	}
	return 0
}

func (x *Basic_RegisterRequest) GetPushServiceTokenList() []*Basic_PushServiceToken {
	if x != nil {
		return x.PushServiceTokenList
	}
	return nil
}

func (x *Basic_RegisterRequest) GetKeepaliveIntervalSec() int32 {
	if x != nil {
		return x.KeepaliveIntervalSec
	}
	return 0
}

func (x *Basic_RegisterRequest) GetZtCommonInfo() *Basic_ZtCommonInfo {
	if x != nil {
		return x.ZtCommonInfo
	}
	return nil
}

type Basic_RegisterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessPointsConfig     *Basic_AccessPointsConfig `protobuf:"bytes,1,opt,name=accessPointsConfig,proto3" json:"accessPointsConfig,omitempty"`
	SessKey                []byte                    `protobuf:"bytes,2,opt,name=sessKey,proto3" json:"sessKey,omitempty"`
	InstanceId             int64                     `protobuf:"varint,3,opt,name=instanceId,proto3" json:"instanceId,omitempty"`
	SdkOption              *Basic_SdkOption          `protobuf:"bytes,4,opt,name=sdkOption,proto3" json:"sdkOption,omitempty"`
	AccessPointsCOnfigIpv6 *Basic_AccessPointsConfig `protobuf:"bytes,5,opt,name=accessPointsCOnfigIpv6,proto3" json:"accessPointsCOnfigIpv6,omitempty"`
}

func (x *Basic_RegisterResponse) Reset() {
	*x = Basic_RegisterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Basic_RegisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Basic_RegisterResponse) ProtoMessage() {}

func (x *Basic_RegisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Basic_RegisterResponse.ProtoReflect.Descriptor instead.
func (*Basic_RegisterResponse) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{0, 8}
}

func (x *Basic_RegisterResponse) GetAccessPointsConfig() *Basic_AccessPointsConfig {
	if x != nil {
		return x.AccessPointsConfig
	}
	return nil
}

func (x *Basic_RegisterResponse) GetSessKey() []byte {
	if x != nil {
		return x.SessKey
	}
	return nil
}

func (x *Basic_RegisterResponse) GetInstanceId() int64 {
	if x != nil {
		return x.InstanceId
	}
	return 0
}

func (x *Basic_RegisterResponse) GetSdkOption() *Basic_SdkOption {
	if x != nil {
		return x.SdkOption
	}
	return nil
}

func (x *Basic_RegisterResponse) GetAccessPointsCOnfigIpv6() *Basic_AccessPointsConfig {
	if x != nil {
		return x.AccessPointsCOnfigIpv6
	}
	return nil
}

type Basic_AccessPointsConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OptimalAps            []*Basic_AccessPoint `protobuf:"bytes,1,rep,name=optimalAps,proto3" json:"optimalAps,omitempty"`
	BackupAps             []*Basic_AccessPoint `protobuf:"bytes,2,rep,name=backupAps,proto3" json:"backupAps,omitempty"`
	AvailablePorts        []uint32             `protobuf:"varint,3,rep,packed,name=availablePorts,proto3" json:"availablePorts,omitempty"`
	ForeceLastConnectedAp *Basic_AccessPoint   `protobuf:"bytes,4,opt,name=foreceLastConnectedAp,proto3" json:"foreceLastConnectedAp,omitempty"`
}

func (x *Basic_AccessPointsConfig) Reset() {
	*x = Basic_AccessPointsConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Basic_AccessPointsConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Basic_AccessPointsConfig) ProtoMessage() {}

func (x *Basic_AccessPointsConfig) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Basic_AccessPointsConfig.ProtoReflect.Descriptor instead.
func (*Basic_AccessPointsConfig) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{0, 9}
}

func (x *Basic_AccessPointsConfig) GetOptimalAps() []*Basic_AccessPoint {
	if x != nil {
		return x.OptimalAps
	}
	return nil
}

func (x *Basic_AccessPointsConfig) GetBackupAps() []*Basic_AccessPoint {
	if x != nil {
		return x.BackupAps
	}
	return nil
}

func (x *Basic_AccessPointsConfig) GetAvailablePorts() []uint32 {
	if x != nil {
		return x.AvailablePorts
	}
	return nil
}

func (x *Basic_AccessPointsConfig) GetForeceLastConnectedAp() *Basic_AccessPoint {
	if x != nil {
		return x.ForeceLastConnectedAp
	}
	return nil
}

type Basic_UnregisterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Basic_UnregisterRequest) Reset() {
	*x = Basic_UnregisterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Basic_UnregisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Basic_UnregisterRequest) ProtoMessage() {}

func (x *Basic_UnregisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Basic_UnregisterRequest.ProtoReflect.Descriptor instead.
func (*Basic_UnregisterRequest) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{0, 10}
}

type Basic_UnregisterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Basic_UnregisterResponse) Reset() {
	*x = Basic_UnregisterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Basic_UnregisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Basic_UnregisterResponse) ProtoMessage() {}

func (x *Basic_UnregisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Basic_UnregisterResponse.ProtoReflect.Descriptor instead.
func (*Basic_UnregisterResponse) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{0, 11}
}

type Basic_KeepAliveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PresenceStatus       Basic_RegisterRequest_PresenceStatus `protobuf:"varint,1,opt,name=presenceStatus,proto3,enum=AcFunDanmu.Im.Basic_RegisterRequest_PresenceStatus" json:"presenceStatus,omitempty"`
	AppActiveStatus      Basic_RegisterRequest_ActiveStatus   `protobuf:"varint,2,opt,name=appActiveStatus,proto3,enum=AcFunDanmu.Im.Basic_RegisterRequest_ActiveStatus" json:"appActiveStatus,omitempty"`
	PushServiceToken     *Basic_PushServiceToken              `protobuf:"bytes,3,opt,name=pushServiceToken,proto3" json:"pushServiceToken,omitempty"`
	PushServiceTokenList []*Basic_PushServiceToken            `protobuf:"bytes,4,rep,name=pushServiceTokenList,proto3" json:"pushServiceTokenList,omitempty"`
	KeepaliveIntervalSec int32                                `protobuf:"varint,5,opt,name=keepaliveIntervalSec,proto3" json:"keepaliveIntervalSec,omitempty"`
}

func (x *Basic_KeepAliveRequest) Reset() {
	*x = Basic_KeepAliveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Basic_KeepAliveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Basic_KeepAliveRequest) ProtoMessage() {}

func (x *Basic_KeepAliveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Basic_KeepAliveRequest.ProtoReflect.Descriptor instead.
func (*Basic_KeepAliveRequest) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{0, 12}
}

func (x *Basic_KeepAliveRequest) GetPresenceStatus() Basic_RegisterRequest_PresenceStatus {
	if x != nil {
		return x.PresenceStatus
	}
	return Basic_RegisterRequest_kPresenceOffline
}

func (x *Basic_KeepAliveRequest) GetAppActiveStatus() Basic_RegisterRequest_ActiveStatus {
	if x != nil {
		return x.AppActiveStatus
	}
	return Basic_RegisterRequest_kInvalid
}

func (x *Basic_KeepAliveRequest) GetPushServiceToken() *Basic_PushServiceToken {
	if x != nil {
		return x.PushServiceToken
	}
	return nil
}

func (x *Basic_KeepAliveRequest) GetPushServiceTokenList() []*Basic_PushServiceToken {
	if x != nil {
		return x.PushServiceTokenList
	}
	return nil
}

func (x *Basic_KeepAliveRequest) GetKeepaliveIntervalSec() int32 {
	if x != nil {
		return x.KeepaliveIntervalSec
	}
	return 0
}

type Basic_KeepAliveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessPointsConfig     *Basic_AccessPointsConfig `protobuf:"bytes,1,opt,name=accessPointsConfig,proto3" json:"accessPointsConfig,omitempty"`
	ServerMsec             int64                     `protobuf:"varint,2,opt,name=serverMsec,proto3" json:"serverMsec,omitempty"`
	AccessPointsConfigIpv6 *Basic_AccessPointsConfig `protobuf:"bytes,3,opt,name=accessPointsConfigIpv6,proto3" json:"accessPointsConfigIpv6,omitempty"`
}

func (x *Basic_KeepAliveResponse) Reset() {
	*x = Basic_KeepAliveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Basic_KeepAliveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Basic_KeepAliveResponse) ProtoMessage() {}

func (x *Basic_KeepAliveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Basic_KeepAliveResponse.ProtoReflect.Descriptor instead.
func (*Basic_KeepAliveResponse) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{0, 13}
}

func (x *Basic_KeepAliveResponse) GetAccessPointsConfig() *Basic_AccessPointsConfig {
	if x != nil {
		return x.AccessPointsConfig
	}
	return nil
}

func (x *Basic_KeepAliveResponse) GetServerMsec() int64 {
	if x != nil {
		return x.ServerMsec
	}
	return 0
}

func (x *Basic_KeepAliveResponse) GetAccessPointsConfigIpv6() *Basic_AccessPointsConfig {
	if x != nil {
		return x.AccessPointsConfigIpv6
	}
	return nil
}

type Basic_AccessPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddressType Basic_AccessPoint_AddressType `protobuf:"varint,1,opt,name=addressType,proto3,enum=AcFunDanmu.Im.Basic_AccessPoint_AddressType" json:"addressType,omitempty"`
	Port        uint32                        `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	IpV4        uint32                        `protobuf:"fixed32,3,opt,name=ipV4,proto3" json:"ipV4,omitempty"`
	IpV6        []byte                        `protobuf:"bytes,4,opt,name=ipV6,proto3" json:"ipV6,omitempty"`
	Domain      string                        `protobuf:"bytes,5,opt,name=domain,proto3" json:"domain,omitempty"`
}

func (x *Basic_AccessPoint) Reset() {
	*x = Basic_AccessPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Basic_AccessPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Basic_AccessPoint) ProtoMessage() {}

func (x *Basic_AccessPoint) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Basic_AccessPoint.ProtoReflect.Descriptor instead.
func (*Basic_AccessPoint) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{0, 14}
}

func (x *Basic_AccessPoint) GetAddressType() Basic_AccessPoint_AddressType {
	if x != nil {
		return x.AddressType
	}
	return Basic_AccessPoint_kIPV4
}

func (x *Basic_AccessPoint) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *Basic_AccessPoint) GetIpV4() uint32 {
	if x != nil {
		return x.IpV4
	}
	return 0
}

func (x *Basic_AccessPoint) GetIpV6() []byte {
	if x != nil {
		return x.IpV6
	}
	return nil
}

func (x *Basic_AccessPoint) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

type Basic_TokenInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenType Basic_TokenInfo_TokenType `protobuf:"varint,1,opt,name=tokenType,proto3,enum=AcFunDanmu.Im.Basic_TokenInfo_TokenType" json:"tokenType,omitempty"`
	Token     []byte                    `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *Basic_TokenInfo) Reset() {
	*x = Basic_TokenInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Basic_TokenInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Basic_TokenInfo) ProtoMessage() {}

func (x *Basic_TokenInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Basic_TokenInfo.ProtoReflect.Descriptor instead.
func (*Basic_TokenInfo) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{0, 15}
}

func (x *Basic_TokenInfo) GetTokenType() Basic_TokenInfo_TokenType {
	if x != nil {
		return x.TokenType
	}
	return Basic_TokenInfo_kInvalid
}

func (x *Basic_TokenInfo) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

type Basic_PushServiceToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PushType      Basic_PushServiceToken_PushType `protobuf:"varint,1,opt,name=pushType,proto3,enum=AcFunDanmu.Im.Basic_PushServiceToken_PushType" json:"pushType,omitempty"`
	Token         []byte                          `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	IsPassThrough bool                            `protobuf:"varint,3,opt,name=isPassThrough,proto3" json:"isPassThrough,omitempty"`
}

func (x *Basic_PushServiceToken) Reset() {
	*x = Basic_PushServiceToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Basic_PushServiceToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Basic_PushServiceToken) ProtoMessage() {}

func (x *Basic_PushServiceToken) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Basic_PushServiceToken.ProtoReflect.Descriptor instead.
func (*Basic_PushServiceToken) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{0, 16}
}

func (x *Basic_PushServiceToken) GetPushType() Basic_PushServiceToken_PushType {
	if x != nil {
		return x.PushType
	}
	return Basic_PushServiceToken_kPushTypeInvalid
}

func (x *Basic_PushServiceToken) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *Basic_PushServiceToken) GetIsPassThrough() bool {
	if x != nil {
		return x.IsPassThrough
	}
	return false
}

type Basic_SettingInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Locale   string `protobuf:"bytes,1,opt,name=locale,proto3" json:"locale,omitempty"`
	Timezone int32  `protobuf:"zigzag32,2,opt,name=timezone,proto3" json:"timezone,omitempty"`
}

func (x *Basic_SettingInfo) Reset() {
	*x = Basic_SettingInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Basic_SettingInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Basic_SettingInfo) ProtoMessage() {}

func (x *Basic_SettingInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Basic_SettingInfo.ProtoReflect.Descriptor instead.
func (*Basic_SettingInfo) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{0, 17}
}

func (x *Basic_SettingInfo) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

func (x *Basic_SettingInfo) GetTimezone() int32 {
	if x != nil {
		return x.Timezone
	}
	return 0
}

type Basic_AppInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppName       string `protobuf:"bytes,1,opt,name=appName,proto3" json:"appName,omitempty"`
	AppVersion    string `protobuf:"bytes,2,opt,name=appVersion,proto3" json:"appVersion,omitempty"`
	AppChannel    string `protobuf:"bytes,3,opt,name=appChannel,proto3" json:"appChannel,omitempty"`
	SdkVersion    string `protobuf:"bytes,4,opt,name=sdkVersion,proto3" json:"sdkVersion,omitempty"`
	ExtensionInfo string `protobuf:"bytes,11,opt,name=extensionInfo,proto3" json:"extensionInfo,omitempty"`
}

func (x *Basic_AppInfo) Reset() {
	*x = Basic_AppInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Basic_AppInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Basic_AppInfo) ProtoMessage() {}

func (x *Basic_AppInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Basic_AppInfo.ProtoReflect.Descriptor instead.
func (*Basic_AppInfo) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{0, 18}
}

func (x *Basic_AppInfo) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *Basic_AppInfo) GetAppVersion() string {
	if x != nil {
		return x.AppVersion
	}
	return ""
}

func (x *Basic_AppInfo) GetAppChannel() string {
	if x != nil {
		return x.AppChannel
	}
	return ""
}

func (x *Basic_AppInfo) GetSdkVersion() string {
	if x != nil {
		return x.SdkVersion
	}
	return ""
}

func (x *Basic_AppInfo) GetExtensionInfo() string {
	if x != nil {
		return x.ExtensionInfo
	}
	return ""
}

type Basic_DeviceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlatformType Basic_DeviceInfo_PlatformType `protobuf:"varint,1,opt,name=platformType,proto3,enum=AcFunDanmu.Im.Basic_DeviceInfo_PlatformType" json:"platformType,omitempty"`
	OsVersion    string                        `protobuf:"bytes,2,opt,name=osVersion,proto3" json:"osVersion,omitempty"`
	DeviceModel  string                        `protobuf:"bytes,3,opt,name=deviceModel,proto3" json:"deviceModel,omitempty"`
	ImeiMd5      []byte                        `protobuf:"bytes,4,opt,name=imeiMd5,proto3" json:"imeiMd5,omitempty"`
	DeviceId     string                        `protobuf:"bytes,5,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
	SoftDid      string                        `protobuf:"bytes,6,opt,name=softDid,proto3" json:"softDid,omitempty"`
	KwaiDid      string                        `protobuf:"bytes,7,opt,name=kwaiDid,proto3" json:"kwaiDid,omitempty"`
	Manufacturer string                        `protobuf:"bytes,8,opt,name=manufacturer,proto3" json:"manufacturer,omitempty"`
	DeviceName   string                        `protobuf:"bytes,9,opt,name=deviceName,proto3" json:"deviceName,omitempty"`
}

func (x *Basic_DeviceInfo) Reset() {
	*x = Basic_DeviceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Basic_DeviceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Basic_DeviceInfo) ProtoMessage() {}

func (x *Basic_DeviceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Basic_DeviceInfo.ProtoReflect.Descriptor instead.
func (*Basic_DeviceInfo) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{0, 19}
}

func (x *Basic_DeviceInfo) GetPlatformType() Basic_DeviceInfo_PlatformType {
	if x != nil {
		return x.PlatformType
	}
	return Basic_DeviceInfo_kInvalid
}

func (x *Basic_DeviceInfo) GetOsVersion() string {
	if x != nil {
		return x.OsVersion
	}
	return ""
}

func (x *Basic_DeviceInfo) GetDeviceModel() string {
	if x != nil {
		return x.DeviceModel
	}
	return ""
}

func (x *Basic_DeviceInfo) GetImeiMd5() []byte {
	if x != nil {
		return x.ImeiMd5
	}
	return nil
}

func (x *Basic_DeviceInfo) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *Basic_DeviceInfo) GetSoftDid() string {
	if x != nil {
		return x.SoftDid
	}
	return ""
}

func (x *Basic_DeviceInfo) GetKwaiDid() string {
	if x != nil {
		return x.KwaiDid
	}
	return ""
}

func (x *Basic_DeviceInfo) GetManufacturer() string {
	if x != nil {
		return x.Manufacturer
	}
	return ""
}

func (x *Basic_DeviceInfo) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

type Basic_EnvInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkType Basic_EnvInfo_NetworkType `protobuf:"varint,1,opt,name=networkType,proto3,enum=AcFunDanmu.Im.Basic_EnvInfo_NetworkType" json:"networkType,omitempty"`
	AppName     []byte                    `protobuf:"bytes,2,opt,name=appName,proto3" json:"appName,omitempty"`
}

func (x *Basic_EnvInfo) Reset() {
	*x = Basic_EnvInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Basic_EnvInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Basic_EnvInfo) ProtoMessage() {}

func (x *Basic_EnvInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Basic_EnvInfo.ProtoReflect.Descriptor instead.
func (*Basic_EnvInfo) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{0, 20}
}

func (x *Basic_EnvInfo) GetNetworkType() Basic_EnvInfo_NetworkType {
	if x != nil {
		return x.NetworkType
	}
	return Basic_EnvInfo_kInvalid
}

func (x *Basic_EnvInfo) GetAppName() []byte {
	if x != nil {
		return x.AppName
	}
	return nil
}

type Basic_RequestBasicInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientType Basic_DeviceInfo_PlatformType `protobuf:"varint,1,opt,name=clientType,proto3,enum=AcFunDanmu.Im.Basic_DeviceInfo_PlatformType" json:"clientType,omitempty"`
	DeviceId   string                        `protobuf:"bytes,2,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
	ClientIp   string                        `protobuf:"bytes,3,opt,name=clientIp,proto3" json:"clientIp,omitempty"`
	AppVersion string                        `protobuf:"bytes,4,opt,name=appVersion,proto3" json:"appVersion,omitempty"`
	Channel    string                        `protobuf:"bytes,5,opt,name=channel,proto3" json:"channel,omitempty"`
	AppInfo    *Basic_AppInfo                `protobuf:"bytes,6,opt,name=appInfo,proto3" json:"appInfo,omitempty"`
	DeviceInfo *Basic_DeviceInfo             `protobuf:"bytes,7,opt,name=deviceInfo,proto3" json:"deviceInfo,omitempty"`
	EnvInfo    *Basic_EnvInfo                `protobuf:"bytes,8,opt,name=envInfo,proto3" json:"envInfo,omitempty"`
	ClientPort int32                         `protobuf:"varint,9,opt,name=clientPort,proto3" json:"clientPort,omitempty"`
	Location   string                        `protobuf:"bytes,10,opt,name=location,proto3" json:"location,omitempty"`
	Kpf        string                        `protobuf:"bytes,11,opt,name=kpf,proto3" json:"kpf,omitempty"`
}

func (x *Basic_RequestBasicInfo) Reset() {
	*x = Basic_RequestBasicInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Basic_RequestBasicInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Basic_RequestBasicInfo) ProtoMessage() {}

func (x *Basic_RequestBasicInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Basic_RequestBasicInfo.ProtoReflect.Descriptor instead.
func (*Basic_RequestBasicInfo) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{0, 21}
}

func (x *Basic_RequestBasicInfo) GetClientType() Basic_DeviceInfo_PlatformType {
	if x != nil {
		return x.ClientType
	}
	return Basic_DeviceInfo_kInvalid
}

func (x *Basic_RequestBasicInfo) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *Basic_RequestBasicInfo) GetClientIp() string {
	if x != nil {
		return x.ClientIp
	}
	return ""
}

func (x *Basic_RequestBasicInfo) GetAppVersion() string {
	if x != nil {
		return x.AppVersion
	}
	return ""
}

func (x *Basic_RequestBasicInfo) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *Basic_RequestBasicInfo) GetAppInfo() *Basic_AppInfo {
	if x != nil {
		return x.AppInfo
	}
	return nil
}

func (x *Basic_RequestBasicInfo) GetDeviceInfo() *Basic_DeviceInfo {
	if x != nil {
		return x.DeviceInfo
	}
	return nil
}

func (x *Basic_RequestBasicInfo) GetEnvInfo() *Basic_EnvInfo {
	if x != nil {
		return x.EnvInfo
	}
	return nil
}

func (x *Basic_RequestBasicInfo) GetClientPort() int32 {
	if x != nil {
		return x.ClientPort
	}
	return 0
}

func (x *Basic_RequestBasicInfo) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *Basic_RequestBasicInfo) GetKpf() string {
	if x != nil {
		return x.Kpf
	}
	return ""
}

type Basic_SyncCookie struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SyncOffset int64 `protobuf:"varint,1,opt,name=syncOffset,proto3" json:"syncOffset,omitempty"`
}

func (x *Basic_SyncCookie) Reset() {
	*x = Basic_SyncCookie{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Basic_SyncCookie) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Basic_SyncCookie) ProtoMessage() {}

func (x *Basic_SyncCookie) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Basic_SyncCookie.ProtoReflect.Descriptor instead.
func (*Basic_SyncCookie) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{0, 22}
}

func (x *Basic_SyncCookie) GetSyncOffset() int64 {
	if x != nil {
		return x.SyncOffset
	}
	return 0
}

type Basic_I18NCopyWriting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FormatKey   string   `protobuf:"bytes,1,opt,name=formatKey,proto3" json:"formatKey,omitempty"`
	FormatParam []string `protobuf:"bytes,2,rep,name=formatParam,proto3" json:"formatParam,omitempty"`
}

func (x *Basic_I18NCopyWriting) Reset() {
	*x = Basic_I18NCopyWriting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Basic_I18NCopyWriting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Basic_I18NCopyWriting) ProtoMessage() {}

func (x *Basic_I18NCopyWriting) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Basic_I18NCopyWriting.ProtoReflect.Descriptor instead.
func (*Basic_I18NCopyWriting) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{0, 23}
}

func (x *Basic_I18NCopyWriting) GetFormatKey() string {
	if x != nil {
		return x.FormatKey
	}
	return ""
}

func (x *Basic_I18NCopyWriting) GetFormatParam() []string {
	if x != nil {
		return x.FormatParam
	}
	return nil
}

type Basic_SdkOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReportIntervalSeconds        int32    `protobuf:"varint,1,opt,name=reportIntervalSeconds,proto3" json:"reportIntervalSeconds,omitempty"`
	ReportSecurity               string   `protobuf:"bytes,2,opt,name=reportSecurity,proto3" json:"reportSecurity,omitempty"`
	Lz4CompressionThresholdBytes int32    `protobuf:"varint,3,opt,name=lz4CompressionThresholdBytes,proto3" json:"lz4CompressionThresholdBytes,omitempty"`
	NetCheckServers              []string `protobuf:"bytes,4,rep,name=netCheckServers,proto3" json:"netCheckServers,omitempty"`
}

func (x *Basic_SdkOption) Reset() {
	*x = Basic_SdkOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Basic_SdkOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Basic_SdkOption) ProtoMessage() {}

func (x *Basic_SdkOption) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Basic_SdkOption.ProtoReflect.Descriptor instead.
func (*Basic_SdkOption) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{0, 24}
}

func (x *Basic_SdkOption) GetReportIntervalSeconds() int32 {
	if x != nil {
		return x.ReportIntervalSeconds
	}
	return 0
}

func (x *Basic_SdkOption) GetReportSecurity() string {
	if x != nil {
		return x.ReportSecurity
	}
	return ""
}

func (x *Basic_SdkOption) GetLz4CompressionThresholdBytes() int32 {
	if x != nil {
		return x.Lz4CompressionThresholdBytes
	}
	return 0
}

func (x *Basic_SdkOption) GetNetCheckServers() []string {
	if x != nil {
		return x.NetCheckServers
	}
	return nil
}

type Basic_ZtCommonInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kpn         string `protobuf:"bytes,1,opt,name=kpn,proto3" json:"kpn,omitempty"`
	Kpf         string `protobuf:"bytes,2,opt,name=kpf,proto3" json:"kpf,omitempty"`
	SubBiz      string `protobuf:"bytes,3,opt,name=subBiz,proto3" json:"subBiz,omitempty"`
	Uid         int64  `protobuf:"varint,4,opt,name=uid,proto3" json:"uid,omitempty"`
	Did         string `protobuf:"bytes,5,opt,name=did,proto3" json:"did,omitempty"`
	ClientIp    int64  `protobuf:"varint,6,opt,name=clientIp,proto3" json:"clientIp,omitempty"`
	AppVer      string `protobuf:"bytes,7,opt,name=appVer,proto3" json:"appVer,omitempty"`
	Ver         string `protobuf:"bytes,8,opt,name=ver,proto3" json:"ver,omitempty"`
	Lat         string `protobuf:"bytes,9,opt,name=lat,proto3" json:"lat,omitempty"`
	Lon         string `protobuf:"bytes,10,opt,name=lon,proto3" json:"lon,omitempty"`
	Mond        string `protobuf:"bytes,11,opt,name=mond,proto3" json:"mond,omitempty"`
	Net         string `protobuf:"bytes,12,opt,name=net,proto3" json:"net,omitempty"`
	Sys         string `protobuf:"bytes,13,opt,name=sys,proto3" json:"sys,omitempty"`
	C           string `protobuf:"bytes,14,opt,name=c,proto3" json:"c,omitempty"`
	Language    string `protobuf:"bytes,15,opt,name=language,proto3" json:"language,omitempty"`
	CountryCode string `protobuf:"bytes,16,opt,name=countryCode,proto3" json:"countryCode,omitempty"`
}

func (x *Basic_ZtCommonInfo) Reset() {
	*x = Basic_ZtCommonInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Basic_ZtCommonInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Basic_ZtCommonInfo) ProtoMessage() {}

func (x *Basic_ZtCommonInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Basic_ZtCommonInfo.ProtoReflect.Descriptor instead.
func (*Basic_ZtCommonInfo) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{0, 25}
}

func (x *Basic_ZtCommonInfo) GetKpn() string {
	if x != nil {
		return x.Kpn
	}
	return ""
}

func (x *Basic_ZtCommonInfo) GetKpf() string {
	if x != nil {
		return x.Kpf
	}
	return ""
}

func (x *Basic_ZtCommonInfo) GetSubBiz() string {
	if x != nil {
		return x.SubBiz
	}
	return ""
}

func (x *Basic_ZtCommonInfo) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *Basic_ZtCommonInfo) GetDid() string {
	if x != nil {
		return x.Did
	}
	return ""
}

func (x *Basic_ZtCommonInfo) GetClientIp() int64 {
	if x != nil {
		return x.ClientIp
	}
	return 0
}

func (x *Basic_ZtCommonInfo) GetAppVer() string {
	if x != nil {
		return x.AppVer
	}
	return ""
}

func (x *Basic_ZtCommonInfo) GetVer() string {
	if x != nil {
		return x.Ver
	}
	return ""
}

func (x *Basic_ZtCommonInfo) GetLat() string {
	if x != nil {
		return x.Lat
	}
	return ""
}

func (x *Basic_ZtCommonInfo) GetLon() string {
	if x != nil {
		return x.Lon
	}
	return ""
}

func (x *Basic_ZtCommonInfo) GetMond() string {
	if x != nil {
		return x.Mond
	}
	return ""
}

func (x *Basic_ZtCommonInfo) GetNet() string {
	if x != nil {
		return x.Net
	}
	return ""
}

func (x *Basic_ZtCommonInfo) GetSys() string {
	if x != nil {
		return x.Sys
	}
	return ""
}

func (x *Basic_ZtCommonInfo) GetC() string {
	if x != nil {
		return x.C
	}
	return ""
}

func (x *Basic_ZtCommonInfo) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *Basic_ZtCommonInfo) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

type Basic_FrontendInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip   string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Port int32  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *Basic_FrontendInfo) Reset() {
	*x = Basic_FrontendInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Basic_FrontendInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Basic_FrontendInfo) ProtoMessage() {}

func (x *Basic_FrontendInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Basic_FrontendInfo.ProtoReflect.Descriptor instead.
func (*Basic_FrontendInfo) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{0, 26}
}

func (x *Basic_FrontendInfo) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *Basic_FrontendInfo) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type Message_Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeqId                int64             `protobuf:"varint,1,opt,name=seqId,proto3" json:"seqId,omitempty"`
	ClientSeqId          int64             `protobuf:"varint,2,opt,name=clientSeqId,proto3" json:"clientSeqId,omitempty"`
	TimestampMs          int64             `protobuf:"varint,3,opt,name=timestampMs,proto3" json:"timestampMs,omitempty"`
	FromUser             *Basic_User       `protobuf:"bytes,4,opt,name=fromUser,proto3" json:"fromUser,omitempty"`
	TargetId             int64             `protobuf:"varint,5,opt,name=targetId,proto3" json:"targetId,omitempty"`
	ToUser               *Basic_User       `protobuf:"bytes,6,opt,name=toUser,proto3" json:"toUser,omitempty"`
	Title                string            `protobuf:"bytes,7,opt,name=title,proto3" json:"title,omitempty"`
	ContentType          int32             `protobuf:"varint,8,opt,name=contentType,proto3" json:"contentType,omitempty"`
	Content              []byte            `protobuf:"bytes,9,opt,name=content,proto3" json:"content,omitempty"`
	BuckupTips           string            `protobuf:"bytes,10,opt,name=buckupTips,proto3" json:"buckupTips,omitempty"`
	Receivers            []*Basic_User     `protobuf:"bytes,11,rep,name=receivers,proto3" json:"receivers,omitempty"`
	NotContentUnread     bool              `protobuf:"varint,12,opt,name=notContentUnread,proto3" json:"notContentUnread,omitempty"`
	SessionPriority      int32             `protobuf:"varint,13,opt,name=sessionPriority,proto3" json:"sessionPriority,omitempty"`
	SessionCategoryId    int32             `protobuf:"varint,14,opt,name=sessionCategoryId,proto3" json:"sessionCategoryId,omitempty"`
	SessionAccountType   int32             `protobuf:"varint,15,opt,name=sessionAccountType,proto3" json:"sessionAccountType,omitempty"`
	NotAutoCreateSession bool              `protobuf:"varint,16,opt,name=notAutoCreateSession,proto3" json:"notAutoCreateSession,omitempty"`
	UserRelationship     int32             `protobuf:"varint,17,opt,name=userRelationship,proto3" json:"userRelationship,omitempty"`
	StrTargetId          string            `protobuf:"bytes,18,opt,name=strTargetId,proto3" json:"strTargetId,omitempty"`
	ExcludeReceivers     []*Basic_User     `protobuf:"bytes,19,rep,name=excludeReceivers,proto3" json:"excludeReceivers,omitempty"`
	MarkDelte            bool              `protobuf:"varint,20,opt,name=markDelte,proto3" json:"markDelte,omitempty"`
	Reminder             *Message_Reminder `protobuf:"bytes,21,opt,name=reminder,proto3" json:"reminder,omitempty"`
	Extra                []byte            `protobuf:"bytes,22,opt,name=extra,proto3" json:"extra,omitempty"`
	ReceiptRequired      bool              `protobuf:"varint,23,opt,name=receiptRequired,proto3" json:"receiptRequired,omitempty"`
}

func (x *Message_Message) Reset() {
	*x = Message_Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_Message) ProtoMessage() {}

func (x *Message_Message) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_Message.ProtoReflect.Descriptor instead.
func (*Message_Message) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 0}
}

func (x *Message_Message) GetSeqId() int64 {
	if x != nil {
		return x.SeqId
	}
	return 0
}

func (x *Message_Message) GetClientSeqId() int64 {
	if x != nil {
		return x.ClientSeqId
	}
	return 0
}

func (x *Message_Message) GetTimestampMs() int64 {
	if x != nil {
		return x.TimestampMs
	}
	return 0
}

func (x *Message_Message) GetFromUser() *Basic_User {
	if x != nil {
		return x.FromUser
	}
	return nil
}

func (x *Message_Message) GetTargetId() int64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *Message_Message) GetToUser() *Basic_User {
	if x != nil {
		return x.ToUser
	}
	return nil
}

func (x *Message_Message) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Message_Message) GetContentType() int32 {
	if x != nil {
		return x.ContentType
	}
	return 0
}

func (x *Message_Message) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *Message_Message) GetBuckupTips() string {
	if x != nil {
		return x.BuckupTips
	}
	return ""
}

func (x *Message_Message) GetReceivers() []*Basic_User {
	if x != nil {
		return x.Receivers
	}
	return nil
}

func (x *Message_Message) GetNotContentUnread() bool {
	if x != nil {
		return x.NotContentUnread
	}
	return false
}

func (x *Message_Message) GetSessionPriority() int32 {
	if x != nil {
		return x.SessionPriority
	}
	return 0
}

func (x *Message_Message) GetSessionCategoryId() int32 {
	if x != nil {
		return x.SessionCategoryId
	}
	return 0
}

func (x *Message_Message) GetSessionAccountType() int32 {
	if x != nil {
		return x.SessionAccountType
	}
	return 0
}

func (x *Message_Message) GetNotAutoCreateSession() bool {
	if x != nil {
		return x.NotAutoCreateSession
	}
	return false
}

func (x *Message_Message) GetUserRelationship() int32 {
	if x != nil {
		return x.UserRelationship
	}
	return 0
}

func (x *Message_Message) GetStrTargetId() string {
	if x != nil {
		return x.StrTargetId
	}
	return ""
}

func (x *Message_Message) GetExcludeReceivers() []*Basic_User {
	if x != nil {
		return x.ExcludeReceivers
	}
	return nil
}

func (x *Message_Message) GetMarkDelte() bool {
	if x != nil {
		return x.MarkDelte
	}
	return false
}

func (x *Message_Message) GetReminder() *Message_Reminder {
	if x != nil {
		return x.Reminder
	}
	return nil
}

func (x *Message_Message) GetExtra() []byte {
	if x != nil {
		return x.Extra
	}
	return nil
}

func (x *Message_Message) GetReceiptRequired() bool {
	if x != nil {
		return x.ReceiptRequired
	}
	return false
}

type Message_SendMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientSeqId        int64 `protobuf:"varint,1,opt,name=clientSeqId,proto3" json:"clientSeqId,omitempty"`
	MessageTimestamp   int64 `protobuf:"varint,2,opt,name=messageTimestamp,proto3" json:"messageTimestamp,omitempty"`
	SeqId              int64 `protobuf:"varint,3,opt,name=seqId,proto3" json:"seqId,omitempty"`
	SessionAccountType int32 `protobuf:"varint,4,opt,name=sessionAccountType,proto3" json:"sessionAccountType,omitempty"`
	SessionPriority    int32 `protobuf:"varint,5,opt,name=sessionPriority,proto3" json:"sessionPriority,omitempty"`
	SessionCategoryId  int32 `protobuf:"varint,6,opt,name=sessionCategoryId,proto3" json:"sessionCategoryId,omitempty"`
}

func (x *Message_SendMessageResponse) Reset() {
	*x = Message_SendMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_SendMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_SendMessageResponse) ProtoMessage() {}

func (x *Message_SendMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_SendMessageResponse.ProtoReflect.Descriptor instead.
func (*Message_SendMessageResponse) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 1}
}

func (x *Message_SendMessageResponse) GetClientSeqId() int64 {
	if x != nil {
		return x.ClientSeqId
	}
	return 0
}

func (x *Message_SendMessageResponse) GetMessageTimestamp() int64 {
	if x != nil {
		return x.MessageTimestamp
	}
	return 0
}

func (x *Message_SendMessageResponse) GetSeqId() int64 {
	if x != nil {
		return x.SeqId
	}
	return 0
}

func (x *Message_SendMessageResponse) GetSessionAccountType() int32 {
	if x != nil {
		return x.SessionAccountType
	}
	return 0
}

func (x *Message_SendMessageResponse) GetSessionPriority() int32 {
	if x != nil {
		return x.SessionPriority
	}
	return 0
}

func (x *Message_SendMessageResponse) GetSessionCategoryId() int32 {
	if x != nil {
		return x.SessionCategoryId
	}
	return 0
}

type Message_PullOldRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target      *Basic_User `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	MinSeq      int64       `protobuf:"varint,2,opt,name=minSeq,proto3" json:"minSeq,omitempty"`
	MaxSeq      int64       `protobuf:"varint,3,opt,name=maxSeq,proto3" json:"maxSeq,omitempty"`
	Count       int32       `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`
	TargetId    int64       `protobuf:"varint,5,opt,name=targetId,proto3" json:"targetId,omitempty"`
	StrTargetId string      `protobuf:"bytes,6,opt,name=strTargetId,proto3" json:"strTargetId,omitempty"`
}

func (x *Message_PullOldRequest) Reset() {
	*x = Message_PullOldRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_PullOldRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_PullOldRequest) ProtoMessage() {}

func (x *Message_PullOldRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_PullOldRequest.ProtoReflect.Descriptor instead.
func (*Message_PullOldRequest) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 2}
}

func (x *Message_PullOldRequest) GetTarget() *Basic_User {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *Message_PullOldRequest) GetMinSeq() int64 {
	if x != nil {
		return x.MinSeq
	}
	return 0
}

func (x *Message_PullOldRequest) GetMaxSeq() int64 {
	if x != nil {
		return x.MaxSeq
	}
	return 0
}

func (x *Message_PullOldRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *Message_PullOldRequest) GetTargetId() int64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *Message_PullOldRequest) GetStrTargetId() string {
	if x != nil {
		return x.StrTargetId
	}
	return ""
}

type Message_PullOldResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messages   []*Message_Message `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	ServerTime int64              `protobuf:"varint,2,opt,name=serverTime,proto3" json:"serverTime,omitempty"`
}

func (x *Message_PullOldResponse) Reset() {
	*x = Message_PullOldResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_PullOldResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_PullOldResponse) ProtoMessage() {}

func (x *Message_PullOldResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_PullOldResponse.ProtoReflect.Descriptor instead.
func (*Message_PullOldResponse) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 3}
}

func (x *Message_PullOldResponse) GetMessages() []*Message_Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *Message_PullOldResponse) GetServerTime() int64 {
	if x != nil {
		return x.ServerTime
	}
	return 0
}

type Message_PullNewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target      *Basic_User `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	MinSeq      int64       `protobuf:"varint,2,opt,name=minSeq,proto3" json:"minSeq,omitempty"`
	Count       int32       `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	TargetId    int64       `protobuf:"varint,4,opt,name=targetId,proto3" json:"targetId,omitempty"`
	StrTargetId string      `protobuf:"bytes,5,opt,name=strTargetId,proto3" json:"strTargetId,omitempty"`
}

func (x *Message_PullNewRequest) Reset() {
	*x = Message_PullNewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_PullNewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_PullNewRequest) ProtoMessage() {}

func (x *Message_PullNewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_PullNewRequest.ProtoReflect.Descriptor instead.
func (*Message_PullNewRequest) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 4}
}

func (x *Message_PullNewRequest) GetTarget() *Basic_User {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *Message_PullNewRequest) GetMinSeq() int64 {
	if x != nil {
		return x.MinSeq
	}
	return 0
}

func (x *Message_PullNewRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *Message_PullNewRequest) GetTargetId() int64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *Message_PullNewRequest) GetStrTargetId() string {
	if x != nil {
		return x.StrTargetId
	}
	return ""
}

type Message_PullNewResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messages []*Message_Message `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *Message_PullNewResponse) Reset() {
	*x = Message_PullNewResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_PullNewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_PullNewResponse) ProtoMessage() {}

func (x *Message_PullNewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_PullNewResponse.ProtoReflect.Descriptor instead.
func (*Message_PullNewResponse) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 5}
}

func (x *Message_PullNewResponse) GetMessages() []*Message_Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

type Message_SessionListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SyncCookie      *Basic_SyncCookie `protobuf:"bytes,1,opt,name=syncCookie,proto3" json:"syncCookie,omitempty"`
	CategoryId      int32             `protobuf:"varint,2,opt,name=categoryId,proto3" json:"categoryId,omitempty"`
	LocalDataStatus int32             `protobuf:"varint,3,opt,name=localDataStatus,proto3" json:"localDataStatus,omitempty"`
}

func (x *Message_SessionListRequest) Reset() {
	*x = Message_SessionListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_SessionListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_SessionListRequest) ProtoMessage() {}

func (x *Message_SessionListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_SessionListRequest.ProtoReflect.Descriptor instead.
func (*Message_SessionListRequest) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 6}
}

func (x *Message_SessionListRequest) GetSyncCookie() *Basic_SyncCookie {
	if x != nil {
		return x.SyncCookie
	}
	return nil
}

func (x *Message_SessionListRequest) GetCategoryId() int32 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *Message_SessionListRequest) GetLocalDataStatus() int32 {
	if x != nil {
		return x.LocalDataStatus
	}
	return 0
}

type Message_ChatSession struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target           *Basic_User            `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	MaxSeqId         int64                  `protobuf:"varint,2,opt,name=maxSeqId,proto3" json:"maxSeqId,omitempty"`
	ReadSeqId        int64                  `protobuf:"varint,3,opt,name=readSeqId,proto3" json:"readSeqId,omitempty"`
	UnreadMsgCount   int32                  `protobuf:"varint,4,opt,name=unreadMsgCount,proto3" json:"unreadMsgCount,omitempty"`
	LatestMessage    []*Message_Message     `protobuf:"bytes,5,rep,name=latestMessage,proto3" json:"latestMessage,omitempty"`
	ChatTargetType   Message_ChatTargetType `protobuf:"varint,8,opt,name=chatTargetType,proto3,enum=AcFunDanmu.Im.Message_ChatTargetType" json:"chatTargetType,omitempty"`
	TargetId         int64                  `protobuf:"varint,9,opt,name=targetId,proto3" json:"targetId,omitempty"`
	ActiveTime       int64                  `protobuf:"varint,10,opt,name=activeTime,proto3" json:"activeTime,omitempty"`
	Priority         int32                  `protobuf:"varint,11,opt,name=priority,proto3" json:"priority,omitempty"`
	CategoryId       int32                  `protobuf:"varint,12,opt,name=categoryId,proto3" json:"categoryId,omitempty"`
	Cursor           string                 `protobuf:"bytes,13,opt,name=cursor,proto3" json:"cursor,omitempty"`
	AccountType      int32                  `protobuf:"varint,14,opt,name=accountType,proto3" json:"accountType,omitempty"`
	AggregateSession bool                   `protobuf:"varint,15,opt,name=aggregateSession,proto3" json:"aggregateSession,omitempty"`
	JumpCategoryId   int32                  `protobuf:"varint,16,opt,name=jumpCategoryId,proto3" json:"jumpCategoryId,omitempty"`
	ExpireAt         int64                  `protobuf:"varint,17,opt,name=expireAt,proto3" json:"expireAt,omitempty"`
	EffectiveFrom    int64                  `protobuf:"varint,18,opt,name=effectiveFrom,proto3" json:"effectiveFrom,omitempty"`
	StrTargetId      string                 `protobuf:"bytes,19,opt,name=strTargetId,proto3" json:"strTargetId,omitempty"`
	RemindBody       []*Message_RemindBody  `protobuf:"bytes,20,rep,name=remindBody,proto3" json:"remindBody,omitempty"`
	TargetReadSeqId  int64                  `protobuf:"varint,21,opt,name=targetReadSeqId,proto3" json:"targetReadSeqId,omitempty"`
}

func (x *Message_ChatSession) Reset() {
	*x = Message_ChatSession{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_ChatSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_ChatSession) ProtoMessage() {}

func (x *Message_ChatSession) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_ChatSession.ProtoReflect.Descriptor instead.
func (*Message_ChatSession) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 7}
}

func (x *Message_ChatSession) GetTarget() *Basic_User {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *Message_ChatSession) GetMaxSeqId() int64 {
	if x != nil {
		return x.MaxSeqId
	}
	return 0
}

func (x *Message_ChatSession) GetReadSeqId() int64 {
	if x != nil {
		return x.ReadSeqId
	}
	return 0
}

func (x *Message_ChatSession) GetUnreadMsgCount() int32 {
	if x != nil {
		return x.UnreadMsgCount
	}
	return 0
}

func (x *Message_ChatSession) GetLatestMessage() []*Message_Message {
	if x != nil {
		return x.LatestMessage
	}
	return nil
}

func (x *Message_ChatSession) GetChatTargetType() Message_ChatTargetType {
	if x != nil {
		return x.ChatTargetType
	}
	return Message_CTT_USER
}

func (x *Message_ChatSession) GetTargetId() int64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *Message_ChatSession) GetActiveTime() int64 {
	if x != nil {
		return x.ActiveTime
	}
	return 0
}

func (x *Message_ChatSession) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *Message_ChatSession) GetCategoryId() int32 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *Message_ChatSession) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

func (x *Message_ChatSession) GetAccountType() int32 {
	if x != nil {
		return x.AccountType
	}
	return 0
}

func (x *Message_ChatSession) GetAggregateSession() bool {
	if x != nil {
		return x.AggregateSession
	}
	return false
}

func (x *Message_ChatSession) GetJumpCategoryId() int32 {
	if x != nil {
		return x.JumpCategoryId
	}
	return 0
}

func (x *Message_ChatSession) GetExpireAt() int64 {
	if x != nil {
		return x.ExpireAt
	}
	return 0
}

func (x *Message_ChatSession) GetEffectiveFrom() int64 {
	if x != nil {
		return x.EffectiveFrom
	}
	return 0
}

func (x *Message_ChatSession) GetStrTargetId() string {
	if x != nil {
		return x.StrTargetId
	}
	return ""
}

func (x *Message_ChatSession) GetRemindBody() []*Message_RemindBody {
	if x != nil {
		return x.RemindBody
	}
	return nil
}

func (x *Message_ChatSession) GetTargetReadSeqId() int64 {
	if x != nil {
		return x.TargetReadSeqId
	}
	return 0
}

type Message_Reminder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OriginText string                `protobuf:"bytes,1,opt,name=originText,proto3" json:"originText,omitempty"`
	RemindBody []*Message_RemindBody `protobuf:"bytes,2,rep,name=remindBody,proto3" json:"remindBody,omitempty"`
}

func (x *Message_Reminder) Reset() {
	*x = Message_Reminder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_Reminder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_Reminder) ProtoMessage() {}

func (x *Message_Reminder) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_Reminder.ProtoReflect.Descriptor instead.
func (*Message_Reminder) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 8}
}

func (x *Message_Reminder) GetOriginText() string {
	if x != nil {
		return x.OriginText
	}
	return ""
}

func (x *Message_Reminder) GetRemindBody() []*Message_RemindBody {
	if x != nil {
		return x.RemindBody
	}
	return nil
}

type Message_RemindBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RemindType Message_RemindBody_RemindType `protobuf:"varint,1,opt,name=remindType,proto3,enum=AcFunDanmu.Im.Message_RemindBody_RemindType" json:"remindType,omitempty"`
	SeqId      int64                         `protobuf:"varint,2,opt,name=seqId,proto3" json:"seqId,omitempty"`
	TargetId   int64                         `protobuf:"varint,3,opt,name=targetId,proto3" json:"targetId,omitempty"`
	UserName   string                        `protobuf:"bytes,4,opt,name=userName,proto3" json:"userName,omitempty"`
	StartIndex int32                         `protobuf:"varint,5,opt,name=startIndex,proto3" json:"startIndex,omitempty"`
	Length     int32                         `protobuf:"varint,6,opt,name=length,proto3" json:"length,omitempty"`
}

func (x *Message_RemindBody) Reset() {
	*x = Message_RemindBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_RemindBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_RemindBody) ProtoMessage() {}

func (x *Message_RemindBody) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_RemindBody.ProtoReflect.Descriptor instead.
func (*Message_RemindBody) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 9}
}

func (x *Message_RemindBody) GetRemindType() Message_RemindBody_RemindType {
	if x != nil {
		return x.RemindType
	}
	return Message_RemindBody_UNKNOWN
}

func (x *Message_RemindBody) GetSeqId() int64 {
	if x != nil {
		return x.SeqId
	}
	return 0
}

func (x *Message_RemindBody) GetTargetId() int64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *Message_RemindBody) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *Message_RemindBody) GetStartIndex() int32 {
	if x != nil {
		return x.StartIndex
	}
	return 0
}

func (x *Message_RemindBody) GetLength() int32 {
	if x != nil {
		return x.Length
	}
	return 0
}

type Message_ChatTarget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId   string                 `protobuf:"bytes,1,opt,name=targetId,proto3" json:"targetId,omitempty"`
	TargetType Message_ChatTargetType `protobuf:"varint,2,opt,name=targetType,proto3,enum=AcFunDanmu.Im.Message_ChatTargetType" json:"targetType,omitempty"`
}

func (x *Message_ChatTarget) Reset() {
	*x = Message_ChatTarget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_ChatTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_ChatTarget) ProtoMessage() {}

func (x *Message_ChatTarget) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_ChatTarget.ProtoReflect.Descriptor instead.
func (*Message_ChatTarget) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 10}
}

func (x *Message_ChatTarget) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *Message_ChatTarget) GetTargetType() Message_ChatTargetType {
	if x != nil {
		return x.TargetType
	}
	return Message_CTT_USER
}

type Message_SessionListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SyncCookie       *Basic_SyncCookie      `protobuf:"bytes,1,opt,name=syncCookie,proto3" json:"syncCookie,omitempty"`
	Sessions         []*Message_ChatSession `protobuf:"bytes,2,rep,name=sessions,proto3" json:"sessions,omitempty"`
	NotFullFetch     bool                   `protobuf:"varint,3,opt,name=notFullFetch,proto3" json:"notFullFetch,omitempty"`
	ServerTime       int64                  `protobuf:"varint,4,opt,name=serverTime,proto3" json:"serverTime,omitempty"`
	ClearLocalData   bool                   `protobuf:"varint,5,opt,name=clearLocalData,proto3" json:"clearLocalData,omitempty"`
	CategoryId       int32                  `protobuf:"varint,6,opt,name=categoryId,proto3" json:"categoryId,omitempty"`
	ClientDataStatus int32                  `protobuf:"varint,7,opt,name=clientDataStatus,proto3" json:"clientDataStatus,omitempty"`
}

func (x *Message_SessionListResponse) Reset() {
	*x = Message_SessionListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_SessionListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_SessionListResponse) ProtoMessage() {}

func (x *Message_SessionListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_SessionListResponse.ProtoReflect.Descriptor instead.
func (*Message_SessionListResponse) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 11}
}

func (x *Message_SessionListResponse) GetSyncCookie() *Basic_SyncCookie {
	if x != nil {
		return x.SyncCookie
	}
	return nil
}

func (x *Message_SessionListResponse) GetSessions() []*Message_ChatSession {
	if x != nil {
		return x.Sessions
	}
	return nil
}

func (x *Message_SessionListResponse) GetNotFullFetch() bool {
	if x != nil {
		return x.NotFullFetch
	}
	return false
}

func (x *Message_SessionListResponse) GetServerTime() int64 {
	if x != nil {
		return x.ServerTime
	}
	return 0
}

func (x *Message_SessionListResponse) GetClearLocalData() bool {
	if x != nil {
		return x.ClearLocalData
	}
	return false
}

func (x *Message_SessionListResponse) GetCategoryId() int32 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *Message_SessionListResponse) GetClientDataStatus() int32 {
	if x != nil {
		return x.ClientDataStatus
	}
	return 0
}

type Message_SessionPageListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cursor     string `protobuf:"bytes,1,opt,name=cursor,proto3" json:"cursor,omitempty"`
	Count      int32  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	CategoryId int32  `protobuf:"varint,3,opt,name=categoryId,proto3" json:"categoryId,omitempty"`
}

func (x *Message_SessionPageListRequest) Reset() {
	*x = Message_SessionPageListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_SessionPageListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_SessionPageListRequest) ProtoMessage() {}

func (x *Message_SessionPageListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_SessionPageListRequest.ProtoReflect.Descriptor instead.
func (*Message_SessionPageListRequest) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 12}
}

func (x *Message_SessionPageListRequest) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

func (x *Message_SessionPageListRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *Message_SessionPageListRequest) GetCategoryId() int32 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

type Message_SessionPageListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HasMore  bool                   `protobuf:"varint,1,opt,name=hasMore,proto3" json:"hasMore,omitempty"`
	Sessions []*Message_ChatSession `protobuf:"bytes,2,rep,name=sessions,proto3" json:"sessions,omitempty"`
}

func (x *Message_SessionPageListResponse) Reset() {
	*x = Message_SessionPageListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_SessionPageListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_SessionPageListResponse) ProtoMessage() {}

func (x *Message_SessionPageListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_SessionPageListResponse.ProtoReflect.Descriptor instead.
func (*Message_SessionPageListResponse) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 13}
}

func (x *Message_SessionPageListResponse) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *Message_SessionPageListResponse) GetSessions() []*Message_ChatSession {
	if x != nil {
		return x.Sessions
	}
	return nil
}

type Message_SessionRemoveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId            int64                  `protobuf:"varint,1,opt,name=targetId,proto3" json:"targetId,omitempty"`
	ChatTargetType      Message_ChatTargetType `protobuf:"varint,2,opt,name=chatTargetType,proto3,enum=AcFunDanmu.Im.Message_ChatTargetType" json:"chatTargetType,omitempty"`
	CategoryId          int32                  `protobuf:"varint,3,opt,name=categoryId,proto3" json:"categoryId,omitempty"`
	StrTargetId         string                 `protobuf:"bytes,4,opt,name=strTargetId,proto3" json:"strTargetId,omitempty"`
	NotCleanAllMessages bool                   `protobuf:"varint,5,opt,name=notCleanAllMessages,proto3" json:"notCleanAllMessages,omitempty"`
}

func (x *Message_SessionRemoveRequest) Reset() {
	*x = Message_SessionRemoveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_SessionRemoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_SessionRemoveRequest) ProtoMessage() {}

func (x *Message_SessionRemoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_SessionRemoveRequest.ProtoReflect.Descriptor instead.
func (*Message_SessionRemoveRequest) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 14}
}

func (x *Message_SessionRemoveRequest) GetTargetId() int64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *Message_SessionRemoveRequest) GetChatTargetType() Message_ChatTargetType {
	if x != nil {
		return x.ChatTargetType
	}
	return Message_CTT_USER
}

func (x *Message_SessionRemoveRequest) GetCategoryId() int32 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *Message_SessionRemoveRequest) GetStrTargetId() string {
	if x != nil {
		return x.StrTargetId
	}
	return ""
}

func (x *Message_SessionRemoveRequest) GetNotCleanAllMessages() bool {
	if x != nil {
		return x.NotCleanAllMessages
	}
	return false
}

type Message_SessionRemoveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Message_SessionRemoveResponse) Reset() {
	*x = Message_SessionRemoveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_SessionRemoveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_SessionRemoveResponse) ProtoMessage() {}

func (x *Message_SessionRemoveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_SessionRemoveResponse.ProtoReflect.Descriptor instead.
func (*Message_SessionRemoveResponse) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 15}
}

type Message_SessionCleanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatTarget *Message_ChatTarget `protobuf:"bytes,1,opt,name=chatTarget,proto3" json:"chatTarget,omitempty"`
}

func (x *Message_SessionCleanRequest) Reset() {
	*x = Message_SessionCleanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_SessionCleanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_SessionCleanRequest) ProtoMessage() {}

func (x *Message_SessionCleanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_SessionCleanRequest.ProtoReflect.Descriptor instead.
func (*Message_SessionCleanRequest) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 16}
}

func (x *Message_SessionCleanRequest) GetChatTarget() *Message_ChatTarget {
	if x != nil {
		return x.ChatTarget
	}
	return nil
}

type Message_SessionCleanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Message_SessionCleanResponse) Reset() {
	*x = Message_SessionCleanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_SessionCleanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_SessionCleanResponse) ProtoMessage() {}

func (x *Message_SessionCleanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_SessionCleanResponse.ProtoReflect.Descriptor instead.
func (*Message_SessionCleanResponse) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 17}
}

type Message_MessageDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId       int64                  `protobuf:"varint,1,opt,name=targetId,proto3" json:"targetId,omitempty"`
	ChatTargetType Message_ChatTargetType `protobuf:"varint,2,opt,name=chatTargetType,proto3,enum=AcFunDanmu.Im.Message_ChatTargetType" json:"chatTargetType,omitempty"`
	SeqId          []int64                `protobuf:"varint,3,rep,packed,name=seqId,proto3" json:"seqId,omitempty"`
	StrTargetId    string                 `protobuf:"bytes,4,opt,name=strTargetId,proto3" json:"strTargetId,omitempty"`
}

func (x *Message_MessageDeleteRequest) Reset() {
	*x = Message_MessageDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_MessageDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_MessageDeleteRequest) ProtoMessage() {}

func (x *Message_MessageDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_MessageDeleteRequest.ProtoReflect.Descriptor instead.
func (*Message_MessageDeleteRequest) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 18}
}

func (x *Message_MessageDeleteRequest) GetTargetId() int64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *Message_MessageDeleteRequest) GetChatTargetType() Message_ChatTargetType {
	if x != nil {
		return x.ChatTargetType
	}
	return Message_CTT_USER
}

func (x *Message_MessageDeleteRequest) GetSeqId() []int64 {
	if x != nil {
		return x.SeqId
	}
	return nil
}

func (x *Message_MessageDeleteRequest) GetStrTargetId() string {
	if x != nil {
		return x.StrTargetId
	}
	return ""
}

type Message_MessageDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Message_MessageDeleteResponse) Reset() {
	*x = Message_MessageDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_MessageDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_MessageDeleteResponse) ProtoMessage() {}

func (x *Message_MessageDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_MessageDeleteResponse.ProtoReflect.Descriptor instead.
func (*Message_MessageDeleteResponse) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 19}
}

type Message_MessageCancelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatTarget *Message_ChatTarget `protobuf:"bytes,1,opt,name=chatTarget,proto3" json:"chatTarget,omitempty"`
	SeqId      []int64             `protobuf:"varint,2,rep,packed,name=seqId,proto3" json:"seqId,omitempty"`
}

func (x *Message_MessageCancelRequest) Reset() {
	*x = Message_MessageCancelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_MessageCancelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_MessageCancelRequest) ProtoMessage() {}

func (x *Message_MessageCancelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_MessageCancelRequest.ProtoReflect.Descriptor instead.
func (*Message_MessageCancelRequest) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 20}
}

func (x *Message_MessageCancelRequest) GetChatTarget() *Message_ChatTarget {
	if x != nil {
		return x.ChatTarget
	}
	return nil
}

func (x *Message_MessageCancelRequest) GetSeqId() []int64 {
	if x != nil {
		return x.SeqId
	}
	return nil
}

type Message_MessageCancelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Message_MessageCancelResponse) Reset() {
	*x = Message_MessageCancelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_MessageCancelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_MessageCancelResponse) ProtoMessage() {}

func (x *Message_MessageCancelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_MessageCancelResponse.ProtoReflect.Descriptor instead.
func (*Message_MessageCancelResponse) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 21}
}

type Message_MessageClearRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatTarget *Message_ChatTarget `protobuf:"bytes,1,opt,name=chatTarget,proto3" json:"chatTarget,omitempty"`
}

func (x *Message_MessageClearRequest) Reset() {
	*x = Message_MessageClearRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_MessageClearRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_MessageClearRequest) ProtoMessage() {}

func (x *Message_MessageClearRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_MessageClearRequest.ProtoReflect.Descriptor instead.
func (*Message_MessageClearRequest) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 22}
}

func (x *Message_MessageClearRequest) GetChatTarget() *Message_ChatTarget {
	if x != nil {
		return x.ChatTarget
	}
	return nil
}

type Message_MessageClearResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Message_MessageClearResponse) Reset() {
	*x = Message_MessageClearResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_MessageClearResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_MessageClearResponse) ProtoMessage() {}

func (x *Message_MessageClearResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_MessageClearResponse.ProtoReflect.Descriptor instead.
func (*Message_MessageClearResponse) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 23}
}

type Message_ReadSeqInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatTarget *Message_ChatTarget `protobuf:"bytes,1,opt,name=chatTarget,proto3" json:"chatTarget,omitempty"`
	ReadSeq    int64               `protobuf:"varint,2,opt,name=readSeq,proto3" json:"readSeq,omitempty"`
}

func (x *Message_ReadSeqInfo) Reset() {
	*x = Message_ReadSeqInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_ReadSeqInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_ReadSeqInfo) ProtoMessage() {}

func (x *Message_ReadSeqInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_ReadSeqInfo.ProtoReflect.Descriptor instead.
func (*Message_ReadSeqInfo) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 24}
}

func (x *Message_ReadSeqInfo) GetChatTarget() *Message_ChatTarget {
	if x != nil {
		return x.ChatTarget
	}
	return nil
}

func (x *Message_ReadSeqInfo) GetReadSeq() int64 {
	if x != nil {
		return x.ReadSeq
	}
	return 0
}

type Message_MessageReadSeqRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatTarget []*Message_ChatTarget `protobuf:"bytes,1,rep,name=chatTarget,proto3" json:"chatTarget,omitempty"`
}

func (x *Message_MessageReadSeqRequest) Reset() {
	*x = Message_MessageReadSeqRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_MessageReadSeqRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_MessageReadSeqRequest) ProtoMessage() {}

func (x *Message_MessageReadSeqRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_MessageReadSeqRequest.ProtoReflect.Descriptor instead.
func (*Message_MessageReadSeqRequest) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 25}
}

func (x *Message_MessageReadSeqRequest) GetChatTarget() []*Message_ChatTarget {
	if x != nil {
		return x.ChatTarget
	}
	return nil
}

type Message_MessageReadSeqResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReadSeqInfo []*Message_ReadSeqInfo `protobuf:"bytes,1,rep,name=readSeqInfo,proto3" json:"readSeqInfo,omitempty"`
}

func (x *Message_MessageReadSeqResponse) Reset() {
	*x = Message_MessageReadSeqResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_MessageReadSeqResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_MessageReadSeqResponse) ProtoMessage() {}

func (x *Message_MessageReadSeqResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_MessageReadSeqResponse.ProtoReflect.Descriptor instead.
func (*Message_MessageReadSeqResponse) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 26}
}

func (x *Message_MessageReadSeqResponse) GetReadSeqInfo() []*Message_ReadSeqInfo {
	if x != nil {
		return x.ReadSeqInfo
	}
	return nil
}

type Message_MessageReadPush struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId       int64                  `protobuf:"varint,1,opt,name=targetId,proto3" json:"targetId,omitempty"`
	ReadSeq        int64                  `protobuf:"varint,2,opt,name=readSeq,proto3" json:"readSeq,omitempty"`
	ChatTargetType Message_ChatTargetType `protobuf:"varint,3,opt,name=chatTargetType,proto3,enum=AcFunDanmu.Im.Message_ChatTargetType" json:"chatTargetType,omitempty"`
	StrTargetId    string                 `protobuf:"bytes,4,opt,name=strTargetId,proto3" json:"strTargetId,omitempty"`
}

func (x *Message_MessageReadPush) Reset() {
	*x = Message_MessageReadPush{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_MessageReadPush) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_MessageReadPush) ProtoMessage() {}

func (x *Message_MessageReadPush) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_MessageReadPush.ProtoReflect.Descriptor instead.
func (*Message_MessageReadPush) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 27}
}

func (x *Message_MessageReadPush) GetTargetId() int64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *Message_MessageReadPush) GetReadSeq() int64 {
	if x != nil {
		return x.ReadSeq
	}
	return 0
}

func (x *Message_MessageReadPush) GetChatTargetType() Message_ChatTargetType {
	if x != nil {
		return x.ChatTargetType
	}
	return Message_CTT_USER
}

func (x *Message_MessageReadPush) GetStrTargetId() string {
	if x != nil {
		return x.StrTargetId
	}
	return ""
}

type Message_AllUnreadCountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Message_AllUnreadCountRequest) Reset() {
	*x = Message_AllUnreadCountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_AllUnreadCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_AllUnreadCountRequest) ProtoMessage() {}

func (x *Message_AllUnreadCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_AllUnreadCountRequest.ProtoReflect.Descriptor instead.
func (*Message_AllUnreadCountRequest) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 28}
}

type Message_AllUnreadCountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllUnreadCount int32 `protobuf:"varint,1,opt,name=allUnreadCount,proto3" json:"allUnreadCount,omitempty"`
}

func (x *Message_AllUnreadCountResponse) Reset() {
	*x = Message_AllUnreadCountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_AllUnreadCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_AllUnreadCountResponse) ProtoMessage() {}

func (x *Message_AllUnreadCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_AllUnreadCountResponse.ProtoReflect.Descriptor instead.
func (*Message_AllUnreadCountResponse) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 29}
}

func (x *Message_AllUnreadCountResponse) GetAllUnreadCount() int32 {
	if x != nil {
		return x.AllUnreadCount
	}
	return 0
}

type Message_MessageReadAllRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionCategoryId int32 `protobuf:"varint,1,opt,name=sessionCategoryId,proto3" json:"sessionCategoryId,omitempty"`
}

func (x *Message_MessageReadAllRequest) Reset() {
	*x = Message_MessageReadAllRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_MessageReadAllRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_MessageReadAllRequest) ProtoMessage() {}

func (x *Message_MessageReadAllRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_MessageReadAllRequest.ProtoReflect.Descriptor instead.
func (*Message_MessageReadAllRequest) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 30}
}

func (x *Message_MessageReadAllRequest) GetSessionCategoryId() int32 {
	if x != nil {
		return x.SessionCategoryId
	}
	return 0
}

type Message_MessageReadAllResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReadAllTimestamp int64 `protobuf:"varint,1,opt,name=readAllTimestamp,proto3" json:"readAllTimestamp,omitempty"`
}

func (x *Message_MessageReadAllResponse) Reset() {
	*x = Message_MessageReadAllResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_MessageReadAllResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_MessageReadAllResponse) ProtoMessage() {}

func (x *Message_MessageReadAllResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_MessageReadAllResponse.ProtoReflect.Descriptor instead.
func (*Message_MessageReadAllResponse) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 31}
}

func (x *Message_MessageReadAllResponse) GetReadAllTimestamp() int64 {
	if x != nil {
		return x.ReadAllTimestamp
	}
	return 0
}

type Message_SesionStickyOnTopRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatTarget  *Message_ChatTarget `protobuf:"bytes,1,opt,name=chatTarget,proto3" json:"chatTarget,omitempty"`
	StickyOnTop bool                `protobuf:"varint,2,opt,name=stickyOnTop,proto3" json:"stickyOnTop,omitempty"`
}

func (x *Message_SesionStickyOnTopRequest) Reset() {
	*x = Message_SesionStickyOnTopRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_SesionStickyOnTopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_SesionStickyOnTopRequest) ProtoMessage() {}

func (x *Message_SesionStickyOnTopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_SesionStickyOnTopRequest.ProtoReflect.Descriptor instead.
func (*Message_SesionStickyOnTopRequest) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 32}
}

func (x *Message_SesionStickyOnTopRequest) GetChatTarget() *Message_ChatTarget {
	if x != nil {
		return x.ChatTarget
	}
	return nil
}

func (x *Message_SesionStickyOnTopRequest) GetStickyOnTop() bool {
	if x != nil {
		return x.StickyOnTop
	}
	return false
}

type Message_SessionStickyOnTopResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Session *Message_ChatSession `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
}

func (x *Message_SessionStickyOnTopResponse) Reset() {
	*x = Message_SessionStickyOnTopResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_SessionStickyOnTopResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_SessionStickyOnTopResponse) ProtoMessage() {}

func (x *Message_SessionStickyOnTopResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_SessionStickyOnTopResponse.ProtoReflect.Descriptor instead.
func (*Message_SessionStickyOnTopResponse) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 33}
}

func (x *Message_SessionStickyOnTopResponse) GetSession() *Message_ChatSession {
	if x != nil {
		return x.Session
	}
	return nil
}

type Message_SessionRaw struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Raw map[string][]byte `protobuf:"bytes,1,rep,name=raw,proto3" json:"raw,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Message_SessionRaw) Reset() {
	*x = Message_SessionRaw{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_SessionRaw) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_SessionRaw) ProtoMessage() {}

func (x *Message_SessionRaw) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_SessionRaw.ProtoReflect.Descriptor instead.
func (*Message_SessionRaw) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 34}
}

func (x *Message_SessionRaw) GetRaw() map[string][]byte {
	if x != nil {
		return x.Raw
	}
	return nil
}

type Message_MessageRecallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatTarget *Message_ChatTarget `protobuf:"bytes,1,opt,name=chatTarget,proto3" json:"chatTarget,omitempty"`
	SeqId      int64               `protobuf:"varint,2,opt,name=seqId,proto3" json:"seqId,omitempty"`
}

func (x *Message_MessageRecallRequest) Reset() {
	*x = Message_MessageRecallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_MessageRecallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_MessageRecallRequest) ProtoMessage() {}

func (x *Message_MessageRecallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_MessageRecallRequest.ProtoReflect.Descriptor instead.
func (*Message_MessageRecallRequest) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 35}
}

func (x *Message_MessageRecallRequest) GetChatTarget() *Message_ChatTarget {
	if x != nil {
		return x.ChatTarget
	}
	return nil
}

func (x *Message_MessageRecallRequest) GetSeqId() int64 {
	if x != nil {
		return x.SeqId
	}
	return 0
}

type Message_MessageRecallResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Message_MessageRecallResponse) Reset() {
	*x = Message_MessageRecallResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_MessageRecallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_MessageRecallResponse) ProtoMessage() {}

func (x *Message_MessageRecallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_MessageRecallResponse.ProtoReflect.Descriptor instead.
func (*Message_MessageRecallResponse) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 36}
}

type Message_MessageReceiptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageReceiptInfo []*Message_MessageReceiptInfo `protobuf:"bytes,1,rep,name=messageReceiptInfo,proto3" json:"messageReceiptInfo,omitempty"`
	ChatTarget         *Message_ChatTarget           `protobuf:"bytes,2,opt,name=chatTarget,proto3" json:"chatTarget,omitempty"`
}

func (x *Message_MessageReceiptRequest) Reset() {
	*x = Message_MessageReceiptRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_MessageReceiptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_MessageReceiptRequest) ProtoMessage() {}

func (x *Message_MessageReceiptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_MessageReceiptRequest.ProtoReflect.Descriptor instead.
func (*Message_MessageReceiptRequest) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 37}
}

func (x *Message_MessageReceiptRequest) GetMessageReceiptInfo() []*Message_MessageReceiptInfo {
	if x != nil {
		return x.MessageReceiptInfo
	}
	return nil
}

func (x *Message_MessageReceiptRequest) GetChatTarget() *Message_ChatTarget {
	if x != nil {
		return x.ChatTarget
	}
	return nil
}

type Message_MessageReceiptResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Message_MessageReceiptResponse) Reset() {
	*x = Message_MessageReceiptResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_MessageReceiptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_MessageReceiptResponse) ProtoMessage() {}

func (x *Message_MessageReceiptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_MessageReceiptResponse.ProtoReflect.Descriptor instead.
func (*Message_MessageReceiptResponse) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 38}
}

type Message_MessageReceiptInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReadSeq int64 `protobuf:"varint,1,opt,name=readSeq,proto3" json:"readSeq,omitempty"`
}

func (x *Message_MessageReceiptInfo) Reset() {
	*x = Message_MessageReceiptInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_MessageReceiptInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_MessageReceiptInfo) ProtoMessage() {}

func (x *Message_MessageReceiptInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_MessageReceiptInfo.ProtoReflect.Descriptor instead.
func (*Message_MessageReceiptInfo) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 39}
}

func (x *Message_MessageReceiptInfo) GetReadSeq() int64 {
	if x != nil {
		return x.ReadSeq
	}
	return 0
}

type Message_MessageReceiptCountGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeqId      []int64             `protobuf:"varint,1,rep,packed,name=seqId,proto3" json:"seqId,omitempty"`
	ChatTarget *Message_ChatTarget `protobuf:"bytes,2,opt,name=chatTarget,proto3" json:"chatTarget,omitempty"`
}

func (x *Message_MessageReceiptCountGetRequest) Reset() {
	*x = Message_MessageReceiptCountGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_MessageReceiptCountGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_MessageReceiptCountGetRequest) ProtoMessage() {}

func (x *Message_MessageReceiptCountGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_MessageReceiptCountGetRequest.ProtoReflect.Descriptor instead.
func (*Message_MessageReceiptCountGetRequest) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 40}
}

func (x *Message_MessageReceiptCountGetRequest) GetSeqId() []int64 {
	if x != nil {
		return x.SeqId
	}
	return nil
}

func (x *Message_MessageReceiptCountGetRequest) GetChatTarget() *Message_ChatTarget {
	if x != nil {
		return x.ChatTarget
	}
	return nil
}

type Message_MessageReceiptCountGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status []*Message_MessageReceiptStatus `protobuf:"bytes,1,rep,name=status,proto3" json:"status,omitempty"`
}

func (x *Message_MessageReceiptCountGetResponse) Reset() {
	*x = Message_MessageReceiptCountGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_MessageReceiptCountGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_MessageReceiptCountGetResponse) ProtoMessage() {}

func (x *Message_MessageReceiptCountGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_MessageReceiptCountGetResponse.ProtoReflect.Descriptor instead.
func (*Message_MessageReceiptCountGetResponse) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 41}
}

func (x *Message_MessageReceiptCountGetResponse) GetStatus() []*Message_MessageReceiptStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type Message_MessageReceiptStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReadCount   int32 `protobuf:"varint,1,opt,name=readCount,proto3" json:"readCount,omitempty"`
	UnreadCount int32 `protobuf:"varint,2,opt,name=unreadCount,proto3" json:"unreadCount,omitempty"`
	SeqId       int64 `protobuf:"varint,3,opt,name=seqId,proto3" json:"seqId,omitempty"`
	ServerTime  int64 `protobuf:"varint,4,opt,name=serverTime,proto3" json:"serverTime,omitempty"`
}

func (x *Message_MessageReceiptStatus) Reset() {
	*x = Message_MessageReceiptStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_MessageReceiptStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_MessageReceiptStatus) ProtoMessage() {}

func (x *Message_MessageReceiptStatus) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_MessageReceiptStatus.ProtoReflect.Descriptor instead.
func (*Message_MessageReceiptStatus) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 42}
}

func (x *Message_MessageReceiptStatus) GetReadCount() int32 {
	if x != nil {
		return x.ReadCount
	}
	return 0
}

func (x *Message_MessageReceiptStatus) GetUnreadCount() int32 {
	if x != nil {
		return x.UnreadCount
	}
	return 0
}

func (x *Message_MessageReceiptStatus) GetSeqId() int64 {
	if x != nil {
		return x.SeqId
	}
	return 0
}

func (x *Message_MessageReceiptStatus) GetServerTime() int64 {
	if x != nil {
		return x.ServerTime
	}
	return 0
}

type Message_MessageReceiptDetailGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeqId      int64               `protobuf:"varint,1,opt,name=seqId,proto3" json:"seqId,omitempty"`
	ChatTarget *Message_ChatTarget `protobuf:"bytes,2,opt,name=chatTarget,proto3" json:"chatTarget,omitempty"`
}

func (x *Message_MessageReceiptDetailGetRequest) Reset() {
	*x = Message_MessageReceiptDetailGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_MessageReceiptDetailGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_MessageReceiptDetailGetRequest) ProtoMessage() {}

func (x *Message_MessageReceiptDetailGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_MessageReceiptDetailGetRequest.ProtoReflect.Descriptor instead.
func (*Message_MessageReceiptDetailGetRequest) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 43}
}

func (x *Message_MessageReceiptDetailGetRequest) GetSeqId() int64 {
	if x != nil {
		return x.SeqId
	}
	return 0
}

func (x *Message_MessageReceiptDetailGetRequest) GetChatTarget() *Message_ChatTarget {
	if x != nil {
		return x.ChatTarget
	}
	return nil
}

type Message_MessageReceiptDetailGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReadUser   []*Basic_User `protobuf:"bytes,1,rep,name=readUser,proto3" json:"readUser,omitempty"`
	UnreadUser []*Basic_User `protobuf:"bytes,2,rep,name=unreadUser,proto3" json:"unreadUser,omitempty"`
}

func (x *Message_MessageReceiptDetailGetResponse) Reset() {
	*x = Message_MessageReceiptDetailGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_MessageReceiptDetailGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_MessageReceiptDetailGetResponse) ProtoMessage() {}

func (x *Message_MessageReceiptDetailGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_MessageReceiptDetailGetResponse.ProtoReflect.Descriptor instead.
func (*Message_MessageReceiptDetailGetResponse) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 44}
}

func (x *Message_MessageReceiptDetailGetResponse) GetReadUser() []*Basic_User {
	if x != nil {
		return x.ReadUser
	}
	return nil
}

func (x *Message_MessageReceiptDetailGetResponse) GetUnreadUser() []*Basic_User {
	if x != nil {
		return x.UnreadUser
	}
	return nil
}

type Message_MessageBatchSendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message []*Message_Message `protobuf:"bytes,1,rep,name=message,proto3" json:"message,omitempty"`
}

func (x *Message_MessageBatchSendRequest) Reset() {
	*x = Message_MessageBatchSendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_MessageBatchSendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_MessageBatchSendRequest) ProtoMessage() {}

func (x *Message_MessageBatchSendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_MessageBatchSendRequest.ProtoReflect.Descriptor instead.
func (*Message_MessageBatchSendRequest) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 45}
}

func (x *Message_MessageBatchSendRequest) GetMessage() []*Message_Message {
	if x != nil {
		return x.Message
	}
	return nil
}

type Message_MessageBatchSendResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response []*Message_SendMessageResponse `protobuf:"bytes,1,rep,name=response,proto3" json:"response,omitempty"`
}

func (x *Message_MessageBatchSendResponse) Reset() {
	*x = Message_MessageBatchSendResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_MessageBatchSendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_MessageBatchSendResponse) ProtoMessage() {}

func (x *Message_MessageBatchSendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_MessageBatchSendResponse.ProtoReflect.Descriptor instead.
func (*Message_MessageBatchSendResponse) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 46}
}

func (x *Message_MessageBatchSendResponse) GetResponse() []*Message_SendMessageResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type Message_ImageAttachment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MimeType      string `protobuf:"bytes,1,opt,name=mimeType,proto3" json:"mimeType,omitempty"`
	Url           string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Width         int32  `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
	Height        int32  `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	LengthInBytes int64  `protobuf:"varint,5,opt,name=lengthInBytes,proto3" json:"lengthInBytes,omitempty"`
}

func (x *Message_ImageAttachment) Reset() {
	*x = Message_ImageAttachment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_ImageAttachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_ImageAttachment) ProtoMessage() {}

func (x *Message_ImageAttachment) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_ImageAttachment.ProtoReflect.Descriptor instead.
func (*Message_ImageAttachment) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 47}
}

func (x *Message_ImageAttachment) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *Message_ImageAttachment) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Message_ImageAttachment) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Message_ImageAttachment) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Message_ImageAttachment) GetLengthInBytes() int64 {
	if x != nil {
		return x.LengthInBytes
	}
	return 0
}

type Message_AudioAttachment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MimeType      string `protobuf:"bytes,1,opt,name=mimeType,proto3" json:"mimeType,omitempty"`
	Url           string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Width         int32  `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
	Height        int32  `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	LengthInBytes int64  `protobuf:"varint,5,opt,name=lengthInBytes,proto3" json:"lengthInBytes,omitempty"`
}

func (x *Message_AudioAttachment) Reset() {
	*x = Message_AudioAttachment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_AudioAttachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_AudioAttachment) ProtoMessage() {}

func (x *Message_AudioAttachment) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_AudioAttachment.ProtoReflect.Descriptor instead.
func (*Message_AudioAttachment) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 48}
}

func (x *Message_AudioAttachment) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *Message_AudioAttachment) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Message_AudioAttachment) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Message_AudioAttachment) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Message_AudioAttachment) GetLengthInBytes() int64 {
	if x != nil {
		return x.LengthInBytes
	}
	return 0
}

type Message_GifAttachment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MimeType  string `protobuf:"bytes,1,opt,name=mimeType,proto3" json:"mimeType,omitempty"`
	Url       string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Width     int32  `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
	Height    int32  `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	ThumbaUrl string `protobuf:"bytes,5,opt,name=thumbaUrl,proto3" json:"thumbaUrl,omitempty"`
	Text      string `protobuf:"bytes,6,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *Message_GifAttachment) Reset() {
	*x = Message_GifAttachment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_GifAttachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_GifAttachment) ProtoMessage() {}

func (x *Message_GifAttachment) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_GifAttachment.ProtoReflect.Descriptor instead.
func (*Message_GifAttachment) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 49}
}

func (x *Message_GifAttachment) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *Message_GifAttachment) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Message_GifAttachment) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Message_GifAttachment) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Message_GifAttachment) GetThumbaUrl() string {
	if x != nil {
		return x.ThumbaUrl
	}
	return ""
}

func (x *Message_GifAttachment) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type Message_Attachment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Attacmnent:
	//	*Message_Attachment_ImageAttachment
	//	*Message_Attachment_AudioAttachment
	Attacmnent isMessage_Attachment_Attacmnent `protobuf_oneof:"attacmnent"`
}

func (x *Message_Attachment) Reset() {
	*x = Message_Attachment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_Attachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_Attachment) ProtoMessage() {}

func (x *Message_Attachment) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_Attachment.ProtoReflect.Descriptor instead.
func (*Message_Attachment) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 50}
}

func (m *Message_Attachment) GetAttacmnent() isMessage_Attachment_Attacmnent {
	if m != nil {
		return m.Attacmnent
	}
	return nil
}

func (x *Message_Attachment) GetImageAttachment() *Message_ImageAttachment {
	if x, ok := x.GetAttacmnent().(*Message_Attachment_ImageAttachment); ok {
		return x.ImageAttachment
	}
	return nil
}

func (x *Message_Attachment) GetAudioAttachment() *Message_AudioAttachment {
	if x, ok := x.GetAttacmnent().(*Message_Attachment_AudioAttachment); ok {
		return x.AudioAttachment
	}
	return nil
}

type isMessage_Attachment_Attacmnent interface {
	isMessage_Attachment_Attacmnent()
}

type Message_Attachment_ImageAttachment struct {
	ImageAttachment *Message_ImageAttachment `protobuf:"bytes,1,opt,name=imageAttachment,proto3,oneof"`
}

type Message_Attachment_AudioAttachment struct {
	AudioAttachment *Message_AudioAttachment `protobuf:"bytes,2,opt,name=audioAttachment,proto3,oneof"`
}

func (*Message_Attachment_ImageAttachment) isMessage_Attachment_Attacmnent() {}

func (*Message_Attachment_AudioAttachment) isMessage_Attachment_Attacmnent() {}

type Message_Attachments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attachments []*Message_Attachment `protobuf:"bytes,1,rep,name=attachments,proto3" json:"attachments,omitempty"`
}

func (x *Message_Attachments) Reset() {
	*x = Message_Attachments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_Attachments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_Attachments) ProtoMessage() {}

func (x *Message_Attachments) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_Attachments.ProtoReflect.Descriptor instead.
func (*Message_Attachments) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 51}
}

func (x *Message_Attachments) GetAttachments() []*Message_Attachment {
	if x != nil {
		return x.Attachments
	}
	return nil
}

type Message_PlaceHolderMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinSeq int64 `protobuf:"varint,1,opt,name=minSeq,proto3" json:"minSeq,omitempty"`
	MaxSeq int64 `protobuf:"varint,2,opt,name=maxSeq,proto3" json:"maxSeq,omitempty"`
}

func (x *Message_PlaceHolderMessage) Reset() {
	*x = Message_PlaceHolderMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_PlaceHolderMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_PlaceHolderMessage) ProtoMessage() {}

func (x *Message_PlaceHolderMessage) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_PlaceHolderMessage.ProtoReflect.Descriptor instead.
func (*Message_PlaceHolderMessage) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 52}
}

func (x *Message_PlaceHolderMessage) GetMinSeq() int64 {
	if x != nil {
		return x.MinSeq
	}
	return 0
}

func (x *Message_PlaceHolderMessage) GetMaxSeq() int64 {
	if x != nil {
		return x.MaxSeq
	}
	return 0
}

type Message_ImageTextMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string  `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description string  `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	ImageUrl    string  `protobuf:"bytes,3,opt,name=imageUrl,proto3" json:"imageUrl,omitempty"`
	ActionUrl   string  `protobuf:"bytes,4,opt,name=actionUrl,proto3" json:"actionUrl,omitempty"`
	Width       int32   `protobuf:"varint,5,opt,name=width,proto3" json:"width,omitempty"`
	AspectRatio float32 `protobuf:"fixed32,6,opt,name=aspectRatio,proto3" json:"aspectRatio,omitempty"`
}

func (x *Message_ImageTextMessage) Reset() {
	*x = Message_ImageTextMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_ImageTextMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_ImageTextMessage) ProtoMessage() {}

func (x *Message_ImageTextMessage) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_ImageTextMessage.ProtoReflect.Descriptor instead.
func (*Message_ImageTextMessage) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 53}
}

func (x *Message_ImageTextMessage) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Message_ImageTextMessage) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Message_ImageTextMessage) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *Message_ImageTextMessage) GetActionUrl() string {
	if x != nil {
		return x.ActionUrl
	}
	return ""
}

func (x *Message_ImageTextMessage) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Message_ImageTextMessage) GetAspectRatio() float32 {
	if x != nil {
		return x.AspectRatio
	}
	return 0
}

type Message_RichTextMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RichTextMessage *Message_RichTextNoticeMessage `protobuf:"bytes,1,opt,name=richTextMessage,proto3" json:"richTextMessage,omitempty"`
}

func (x *Message_RichTextMessage) Reset() {
	*x = Message_RichTextMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_RichTextMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_RichTextMessage) ProtoMessage() {}

func (x *Message_RichTextMessage) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_RichTextMessage.ProtoReflect.Descriptor instead.
func (*Message_RichTextMessage) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 54}
}

func (x *Message_RichTextMessage) GetRichTextMessage() *Message_RichTextNoticeMessage {
	if x != nil {
		return x.RichTextMessage
	}
	return nil
}

type Message_NoticeMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RichTextNotice  *Message_RichTextNoticeMessage `protobuf:"bytes,2,opt,name=richTextNotice,proto3" json:"richTextNotice,omitempty"`
	Msg             string                         `protobuf:"bytes,5,opt,name=msg,proto3" json:"msg,omitempty"`
	I18NCopyWriting *Basic_I18NCopyWriting         `protobuf:"bytes,10,opt,name=i18nCopyWriting,proto3" json:"i18nCopyWriting,omitempty"`
}

func (x *Message_NoticeMessage) Reset() {
	*x = Message_NoticeMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_NoticeMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_NoticeMessage) ProtoMessage() {}

func (x *Message_NoticeMessage) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_NoticeMessage.ProtoReflect.Descriptor instead.
func (*Message_NoticeMessage) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 55}
}

func (x *Message_NoticeMessage) GetRichTextNotice() *Message_RichTextNoticeMessage {
	if x != nil {
		return x.RichTextNotice
	}
	return nil
}

func (x *Message_NoticeMessage) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *Message_NoticeMessage) GetI18NCopyWriting() *Basic_I18NCopyWriting {
	if x != nil {
		return x.I18NCopyWriting
	}
	return nil
}

type Message_RichTextNoticeMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Message_RichTextNoticeMessage_RichTextItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *Message_RichTextNoticeMessage) Reset() {
	*x = Message_RichTextNoticeMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_RichTextNoticeMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_RichTextNoticeMessage) ProtoMessage() {}

func (x *Message_RichTextNoticeMessage) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_RichTextNoticeMessage.ProtoReflect.Descriptor instead.
func (*Message_RichTextNoticeMessage) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 56}
}

func (x *Message_RichTextNoticeMessage) GetItems() []*Message_RichTextNoticeMessage_RichTextItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type Message_RichTextNoticeMessage_RichTextItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Color       int32  `protobuf:"varint,1,opt,name=color,proto3" json:"color,omitempty"`
	Start       int32  `protobuf:"varint,2,opt,name=start,proto3" json:"start,omitempty"`
	Len         int32  `protobuf:"varint,3,opt,name=len,proto3" json:"len,omitempty"`
	ClickAction string `protobuf:"bytes,4,opt,name=clickAction,proto3" json:"clickAction,omitempty"`
	Underline   bool   `protobuf:"varint,5,opt,name=underline,proto3" json:"underline,omitempty"`
}

func (x *Message_RichTextNoticeMessage_RichTextItem) Reset() {
	*x = Message_RichTextNoticeMessage_RichTextItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message_RichTextNoticeMessage_RichTextItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_RichTextNoticeMessage_RichTextItem) ProtoMessage() {}

func (x *Message_RichTextNoticeMessage_RichTextItem) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_RichTextNoticeMessage_RichTextItem.ProtoReflect.Descriptor instead.
func (*Message_RichTextNoticeMessage_RichTextItem) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{1, 56, 0}
}

func (x *Message_RichTextNoticeMessage_RichTextItem) GetColor() int32 {
	if x != nil {
		return x.Color
	}
	return 0
}

func (x *Message_RichTextNoticeMessage_RichTextItem) GetStart() int32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *Message_RichTextNoticeMessage_RichTextItem) GetLen() int32 {
	if x != nil {
		return x.Len
	}
	return 0
}

func (x *Message_RichTextNoticeMessage_RichTextItem) GetClickAction() string {
	if x != nil {
		return x.ClickAction
	}
	return ""
}

func (x *Message_RichTextNoticeMessage_RichTextItem) GetUnderline() bool {
	if x != nil {
		return x.Underline
	}
	return false
}

type Cloud_Channel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Cloud_Channel) Reset() {
	*x = Cloud_Channel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Channel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Channel) ProtoMessage() {}

func (x *Cloud_Channel) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Channel.ProtoReflect.Descriptor instead.
func (*Cloud_Channel) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 0}
}

type Cloud_Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Cloud_Config) Reset() {
	*x = Cloud_Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Config) ProtoMessage() {}

func (x *Cloud_Config) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Config.ProtoReflect.Descriptor instead.
func (*Cloud_Config) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 1}
}

type Cloud_Profile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Cloud_Profile) Reset() {
	*x = Cloud_Profile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Profile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Profile) ProtoMessage() {}

func (x *Cloud_Profile) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Profile.ProtoReflect.Descriptor instead.
func (*Cloud_Profile) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 2}
}

type Cloud_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Cloud_Data) Reset() {
	*x = Cloud_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Data) ProtoMessage() {}

func (x *Cloud_Data) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Data.ProtoReflect.Descriptor instead.
func (*Cloud_Data) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 3}
}

type Cloud_Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Cloud_Message) Reset() {
	*x = Cloud_Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message) ProtoMessage() {}

func (x *Cloud_Message) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message.ProtoReflect.Descriptor instead.
func (*Cloud_Message) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4}
}

type Cloud_Channel_ChannelSubscribeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId  string `protobuf:"bytes,1,opt,name=channelId,proto3" json:"channelId,omitempty"`
	SetBarrier bool   `protobuf:"varint,2,opt,name=setBarrier,proto3" json:"setBarrier,omitempty"`
}

func (x *Cloud_Channel_ChannelSubscribeRequest) Reset() {
	*x = Cloud_Channel_ChannelSubscribeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Channel_ChannelSubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Channel_ChannelSubscribeRequest) ProtoMessage() {}

func (x *Cloud_Channel_ChannelSubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Channel_ChannelSubscribeRequest.ProtoReflect.Descriptor instead.
func (*Cloud_Channel_ChannelSubscribeRequest) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 0, 0}
}

func (x *Cloud_Channel_ChannelSubscribeRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *Cloud_Channel_ChannelSubscribeRequest) GetSetBarrier() bool {
	if x != nil {
		return x.SetBarrier
	}
	return false
}

type Cloud_Channel_ChannelSubscribeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Cloud_Channel_ChannelSubscribeResponse) Reset() {
	*x = Cloud_Channel_ChannelSubscribeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Channel_ChannelSubscribeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Channel_ChannelSubscribeResponse) ProtoMessage() {}

func (x *Cloud_Channel_ChannelSubscribeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Channel_ChannelSubscribeResponse.ProtoReflect.Descriptor instead.
func (*Cloud_Channel_ChannelSubscribeResponse) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 0, 1}
}

type Cloud_Channel_ChannelUnsubscribeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId string `protobuf:"bytes,1,opt,name=channelId,proto3" json:"channelId,omitempty"`
}

func (x *Cloud_Channel_ChannelUnsubscribeRequest) Reset() {
	*x = Cloud_Channel_ChannelUnsubscribeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Channel_ChannelUnsubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Channel_ChannelUnsubscribeRequest) ProtoMessage() {}

func (x *Cloud_Channel_ChannelUnsubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Channel_ChannelUnsubscribeRequest.ProtoReflect.Descriptor instead.
func (*Cloud_Channel_ChannelUnsubscribeRequest) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 0, 2}
}

func (x *Cloud_Channel_ChannelUnsubscribeRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

type Cloud_Channel_ChannelSubscribersGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId string `protobuf:"bytes,1,opt,name=channelId,proto3" json:"channelId,omitempty"`
}

func (x *Cloud_Channel_ChannelSubscribersGetRequest) Reset() {
	*x = Cloud_Channel_ChannelSubscribersGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Channel_ChannelSubscribersGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Channel_ChannelSubscribersGetRequest) ProtoMessage() {}

func (x *Cloud_Channel_ChannelSubscribersGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Channel_ChannelSubscribersGetRequest.ProtoReflect.Descriptor instead.
func (*Cloud_Channel_ChannelSubscribersGetRequest) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 0, 3}
}

func (x *Cloud_Channel_ChannelSubscribersGetRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

type Cloud_Channel_ChannelSubscribersGetResposne struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subscriber []*Basic_User `protobuf:"bytes,1,rep,name=subscriber,proto3" json:"subscriber,omitempty"`
}

func (x *Cloud_Channel_ChannelSubscribersGetResposne) Reset() {
	*x = Cloud_Channel_ChannelSubscribersGetResposne{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Channel_ChannelSubscribersGetResposne) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Channel_ChannelSubscribersGetResposne) ProtoMessage() {}

func (x *Cloud_Channel_ChannelSubscribersGetResposne) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Channel_ChannelSubscribersGetResposne.ProtoReflect.Descriptor instead.
func (*Cloud_Channel_ChannelSubscribersGetResposne) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 0, 4}
}

func (x *Cloud_Channel_ChannelSubscribersGetResposne) GetSubscriber() []*Basic_User {
	if x != nil {
		return x.Subscriber
	}
	return nil
}

type Cloud_Channel_ChannelBasicInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId       string `protobuf:"bytes,1,opt,name=channelId,proto3" json:"channelId,omitempty"`
	SubscriberCount int32  `protobuf:"varint,2,opt,name=subscriberCount,proto3" json:"subscriberCount,omitempty"`
}

func (x *Cloud_Channel_ChannelBasicInfo) Reset() {
	*x = Cloud_Channel_ChannelBasicInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Channel_ChannelBasicInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Channel_ChannelBasicInfo) ProtoMessage() {}

func (x *Cloud_Channel_ChannelBasicInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Channel_ChannelBasicInfo.ProtoReflect.Descriptor instead.
func (*Cloud_Channel_ChannelBasicInfo) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 0, 5}
}

func (x *Cloud_Channel_ChannelBasicInfo) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *Cloud_Channel_ChannelBasicInfo) GetSubscriberCount() int32 {
	if x != nil {
		return x.SubscriberCount
	}
	return 0
}

type Cloud_Channel_UserActionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User      *Basic_User              `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Action    Cloud_Channel_UserAction `protobuf:"varint,2,opt,name=action,proto3,enum=AcFunDanmu.Im.Cloud_Channel_UserAction" json:"action,omitempty"`
	Timestamp int64                    `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *Cloud_Channel_UserActionInfo) Reset() {
	*x = Cloud_Channel_UserActionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Channel_UserActionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Channel_UserActionInfo) ProtoMessage() {}

func (x *Cloud_Channel_UserActionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Channel_UserActionInfo.ProtoReflect.Descriptor instead.
func (*Cloud_Channel_UserActionInfo) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 0, 6}
}

func (x *Cloud_Channel_UserActionInfo) GetUser() *Basic_User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *Cloud_Channel_UserActionInfo) GetAction() Cloud_Channel_UserAction {
	if x != nil {
		return x.Action
	}
	return Cloud_Channel_USER_ACTION_UNKNOWN
}

func (x *Cloud_Channel_UserActionInfo) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type Cloud_Channel_ChannelBasicInfoGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId []string `protobuf:"bytes,1,rep,name=channelId,proto3" json:"channelId,omitempty"`
}

func (x *Cloud_Channel_ChannelBasicInfoGetRequest) Reset() {
	*x = Cloud_Channel_ChannelBasicInfoGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Channel_ChannelBasicInfoGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Channel_ChannelBasicInfoGetRequest) ProtoMessage() {}

func (x *Cloud_Channel_ChannelBasicInfoGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Channel_ChannelBasicInfoGetRequest.ProtoReflect.Descriptor instead.
func (*Cloud_Channel_ChannelBasicInfoGetRequest) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 0, 7}
}

func (x *Cloud_Channel_ChannelBasicInfoGetRequest) GetChannelId() []string {
	if x != nil {
		return x.ChannelId
	}
	return nil
}

type Cloud_Channel_ChannelBasicInfoGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicInfo []*Cloud_Channel_ChannelBasicInfo `protobuf:"bytes,1,rep,name=basicInfo,proto3" json:"basicInfo,omitempty"`
}

func (x *Cloud_Channel_ChannelBasicInfoGetResponse) Reset() {
	*x = Cloud_Channel_ChannelBasicInfoGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Channel_ChannelBasicInfoGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Channel_ChannelBasicInfoGetResponse) ProtoMessage() {}

func (x *Cloud_Channel_ChannelBasicInfoGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Channel_ChannelBasicInfoGetResponse.ProtoReflect.Descriptor instead.
func (*Cloud_Channel_ChannelBasicInfoGetResponse) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 0, 8}
}

func (x *Cloud_Channel_ChannelBasicInfoGetResponse) GetBasicInfo() []*Cloud_Channel_ChannelBasicInfo {
	if x != nil {
		return x.BasicInfo
	}
	return nil
}

type Cloud_Channel_ChannelHeartbeatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId []string `protobuf:"bytes,1,rep,name=channelId,proto3" json:"channelId,omitempty"`
}

func (x *Cloud_Channel_ChannelHeartbeatRequest) Reset() {
	*x = Cloud_Channel_ChannelHeartbeatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Channel_ChannelHeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Channel_ChannelHeartbeatRequest) ProtoMessage() {}

func (x *Cloud_Channel_ChannelHeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Channel_ChannelHeartbeatRequest.ProtoReflect.Descriptor instead.
func (*Cloud_Channel_ChannelHeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 0, 9}
}

func (x *Cloud_Channel_ChannelHeartbeatRequest) GetChannelId() []string {
	if x != nil {
		return x.ChannelId
	}
	return nil
}

type Cloud_Channel_ChannelHeartbeatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotExistChannelId []string `protobuf:"bytes,1,rep,name=notExistChannelId,proto3" json:"notExistChannelId,omitempty"`
}

func (x *Cloud_Channel_ChannelHeartbeatResponse) Reset() {
	*x = Cloud_Channel_ChannelHeartbeatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Channel_ChannelHeartbeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Channel_ChannelHeartbeatResponse) ProtoMessage() {}

func (x *Cloud_Channel_ChannelHeartbeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Channel_ChannelHeartbeatResponse.ProtoReflect.Descriptor instead.
func (*Cloud_Channel_ChannelHeartbeatResponse) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 0, 10}
}

func (x *Cloud_Channel_ChannelHeartbeatResponse) GetNotExistChannelId() []string {
	if x != nil {
		return x.NotExistChannelId
	}
	return nil
}

type Cloud_Channel_ChannelBasicInfoNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserActionInfo *Cloud_Channel_UserActionInfo   `protobuf:"bytes,1,opt,name=userActionInfo,proto3" json:"userActionInfo,omitempty"`
	BasicInfo      *Cloud_Channel_ChannelBasicInfo `protobuf:"bytes,2,opt,name=basicInfo,proto3" json:"basicInfo,omitempty"`
}

func (x *Cloud_Channel_ChannelBasicInfoNotify) Reset() {
	*x = Cloud_Channel_ChannelBasicInfoNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Channel_ChannelBasicInfoNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Channel_ChannelBasicInfoNotify) ProtoMessage() {}

func (x *Cloud_Channel_ChannelBasicInfoNotify) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Channel_ChannelBasicInfoNotify.ProtoReflect.Descriptor instead.
func (*Cloud_Channel_ChannelBasicInfoNotify) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 0, 11}
}

func (x *Cloud_Channel_ChannelBasicInfoNotify) GetUserActionInfo() *Cloud_Channel_UserActionInfo {
	if x != nil {
		return x.UserActionInfo
	}
	return nil
}

func (x *Cloud_Channel_ChannelBasicInfoNotify) GetBasicInfo() *Cloud_Channel_ChannelBasicInfo {
	if x != nil {
		return x.BasicInfo
	}
	return nil
}

type Cloud_Config_ClientConfigGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version uint32 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *Cloud_Config_ClientConfigGetRequest) Reset() {
	*x = Cloud_Config_ClientConfigGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Config_ClientConfigGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Config_ClientConfigGetRequest) ProtoMessage() {}

func (x *Cloud_Config_ClientConfigGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Config_ClientConfigGetRequest.ProtoReflect.Descriptor instead.
func (*Cloud_Config_ClientConfigGetRequest) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 1, 0}
}

func (x *Cloud_Config_ClientConfigGetRequest) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type Cloud_Config_ClientConfigGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version      uint32                     `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	ClientConfig *Cloud_Config_ClientConfig `protobuf:"bytes,2,opt,name=clientConfig,proto3" json:"clientConfig,omitempty"`
}

func (x *Cloud_Config_ClientConfigGetResponse) Reset() {
	*x = Cloud_Config_ClientConfigGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Config_ClientConfigGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Config_ClientConfigGetResponse) ProtoMessage() {}

func (x *Cloud_Config_ClientConfigGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Config_ClientConfigGetResponse.ProtoReflect.Descriptor instead.
func (*Cloud_Config_ClientConfigGetResponse) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 1, 1}
}

func (x *Cloud_Config_ClientConfigGetResponse) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Cloud_Config_ClientConfigGetResponse) GetClientConfig() *Cloud_Config_ClientConfig {
	if x != nil {
		return x.ClientConfig
	}
	return nil
}

type Cloud_Config_NetworkQualityDetectionConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DetectionDomain      string `protobuf:"bytes,1,opt,name=detectionDomain,proto3" json:"detectionDomain,omitempty"`
	DetectionInvervalSec int32  `protobuf:"varint,2,opt,name=detectionInvervalSec,proto3" json:"detectionInvervalSec,omitempty"`
}

func (x *Cloud_Config_NetworkQualityDetectionConfig) Reset() {
	*x = Cloud_Config_NetworkQualityDetectionConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Config_NetworkQualityDetectionConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Config_NetworkQualityDetectionConfig) ProtoMessage() {}

func (x *Cloud_Config_NetworkQualityDetectionConfig) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Config_NetworkQualityDetectionConfig.ProtoReflect.Descriptor instead.
func (*Cloud_Config_NetworkQualityDetectionConfig) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 1, 2}
}

func (x *Cloud_Config_NetworkQualityDetectionConfig) GetDetectionDomain() string {
	if x != nil {
		return x.DetectionDomain
	}
	return ""
}

func (x *Cloud_Config_NetworkQualityDetectionConfig) GetDetectionInvervalSec() int32 {
	if x != nil {
		return x.DetectionInvervalSec
	}
	return 0
}

type Cloud_Config_ClientConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FetchUserStatusInterval       int32                                       `protobuf:"varint,1,opt,name=fetchUserStatusInterval,proto3" json:"fetchUserStatusInterval,omitempty"`
	ChannelUserHeartbeatInterval  int32                                       `protobuf:"varint,2,opt,name=channelUserHeartbeatInterval,proto3" json:"channelUserHeartbeatInterval,omitempty"`
	NetworkQualityDetectionConfig *Cloud_Config_NetworkQualityDetectionConfig `protobuf:"bytes,3,opt,name=networkQualityDetectionConfig,proto3" json:"networkQualityDetectionConfig,omitempty"`
	InputtingTipDisplayInterval   int32                                       `protobuf:"varint,4,opt,name=inputtingTipDisplayInterval,proto3" json:"inputtingTipDisplayInterval,omitempty"`
	BatchSendMessageMaxCount      int32                                       `protobuf:"varint,5,opt,name=batchSendMessageMaxCount,proto3" json:"batchSendMessageMaxCount,omitempty"`
	ResourceUploadingDomain       string                                      `protobuf:"bytes,6,opt,name=resourceUploadingDomain,proto3" json:"resourceUploadingDomain,omitempty"`
}

func (x *Cloud_Config_ClientConfig) Reset() {
	*x = Cloud_Config_ClientConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Config_ClientConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Config_ClientConfig) ProtoMessage() {}

func (x *Cloud_Config_ClientConfig) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Config_ClientConfig.ProtoReflect.Descriptor instead.
func (*Cloud_Config_ClientConfig) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 1, 3}
}

func (x *Cloud_Config_ClientConfig) GetFetchUserStatusInterval() int32 {
	if x != nil {
		return x.FetchUserStatusInterval
	}
	return 0
}

func (x *Cloud_Config_ClientConfig) GetChannelUserHeartbeatInterval() int32 {
	if x != nil {
		return x.ChannelUserHeartbeatInterval
	}
	return 0
}

func (x *Cloud_Config_ClientConfig) GetNetworkQualityDetectionConfig() *Cloud_Config_NetworkQualityDetectionConfig {
	if x != nil {
		return x.NetworkQualityDetectionConfig
	}
	return nil
}

func (x *Cloud_Config_ClientConfig) GetInputtingTipDisplayInterval() int32 {
	if x != nil {
		return x.InputtingTipDisplayInterval
	}
	return 0
}

func (x *Cloud_Config_ClientConfig) GetBatchSendMessageMaxCount() int32 {
	if x != nil {
		return x.BatchSendMessageMaxCount
	}
	return 0
}

func (x *Cloud_Config_ClientConfig) GetResourceUploadingDomain() string {
	if x != nil {
		return x.ResourceUploadingDomain
	}
	return ""
}

type Cloud_Profile_UserOnlineStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User            *Basic_User                           `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	LastOfflineTime int64                                 `protobuf:"varint,2,opt,name=lastOfflineTime,proto3" json:"lastOfflineTime,omitempty"`
	Status          Cloud_Profile_UserOnlineStatus_Status `protobuf:"varint,3,opt,name=status,proto3,enum=AcFunDanmu.Im.Cloud_Profile_UserOnlineStatus_Status" json:"status,omitempty"`
}

func (x *Cloud_Profile_UserOnlineStatus) Reset() {
	*x = Cloud_Profile_UserOnlineStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Profile_UserOnlineStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Profile_UserOnlineStatus) ProtoMessage() {}

func (x *Cloud_Profile_UserOnlineStatus) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Profile_UserOnlineStatus.ProtoReflect.Descriptor instead.
func (*Cloud_Profile_UserOnlineStatus) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 2, 0}
}

func (x *Cloud_Profile_UserOnlineStatus) GetUser() *Basic_User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *Cloud_Profile_UserOnlineStatus) GetLastOfflineTime() int64 {
	if x != nil {
		return x.LastOfflineTime
	}
	return 0
}

func (x *Cloud_Profile_UserOnlineStatus) GetStatus() Cloud_Profile_UserOnlineStatus_Status {
	if x != nil {
		return x.Status
	}
	return Cloud_Profile_UserOnlineStatus_UNKNOWN
}

type Cloud_Profile_ProfileBatchOnlineTimeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User []*Basic_User `protobuf:"bytes,1,rep,name=user,proto3" json:"user,omitempty"`
}

func (x *Cloud_Profile_ProfileBatchOnlineTimeRequest) Reset() {
	*x = Cloud_Profile_ProfileBatchOnlineTimeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Profile_ProfileBatchOnlineTimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Profile_ProfileBatchOnlineTimeRequest) ProtoMessage() {}

func (x *Cloud_Profile_ProfileBatchOnlineTimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Profile_ProfileBatchOnlineTimeRequest.ProtoReflect.Descriptor instead.
func (*Cloud_Profile_ProfileBatchOnlineTimeRequest) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 2, 1}
}

func (x *Cloud_Profile_ProfileBatchOnlineTimeRequest) GetUser() []*Basic_User {
	if x != nil {
		return x.User
	}
	return nil
}

type Cloud_Profile_ProfileBatchOnlineTimeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserOnlineStatus []*Cloud_Profile_UserOnlineStatus `protobuf:"bytes,1,rep,name=userOnlineStatus,proto3" json:"userOnlineStatus,omitempty"`
}

func (x *Cloud_Profile_ProfileBatchOnlineTimeResponse) Reset() {
	*x = Cloud_Profile_ProfileBatchOnlineTimeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Profile_ProfileBatchOnlineTimeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Profile_ProfileBatchOnlineTimeResponse) ProtoMessage() {}

func (x *Cloud_Profile_ProfileBatchOnlineTimeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Profile_ProfileBatchOnlineTimeResponse.ProtoReflect.Descriptor instead.
func (*Cloud_Profile_ProfileBatchOnlineTimeResponse) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 2, 2}
}

func (x *Cloud_Profile_ProfileBatchOnlineTimeResponse) GetUserOnlineStatus() []*Cloud_Profile_UserOnlineStatus {
	if x != nil {
		return x.UserOnlineStatus
	}
	return nil
}

type Cloud_Data_Update struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Cloud_Data_Update) Reset() {
	*x = Cloud_Data_Update{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Data_Update) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Data_Update) ProtoMessage() {}

func (x *Cloud_Data_Update) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Data_Update.ProtoReflect.Descriptor instead.
func (*Cloud_Data_Update) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 3, 0}
}

type Cloud_Data_Update_KsImDataUpdatePushPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    *Cloud_Data_Update_KsImDataUpdatePushPayload `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Content []byte                                       `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *Cloud_Data_Update_KsImDataUpdatePushPayload) Reset() {
	*x = Cloud_Data_Update_KsImDataUpdatePushPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Data_Update_KsImDataUpdatePushPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Data_Update_KsImDataUpdatePushPayload) ProtoMessage() {}

func (x *Cloud_Data_Update_KsImDataUpdatePushPayload) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Data_Update_KsImDataUpdatePushPayload.ProtoReflect.Descriptor instead.
func (*Cloud_Data_Update_KsImDataUpdatePushPayload) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 3, 0, 0}
}

func (x *Cloud_Data_Update_KsImDataUpdatePushPayload) GetType() *Cloud_Data_Update_KsImDataUpdatePushPayload {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *Cloud_Data_Update_KsImDataUpdatePushPayload) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type Cloud_Data_Update_GroupInfoDataUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
}

func (x *Cloud_Data_Update_GroupInfoDataUpdate) Reset() {
	*x = Cloud_Data_Update_GroupInfoDataUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Data_Update_GroupInfoDataUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Data_Update_GroupInfoDataUpdate) ProtoMessage() {}

func (x *Cloud_Data_Update_GroupInfoDataUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Data_Update_GroupInfoDataUpdate.ProtoReflect.Descriptor instead.
func (*Cloud_Data_Update_GroupInfoDataUpdate) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 3, 0, 1}
}

func (x *Cloud_Data_Update_GroupInfoDataUpdate) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type Cloud_Data_Update_GroupMemberListUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
}

func (x *Cloud_Data_Update_GroupMemberListUpdate) Reset() {
	*x = Cloud_Data_Update_GroupMemberListUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Data_Update_GroupMemberListUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Data_Update_GroupMemberListUpdate) ProtoMessage() {}

func (x *Cloud_Data_Update_GroupMemberListUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Data_Update_GroupMemberListUpdate.ProtoReflect.Descriptor instead.
func (*Cloud_Data_Update_GroupMemberListUpdate) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 3, 0, 2}
}

func (x *Cloud_Data_Update_GroupMemberListUpdate) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type Cloud_Data_Update_YouBeKicked struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
}

func (x *Cloud_Data_Update_YouBeKicked) Reset() {
	*x = Cloud_Data_Update_YouBeKicked{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Data_Update_YouBeKicked) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Data_Update_YouBeKicked) ProtoMessage() {}

func (x *Cloud_Data_Update_YouBeKicked) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Data_Update_YouBeKicked.ProtoReflect.Descriptor instead.
func (*Cloud_Data_Update_YouBeKicked) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 3, 0, 3}
}

func (x *Cloud_Data_Update_YouBeKicked) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type Cloud_Data_Update_MessageRead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StrTargetId    string                 `protobuf:"bytes,1,opt,name=strTargetId,proto3" json:"strTargetId,omitempty"`
	ReadSeq        int64                  `protobuf:"varint,2,opt,name=readSeq,proto3" json:"readSeq,omitempty"`
	ChatTargetType Message_ChatTargetType `protobuf:"varint,3,opt,name=chatTargetType,proto3,enum=AcFunDanmu.Im.Message_ChatTargetType" json:"chatTargetType,omitempty"`
}

func (x *Cloud_Data_Update_MessageRead) Reset() {
	*x = Cloud_Data_Update_MessageRead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Data_Update_MessageRead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Data_Update_MessageRead) ProtoMessage() {}

func (x *Cloud_Data_Update_MessageRead) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Data_Update_MessageRead.ProtoReflect.Descriptor instead.
func (*Cloud_Data_Update_MessageRead) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 3, 0, 4}
}

func (x *Cloud_Data_Update_MessageRead) GetStrTargetId() string {
	if x != nil {
		return x.StrTargetId
	}
	return ""
}

func (x *Cloud_Data_Update_MessageRead) GetReadSeq() int64 {
	if x != nil {
		return x.ReadSeq
	}
	return 0
}

func (x *Cloud_Data_Update_MessageRead) GetChatTargetType() Message_ChatTargetType {
	if x != nil {
		return x.ChatTargetType
	}
	return Message_CTT_USER
}

type Cloud_Data_Update_MessageReceipt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatTarget    *Message_ChatTarget           `protobuf:"bytes,1,opt,name=chatTarget,proto3" json:"chatTarget,omitempty"`
	ReceiptStatus *Message_MessageReceiptStatus `protobuf:"bytes,2,opt,name=receiptStatus,proto3" json:"receiptStatus,omitempty"`
}

func (x *Cloud_Data_Update_MessageReceipt) Reset() {
	*x = Cloud_Data_Update_MessageReceipt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Data_Update_MessageReceipt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Data_Update_MessageReceipt) ProtoMessage() {}

func (x *Cloud_Data_Update_MessageReceipt) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Data_Update_MessageReceipt.ProtoReflect.Descriptor instead.
func (*Cloud_Data_Update_MessageReceipt) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 3, 0, 5}
}

func (x *Cloud_Data_Update_MessageReceipt) GetChatTarget() *Message_ChatTarget {
	if x != nil {
		return x.ChatTarget
	}
	return nil
}

func (x *Cloud_Data_Update_MessageReceipt) GetReceiptStatus() *Message_MessageReceiptStatus {
	if x != nil {
		return x.ReceiptStatus
	}
	return nil
}

type Cloud_Message_ImcRecalledMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OriginMsg *Message_Message                `protobuf:"bytes,1,opt,name=originMsg,proto3" json:"originMsg,omitempty"`
	NoticeMsg *Cloud_Message_ImcNoticeMessage `protobuf:"bytes,2,opt,name=noticeMsg,proto3" json:"noticeMsg,omitempty"`
}

func (x *Cloud_Message_ImcRecalledMessage) Reset() {
	*x = Cloud_Message_ImcRecalledMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_ImcRecalledMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_ImcRecalledMessage) ProtoMessage() {}

func (x *Cloud_Message_ImcRecalledMessage) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_ImcRecalledMessage.ProtoReflect.Descriptor instead.
func (*Cloud_Message_ImcRecalledMessage) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 0}
}

func (x *Cloud_Message_ImcRecalledMessage) GetOriginMsg() *Message_Message {
	if x != nil {
		return x.OriginMsg
	}
	return nil
}

func (x *Cloud_Message_ImcRecalledMessage) GetNoticeMsg() *Cloud_Message_ImcNoticeMessage {
	if x != nil {
		return x.NoticeMsg
	}
	return nil
}

type Cloud_Message_ImcReplaceMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplaceMsg *Message_Message `protobuf:"bytes,1,opt,name=replaceMsg,proto3" json:"replaceMsg,omitempty"`
}

func (x *Cloud_Message_ImcReplaceMessage) Reset() {
	*x = Cloud_Message_ImcReplaceMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_ImcReplaceMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_ImcReplaceMessage) ProtoMessage() {}

func (x *Cloud_Message_ImcReplaceMessage) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_ImcReplaceMessage.ProtoReflect.Descriptor instead.
func (*Cloud_Message_ImcReplaceMessage) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 1}
}

func (x *Cloud_Message_ImcReplaceMessage) GetReplaceMsg() *Message_Message {
	if x != nil {
		return x.ReplaceMsg
	}
	return nil
}

type Cloud_Message_Text struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *Cloud_Message_Text) Reset() {
	*x = Cloud_Message_Text{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_Text) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_Text) ProtoMessage() {}

func (x *Cloud_Message_Text) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_Text.ProtoReflect.Descriptor instead.
func (*Cloud_Message_Text) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 2}
}

func (x *Cloud_Message_Text) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type Cloud_Message_Image struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uri    string `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
	Width  int32  `protobuf:"varint,2,opt,name=width,proto3" json:"width,omitempty"`
	Height int32  `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *Cloud_Message_Image) Reset() {
	*x = Cloud_Message_Image{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_Image) ProtoMessage() {}

func (x *Cloud_Message_Image) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_Image.ProtoReflect.Descriptor instead.
func (*Cloud_Message_Image) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 3}
}

func (x *Cloud_Message_Image) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *Cloud_Message_Image) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Cloud_Message_Image) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type Cloud_Message_Audio struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uri      string `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
	Duration int32  `protobuf:"varint,2,opt,name=duration,proto3" json:"duration,omitempty"`
	Type     string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *Cloud_Message_Audio) Reset() {
	*x = Cloud_Message_Audio{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_Audio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_Audio) ProtoMessage() {}

func (x *Cloud_Message_Audio) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_Audio.ProtoReflect.Descriptor instead.
func (*Cloud_Message_Audio) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 4}
}

func (x *Cloud_Message_Audio) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *Cloud_Message_Audio) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Cloud_Message_Audio) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type Cloud_Message_Video struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uri      string `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
	Duration int32  `protobuf:"varint,2,opt,name=duration,proto3" json:"duration,omitempty"`
	Width    int32  `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
	Height   int32  `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	CoverUri string `protobuf:"bytes,5,opt,name=coverUri,proto3" json:"coverUri,omitempty"`
	Type     string `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *Cloud_Message_Video) Reset() {
	*x = Cloud_Message_Video{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_Video) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_Video) ProtoMessage() {}

func (x *Cloud_Message_Video) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_Video.ProtoReflect.Descriptor instead.
func (*Cloud_Message_Video) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 5}
}

func (x *Cloud_Message_Video) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *Cloud_Message_Video) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Cloud_Message_Video) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Cloud_Message_Video) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Cloud_Message_Video) GetCoverUri() string {
	if x != nil {
		return x.CoverUri
	}
	return ""
}

func (x *Cloud_Message_Video) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type Cloud_Message_Custon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload string `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *Cloud_Message_Custon) Reset() {
	*x = Cloud_Message_Custon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_Custon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_Custon) ProtoMessage() {}

func (x *Cloud_Message_Custon) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_Custon.ProtoReflect.Descriptor instead.
func (*Cloud_Message_Custon) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 6}
}

func (x *Cloud_Message_Custon) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

type Cloud_Message_PicUrl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cdn        string `protobuf:"bytes,1,opt,name=cdn,proto3" json:"cdn,omitempty"`
	Url        string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	UrlPattern string `protobuf:"bytes,3,opt,name=urlPattern,proto3" json:"urlPattern,omitempty"`
	Ip         string `protobuf:"bytes,4,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *Cloud_Message_PicUrl) Reset() {
	*x = Cloud_Message_PicUrl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_PicUrl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_PicUrl) ProtoMessage() {}

func (x *Cloud_Message_PicUrl) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_PicUrl.ProtoReflect.Descriptor instead.
func (*Cloud_Message_PicUrl) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 7}
}

func (x *Cloud_Message_PicUrl) GetCdn() string {
	if x != nil {
		return x.Cdn
	}
	return ""
}

func (x *Cloud_Message_PicUrl) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Cloud_Message_PicUrl) GetUrlPattern() string {
	if x != nil {
		return x.UrlPattern
	}
	return ""
}

func (x *Cloud_Message_PicUrl) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type Cloud_Message_Emoticon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string                         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PackageId    string                         `protobuf:"bytes,2,opt,name=packageId,proto3" json:"packageId,omitempty"`
	Name         string                         `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Type         Cloud_Message_Emoticon_Type    `protobuf:"varint,4,opt,name=type,proto3,enum=AcFunDanmu.Im.Cloud_Message_Emoticon_Type" json:"type,omitempty"`
	BigUrl       []*Cloud_Message_PicUrl        `protobuf:"bytes,5,rep,name=bigUrl,proto3" json:"bigUrl,omitempty"`
	Width        int32                          `protobuf:"varint,6,opt,name=width,proto3" json:"width,omitempty"`
	Height       int32                          `protobuf:"varint,7,opt,name=height,proto3" json:"height,omitempty"`
	EmoticonCOde []*Cloud_Message_Emoticon_Code `protobuf:"bytes,8,rep,name=emoticonCOde,proto3" json:"emoticonCOde,omitempty"`
}

func (x *Cloud_Message_Emoticon) Reset() {
	*x = Cloud_Message_Emoticon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_Emoticon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_Emoticon) ProtoMessage() {}

func (x *Cloud_Message_Emoticon) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_Emoticon.ProtoReflect.Descriptor instead.
func (*Cloud_Message_Emoticon) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 8}
}

func (x *Cloud_Message_Emoticon) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Cloud_Message_Emoticon) GetPackageId() string {
	if x != nil {
		return x.PackageId
	}
	return ""
}

func (x *Cloud_Message_Emoticon) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Cloud_Message_Emoticon) GetType() Cloud_Message_Emoticon_Type {
	if x != nil {
		return x.Type
	}
	return Cloud_Message_Emoticon_UNKNOWN
}

func (x *Cloud_Message_Emoticon) GetBigUrl() []*Cloud_Message_PicUrl {
	if x != nil {
		return x.BigUrl
	}
	return nil
}

func (x *Cloud_Message_Emoticon) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Cloud_Message_Emoticon) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Cloud_Message_Emoticon) GetEmoticonCOde() []*Cloud_Message_Emoticon_Code {
	if x != nil {
		return x.EmoticonCOde
	}
	return nil
}

type Cloud_Message_File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uri   string `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Ext   string `protobuf:"bytes,3,opt,name=ext,proto3" json:"ext,omitempty"`
	Extra string `protobuf:"bytes,4,opt,name=extra,proto3" json:"extra,omitempty"`
}

func (x *Cloud_Message_File) Reset() {
	*x = Cloud_Message_File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_File) ProtoMessage() {}

func (x *Cloud_Message_File) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_File.ProtoReflect.Descriptor instead.
func (*Cloud_Message_File) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 9}
}

func (x *Cloud_Message_File) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *Cloud_Message_File) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Cloud_Message_File) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

func (x *Cloud_Message_File) GetExtra() string {
	if x != nil {
		return x.Extra
	}
	return ""
}

type Cloud_Message_Reference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OriginMsg    *Message_Message                          `protobuf:"bytes,1,opt,name=originMsg,proto3" json:"originMsg,omitempty"`
	ReferenceMsg *Cloud_Message_Reference_ReferenceMessage `protobuf:"bytes,2,opt,name=referenceMsg,proto3" json:"referenceMsg,omitempty"`
}

func (x *Cloud_Message_Reference) Reset() {
	*x = Cloud_Message_Reference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_Reference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_Reference) ProtoMessage() {}

func (x *Cloud_Message_Reference) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_Reference.ProtoReflect.Descriptor instead.
func (*Cloud_Message_Reference) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 10}
}

func (x *Cloud_Message_Reference) GetOriginMsg() *Message_Message {
	if x != nil {
		return x.OriginMsg
	}
	return nil
}

func (x *Cloud_Message_Reference) GetReferenceMsg() *Cloud_Message_Reference_ReferenceMessage {
	if x != nil {
		return x.ReferenceMsg
	}
	return nil
}

type Cloud_Message_ForwardMessageContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message []*Message_Message `protobuf:"bytes,1,rep,name=message,proto3" json:"message,omitempty"`
}

func (x *Cloud_Message_ForwardMessageContent) Reset() {
	*x = Cloud_Message_ForwardMessageContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_ForwardMessageContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_ForwardMessageContent) ProtoMessage() {}

func (x *Cloud_Message_ForwardMessageContent) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_ForwardMessageContent.ProtoReflect.Descriptor instead.
func (*Cloud_Message_ForwardMessageContent) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 11}
}

func (x *Cloud_Message_ForwardMessageContent) GetMessage() []*Message_Message {
	if x != nil {
		return x.Message
	}
	return nil
}

type Cloud_Message_NoticePlaceholderMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId   string `protobuf:"bytes,1,opt,name=targetId,proto3" json:"targetId,omitempty"`
	StartIndex int32  `protobuf:"varint,2,opt,name=startIndex,proto3" json:"startIndex,omitempty"`
	Length     int32  `protobuf:"varint,3,opt,name=length,proto3" json:"length,omitempty"`
}

func (x *Cloud_Message_NoticePlaceholderMeta) Reset() {
	*x = Cloud_Message_NoticePlaceholderMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_NoticePlaceholderMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_NoticePlaceholderMeta) ProtoMessage() {}

func (x *Cloud_Message_NoticePlaceholderMeta) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_NoticePlaceholderMeta.ProtoReflect.Descriptor instead.
func (*Cloud_Message_NoticePlaceholderMeta) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 12}
}

func (x *Cloud_Message_NoticePlaceholderMeta) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *Cloud_Message_NoticePlaceholderMeta) GetStartIndex() int32 {
	if x != nil {
		return x.StartIndex
	}
	return 0
}

func (x *Cloud_Message_NoticePlaceholderMeta) GetLength() int32 {
	if x != nil {
		return x.Length
	}
	return 0
}

type Cloud_Message_ImcNoticeMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text                  string                                 `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	NoticePlaceholderMeta []*Cloud_Message_NoticePlaceholderMeta `protobuf:"bytes,2,rep,name=noticePlaceholderMeta,proto3" json:"noticePlaceholderMeta,omitempty"`
	NoticeMetaType        int32                                  `protobuf:"varint,3,opt,name=noticeMetaType,proto3" json:"noticeMetaType,omitempty"`
	NoticeMetaInfo        []byte                                 `protobuf:"bytes,4,opt,name=noticeMetaInfo,proto3" json:"noticeMetaInfo,omitempty"`
}

func (x *Cloud_Message_ImcNoticeMessage) Reset() {
	*x = Cloud_Message_ImcNoticeMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_ImcNoticeMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_ImcNoticeMessage) ProtoMessage() {}

func (x *Cloud_Message_ImcNoticeMessage) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_ImcNoticeMessage.ProtoReflect.Descriptor instead.
func (*Cloud_Message_ImcNoticeMessage) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 13}
}

func (x *Cloud_Message_ImcNoticeMessage) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Cloud_Message_ImcNoticeMessage) GetNoticePlaceholderMeta() []*Cloud_Message_NoticePlaceholderMeta {
	if x != nil {
		return x.NoticePlaceholderMeta
	}
	return nil
}

func (x *Cloud_Message_ImcNoticeMessage) GetNoticeMetaType() int32 {
	if x != nil {
		return x.NoticeMetaType
	}
	return 0
}

func (x *Cloud_Message_ImcNoticeMessage) GetNoticeMetaInfo() []byte {
	if x != nil {
		return x.NoticeMetaInfo
	}
	return nil
}

type Cloud_Message_LinkedProfileMetaInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId []int64 `protobuf:"varint,1,rep,packed,name=userId,proto3" json:"userId,omitempty"`
}

func (x *Cloud_Message_LinkedProfileMetaInfo) Reset() {
	*x = Cloud_Message_LinkedProfileMetaInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_LinkedProfileMetaInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_LinkedProfileMetaInfo) ProtoMessage() {}

func (x *Cloud_Message_LinkedProfileMetaInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_LinkedProfileMetaInfo.ProtoReflect.Descriptor instead.
func (*Cloud_Message_LinkedProfileMetaInfo) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 14}
}

func (x *Cloud_Message_LinkedProfileMetaInfo) GetUserId() []int64 {
	if x != nil {
		return x.UserId
	}
	return nil
}

type Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId int64                           `protobuf:"varint,1,opt,name=requestId,proto3" json:"requestId,omitempty"`
	GroupId   string                          `protobuf:"bytes,2,opt,name=groupId,proto3" json:"groupId,omitempty"`
	Status    Cloud_Message_JoinRequestStatus `protobuf:"varint,3,opt,name=status,proto3,enum=AcFunDanmu.Im.Cloud_Message_JoinRequestStatus" json:"status,omitempty"`
}

func (x *Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo) Reset() {
	*x = Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo) ProtoMessage() {}

func (x *Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo.ProtoReflect.Descriptor instead.
func (*Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 15}
}

func (x *Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo) GetRequestId() int64 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo) GetStatus() Cloud_Message_JoinRequestStatus {
	if x != nil {
		return x.Status
	}
	return Cloud_Message_UNKNOWN_STATUS
}

type Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId int64                           `protobuf:"varint,1,opt,name=requestId,proto3" json:"requestId,omitempty"`
	GroupId   string                          `protobuf:"bytes,2,opt,name=groupId,proto3" json:"groupId,omitempty"`
	Status    Cloud_Message_JoinRequestStatus `protobuf:"varint,3,opt,name=status,proto3,enum=AcFunDanmu.Im.Cloud_Message_JoinRequestStatus" json:"status,omitempty"`
}

func (x *Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo) Reset() {
	*x = Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo) ProtoMessage() {}

func (x *Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo.ProtoReflect.Descriptor instead.
func (*Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 16}
}

func (x *Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo) GetRequestId() int64 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo) GetStatus() Cloud_Message_JoinRequestStatus {
	if x != nil {
		return x.Status
	}
	return Cloud_Message_UNKNOWN_STATUS
}

type Cloud_Message_GroupCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Members []*Basic_User `protobuf:"bytes,1,rep,name=members,proto3" json:"members,omitempty"`
}

func (x *Cloud_Message_GroupCreateRequest) Reset() {
	*x = Cloud_Message_GroupCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_GroupCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_GroupCreateRequest) ProtoMessage() {}

func (x *Cloud_Message_GroupCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_GroupCreateRequest.ProtoReflect.Descriptor instead.
func (*Cloud_Message_GroupCreateRequest) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 17}
}

func (x *Cloud_Message_GroupCreateRequest) GetMembers() []*Basic_User {
	if x != nil {
		return x.Members
	}
	return nil
}

type Cloud_Message_GroupCreateReponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId   string                       `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	GroupInfo *Cloud_Message_GroupInfo     `protobuf:"bytes,2,opt,name=groupInfo,proto3" json:"groupInfo,omitempty"`
	Members   []*Cloud_Message_GroupMember `protobuf:"bytes,3,rep,name=members,proto3" json:"members,omitempty"`
}

func (x *Cloud_Message_GroupCreateReponse) Reset() {
	*x = Cloud_Message_GroupCreateReponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_GroupCreateReponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_GroupCreateReponse) ProtoMessage() {}

func (x *Cloud_Message_GroupCreateReponse) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_GroupCreateReponse.ProtoReflect.Descriptor instead.
func (*Cloud_Message_GroupCreateReponse) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 18}
}

func (x *Cloud_Message_GroupCreateReponse) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *Cloud_Message_GroupCreateReponse) GetGroupInfo() *Cloud_Message_GroupInfo {
	if x != nil {
		return x.GroupInfo
	}
	return nil
}

func (x *Cloud_Message_GroupCreateReponse) GetMembers() []*Cloud_Message_GroupMember {
	if x != nil {
		return x.Members
	}
	return nil
}

type Cloud_Message_GroupDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
}

func (x *Cloud_Message_GroupDeleteRequest) Reset() {
	*x = Cloud_Message_GroupDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_GroupDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_GroupDeleteRequest) ProtoMessage() {}

func (x *Cloud_Message_GroupDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_GroupDeleteRequest.ProtoReflect.Descriptor instead.
func (*Cloud_Message_GroupDeleteRequest) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 19}
}

func (x *Cloud_Message_GroupDeleteRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type Cloud_Message_GroupDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Cloud_Message_GroupDeleteResponse) Reset() {
	*x = Cloud_Message_GroupDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_GroupDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_GroupDeleteResponse) ProtoMessage() {}

func (x *Cloud_Message_GroupDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_GroupDeleteResponse.ProtoReflect.Descriptor instead.
func (*Cloud_Message_GroupDeleteResponse) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 20}
}

type Cloud_Message_GroupInviteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId     string        `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	Members     []*Basic_User `protobuf:"bytes,2,rep,name=members,proto3" json:"members,omitempty"`
	DescContent string        `protobuf:"bytes,3,opt,name=descContent,proto3" json:"descContent,omitempty"`
}

func (x *Cloud_Message_GroupInviteRequest) Reset() {
	*x = Cloud_Message_GroupInviteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[141]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_GroupInviteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_GroupInviteRequest) ProtoMessage() {}

func (x *Cloud_Message_GroupInviteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[141]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_GroupInviteRequest.ProtoReflect.Descriptor instead.
func (*Cloud_Message_GroupInviteRequest) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 21}
}

func (x *Cloud_Message_GroupInviteRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *Cloud_Message_GroupInviteRequest) GetMembers() []*Basic_User {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *Cloud_Message_GroupInviteRequest) GetDescContent() string {
	if x != nil {
		return x.DescContent
	}
	return ""
}

type Cloud_Message_GroupInvideResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId      string                                         `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	InviteStatus Cloud_Message_GroupInvideResponse_InviteStatus `protobuf:"varint,2,opt,name=inviteStatus,proto3,enum=AcFunDanmu.Im.Cloud_Message_GroupInvideResponse_InviteStatus" json:"inviteStatus,omitempty"`
}

func (x *Cloud_Message_GroupInvideResponse) Reset() {
	*x = Cloud_Message_GroupInvideResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[142]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_GroupInvideResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_GroupInvideResponse) ProtoMessage() {}

func (x *Cloud_Message_GroupInvideResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[142]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_GroupInvideResponse.ProtoReflect.Descriptor instead.
func (*Cloud_Message_GroupInvideResponse) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 22}
}

func (x *Cloud_Message_GroupInvideResponse) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *Cloud_Message_GroupInvideResponse) GetInviteStatus() Cloud_Message_GroupInvideResponse_InviteStatus {
	if x != nil {
		return x.InviteStatus
	}
	return Cloud_Message_GroupInvideResponse_UNKNOWN_STATUS
}

type Cloud_Message_GroupJoinRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId     string                      `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	Inviter     *Basic_User                 `protobuf:"bytes,2,opt,name=inviter,proto3" json:"inviter,omitempty"`
	DescContent string                      `protobuf:"bytes,3,opt,name=descContent,proto3" json:"descContent,omitempty"`
	FindType    Cloud_Message_GroupFindType `protobuf:"varint,4,opt,name=findType,proto3,enum=AcFunDanmu.Im.Cloud_Message_GroupFindType" json:"findType,omitempty"`
}

func (x *Cloud_Message_GroupJoinRequest) Reset() {
	*x = Cloud_Message_GroupJoinRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[143]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_GroupJoinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_GroupJoinRequest) ProtoMessage() {}

func (x *Cloud_Message_GroupJoinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[143]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_GroupJoinRequest.ProtoReflect.Descriptor instead.
func (*Cloud_Message_GroupJoinRequest) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 23}
}

func (x *Cloud_Message_GroupJoinRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *Cloud_Message_GroupJoinRequest) GetInviter() *Basic_User {
	if x != nil {
		return x.Inviter
	}
	return nil
}

func (x *Cloud_Message_GroupJoinRequest) GetDescContent() string {
	if x != nil {
		return x.DescContent
	}
	return ""
}

func (x *Cloud_Message_GroupJoinRequest) GetFindType() Cloud_Message_GroupFindType {
	if x != nil {
		return x.FindType
	}
	return Cloud_Message_BY_UNKNOWN
}

type Cloud_Message_GroupJoinResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JoinStatus Cloud_Message_GroupJoinResponse_JoinStatus `protobuf:"varint,1,opt,name=joinStatus,proto3,enum=AcFunDanmu.Im.Cloud_Message_GroupJoinResponse_JoinStatus" json:"joinStatus,omitempty"`
}

func (x *Cloud_Message_GroupJoinResponse) Reset() {
	*x = Cloud_Message_GroupJoinResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[144]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_GroupJoinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_GroupJoinResponse) ProtoMessage() {}

func (x *Cloud_Message_GroupJoinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[144]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_GroupJoinResponse.ProtoReflect.Descriptor instead.
func (*Cloud_Message_GroupJoinResponse) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 24}
}

func (x *Cloud_Message_GroupJoinResponse) GetJoinStatus() Cloud_Message_GroupJoinResponse_JoinStatus {
	if x != nil {
		return x.JoinStatus
	}
	return Cloud_Message_GroupJoinResponse_UNKNOWN_STATUS
}

type Cloud_Message_GroupJoinRequestAckRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReqId            int64                                                     `protobuf:"varint,1,opt,name=reqId,proto3" json:"reqId,omitempty"`
	GroupId          string                                                    `protobuf:"bytes,2,opt,name=groupId,proto3" json:"groupId,omitempty"`
	GroupJoinAckType Cloud_Message_GroupJoinRequestAckRequest_GroupJoinAckType `protobuf:"varint,3,opt,name=groupJoinAckType,proto3,enum=AcFunDanmu.Im.Cloud_Message_GroupJoinRequestAckRequest_GroupJoinAckType" json:"groupJoinAckType,omitempty"`
}

func (x *Cloud_Message_GroupJoinRequestAckRequest) Reset() {
	*x = Cloud_Message_GroupJoinRequestAckRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[145]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_GroupJoinRequestAckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_GroupJoinRequestAckRequest) ProtoMessage() {}

func (x *Cloud_Message_GroupJoinRequestAckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[145]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_GroupJoinRequestAckRequest.ProtoReflect.Descriptor instead.
func (*Cloud_Message_GroupJoinRequestAckRequest) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 25}
}

func (x *Cloud_Message_GroupJoinRequestAckRequest) GetReqId() int64 {
	if x != nil {
		return x.ReqId
	}
	return 0
}

func (x *Cloud_Message_GroupJoinRequestAckRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *Cloud_Message_GroupJoinRequestAckRequest) GetGroupJoinAckType() Cloud_Message_GroupJoinRequestAckRequest_GroupJoinAckType {
	if x != nil {
		return x.GroupJoinAckType
	}
	return Cloud_Message_GroupJoinRequestAckRequest_UNKNOWN_TYPE
}

type Cloud_Message_GroupJoinRequestAckResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Cloud_Message_GroupJoinRequestAckResponse) Reset() {
	*x = Cloud_Message_GroupJoinRequestAckResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[146]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_GroupJoinRequestAckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_GroupJoinRequestAckResponse) ProtoMessage() {}

func (x *Cloud_Message_GroupJoinRequestAckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[146]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_GroupJoinRequestAckResponse.ProtoReflect.Descriptor instead.
func (*Cloud_Message_GroupJoinRequestAckResponse) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 26}
}

type Cloud_Message_GroupJoinRequestGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReqSeq  int64  `protobuf:"varint,1,opt,name=reqSeq,proto3" json:"reqSeq,omitempty"`
	GroupId string `protobuf:"bytes,2,opt,name=groupId,proto3" json:"groupId,omitempty"`
}

func (x *Cloud_Message_GroupJoinRequestGetRequest) Reset() {
	*x = Cloud_Message_GroupJoinRequestGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[147]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_GroupJoinRequestGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_GroupJoinRequestGetRequest) ProtoMessage() {}

func (x *Cloud_Message_GroupJoinRequestGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[147]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_GroupJoinRequestGetRequest.ProtoReflect.Descriptor instead.
func (*Cloud_Message_GroupJoinRequestGetRequest) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 27}
}

func (x *Cloud_Message_GroupJoinRequestGetRequest) GetReqSeq() int64 {
	if x != nil {
		return x.ReqSeq
	}
	return 0
}

func (x *Cloud_Message_GroupJoinRequestGetRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type Cloud_Message_GroupJoinRequestGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId     string                          `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	Inviter     *Basic_User                     `protobuf:"bytes,2,opt,name=inviter,proto3" json:"inviter,omitempty"`
	Invitees    []*Basic_User                   `protobuf:"bytes,3,rep,name=invitees,proto3" json:"invitees,omitempty"`
	FindWay     Cloud_Message_GroupFindType     `protobuf:"varint,4,opt,name=findWay,proto3,enum=AcFunDanmu.Im.Cloud_Message_GroupFindType" json:"findWay,omitempty"`
	DescContent string                          `protobuf:"bytes,5,opt,name=descContent,proto3" json:"descContent,omitempty"`
	Status      Cloud_Message_JoinRequestStatus `protobuf:"varint,6,opt,name=status,proto3,enum=AcFunDanmu.Im.Cloud_Message_JoinRequestStatus" json:"status,omitempty"`
}

func (x *Cloud_Message_GroupJoinRequestGetResponse) Reset() {
	*x = Cloud_Message_GroupJoinRequestGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[148]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_GroupJoinRequestGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_GroupJoinRequestGetResponse) ProtoMessage() {}

func (x *Cloud_Message_GroupJoinRequestGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[148]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_GroupJoinRequestGetResponse.ProtoReflect.Descriptor instead.
func (*Cloud_Message_GroupJoinRequestGetResponse) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 28}
}

func (x *Cloud_Message_GroupJoinRequestGetResponse) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *Cloud_Message_GroupJoinRequestGetResponse) GetInviter() *Basic_User {
	if x != nil {
		return x.Inviter
	}
	return nil
}

func (x *Cloud_Message_GroupJoinRequestGetResponse) GetInvitees() []*Basic_User {
	if x != nil {
		return x.Invitees
	}
	return nil
}

func (x *Cloud_Message_GroupJoinRequestGetResponse) GetFindWay() Cloud_Message_GroupFindType {
	if x != nil {
		return x.FindWay
	}
	return Cloud_Message_BY_UNKNOWN
}

func (x *Cloud_Message_GroupJoinRequestGetResponse) GetDescContent() string {
	if x != nil {
		return x.DescContent
	}
	return ""
}

func (x *Cloud_Message_GroupJoinRequestGetResponse) GetStatus() Cloud_Message_JoinRequestStatus {
	if x != nil {
		return x.Status
	}
	return Cloud_Message_UNKNOWN_STATUS
}

type Cloud_Message_GroupJoinRequestCancelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReqSeq  int64  `protobuf:"varint,1,opt,name=reqSeq,proto3" json:"reqSeq,omitempty"`
	GroupId string `protobuf:"bytes,2,opt,name=groupId,proto3" json:"groupId,omitempty"`
}

func (x *Cloud_Message_GroupJoinRequestCancelRequest) Reset() {
	*x = Cloud_Message_GroupJoinRequestCancelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[149]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_GroupJoinRequestCancelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_GroupJoinRequestCancelRequest) ProtoMessage() {}

func (x *Cloud_Message_GroupJoinRequestCancelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[149]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_GroupJoinRequestCancelRequest.ProtoReflect.Descriptor instead.
func (*Cloud_Message_GroupJoinRequestCancelRequest) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 29}
}

func (x *Cloud_Message_GroupJoinRequestCancelRequest) GetReqSeq() int64 {
	if x != nil {
		return x.ReqSeq
	}
	return 0
}

func (x *Cloud_Message_GroupJoinRequestCancelRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type Cloud_Message_GroupJoinRequestCancelResposne struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId     string                          `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	Inviter     *Basic_User                     `protobuf:"bytes,2,opt,name=inviter,proto3" json:"inviter,omitempty"`
	Invitees    []*Basic_User                   `protobuf:"bytes,3,rep,name=invitees,proto3" json:"invitees,omitempty"`
	FindWay     Cloud_Message_GroupFindType     `protobuf:"varint,4,opt,name=findWay,proto3,enum=AcFunDanmu.Im.Cloud_Message_GroupFindType" json:"findWay,omitempty"`
	DescContent string                          `protobuf:"bytes,5,opt,name=descContent,proto3" json:"descContent,omitempty"`
	Status      Cloud_Message_JoinRequestStatus `protobuf:"varint,6,opt,name=status,proto3,enum=AcFunDanmu.Im.Cloud_Message_JoinRequestStatus" json:"status,omitempty"`
}

func (x *Cloud_Message_GroupJoinRequestCancelResposne) Reset() {
	*x = Cloud_Message_GroupJoinRequestCancelResposne{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[150]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_GroupJoinRequestCancelResposne) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_GroupJoinRequestCancelResposne) ProtoMessage() {}

func (x *Cloud_Message_GroupJoinRequestCancelResposne) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[150]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_GroupJoinRequestCancelResposne.ProtoReflect.Descriptor instead.
func (*Cloud_Message_GroupJoinRequestCancelResposne) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 30}
}

func (x *Cloud_Message_GroupJoinRequestCancelResposne) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *Cloud_Message_GroupJoinRequestCancelResposne) GetInviter() *Basic_User {
	if x != nil {
		return x.Inviter
	}
	return nil
}

func (x *Cloud_Message_GroupJoinRequestCancelResposne) GetInvitees() []*Basic_User {
	if x != nil {
		return x.Invitees
	}
	return nil
}

func (x *Cloud_Message_GroupJoinRequestCancelResposne) GetFindWay() Cloud_Message_GroupFindType {
	if x != nil {
		return x.FindWay
	}
	return Cloud_Message_BY_UNKNOWN
}

func (x *Cloud_Message_GroupJoinRequestCancelResposne) GetDescContent() string {
	if x != nil {
		return x.DescContent
	}
	return ""
}

func (x *Cloud_Message_GroupJoinRequestCancelResposne) GetStatus() Cloud_Message_JoinRequestStatus {
	if x != nil {
		return x.Status
	}
	return Cloud_Message_UNKNOWN_STATUS
}

type Cloud_Message_GroupQuitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
}

func (x *Cloud_Message_GroupQuitRequest) Reset() {
	*x = Cloud_Message_GroupQuitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[151]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_GroupQuitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_GroupQuitRequest) ProtoMessage() {}

func (x *Cloud_Message_GroupQuitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[151]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_GroupQuitRequest.ProtoReflect.Descriptor instead.
func (*Cloud_Message_GroupQuitRequest) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 31}
}

func (x *Cloud_Message_GroupQuitRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type Cloud_Message_GroupQuitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
}

func (x *Cloud_Message_GroupQuitResponse) Reset() {
	*x = Cloud_Message_GroupQuitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[152]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_GroupQuitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_GroupQuitResponse) ProtoMessage() {}

func (x *Cloud_Message_GroupQuitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[152]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_GroupQuitResponse.ProtoReflect.Descriptor instead.
func (*Cloud_Message_GroupQuitResponse) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 32}
}

func (x *Cloud_Message_GroupQuitResponse) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type Cloud_Message_GroupKickRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string        `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	Target  []*Basic_User `protobuf:"bytes,2,rep,name=target,proto3" json:"target,omitempty"`
}

func (x *Cloud_Message_GroupKickRequest) Reset() {
	*x = Cloud_Message_GroupKickRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[153]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_GroupKickRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_GroupKickRequest) ProtoMessage() {}

func (x *Cloud_Message_GroupKickRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[153]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_GroupKickRequest.ProtoReflect.Descriptor instead.
func (*Cloud_Message_GroupKickRequest) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 33}
}

func (x *Cloud_Message_GroupKickRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *Cloud_Message_GroupKickRequest) GetTarget() []*Basic_User {
	if x != nil {
		return x.Target
	}
	return nil
}

type Cloud_Message_GroupKickResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
}

func (x *Cloud_Message_GroupKickResponse) Reset() {
	*x = Cloud_Message_GroupKickResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[154]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_GroupKickResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_GroupKickResponse) ProtoMessage() {}

func (x *Cloud_Message_GroupKickResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[154]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_GroupKickResponse.ProtoReflect.Descriptor instead.
func (*Cloud_Message_GroupKickResponse) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 34}
}

func (x *Cloud_Message_GroupKickResponse) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type Cloud_Message_GroupSettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	// Types that are assignable to GroupSetting:
	//	*Cloud_Message_GroupSettingRequest_Rename
	//	*Cloud_Message_GroupSettingRequest_Desc
	//	*Cloud_Message_GroupSettingRequest_JoinNeedPermission
	//	*Cloud_Message_GroupSettingRequest_InvitePermission
	GroupSetting isCloud_Message_GroupSettingRequest_GroupSetting `protobuf_oneof:"GroupSetting"`
}

func (x *Cloud_Message_GroupSettingRequest) Reset() {
	*x = Cloud_Message_GroupSettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[155]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_GroupSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_GroupSettingRequest) ProtoMessage() {}

func (x *Cloud_Message_GroupSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[155]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_GroupSettingRequest.ProtoReflect.Descriptor instead.
func (*Cloud_Message_GroupSettingRequest) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 35}
}

func (x *Cloud_Message_GroupSettingRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (m *Cloud_Message_GroupSettingRequest) GetGroupSetting() isCloud_Message_GroupSettingRequest_GroupSetting {
	if m != nil {
		return m.GroupSetting
	}
	return nil
}

func (x *Cloud_Message_GroupSettingRequest) GetRename() *Cloud_Message_GroupSettingRename {
	if x, ok := x.GetGroupSetting().(*Cloud_Message_GroupSettingRequest_Rename); ok {
		return x.Rename
	}
	return nil
}

func (x *Cloud_Message_GroupSettingRequest) GetDesc() *Cloud_Message_GroupSettingDesc {
	if x, ok := x.GetGroupSetting().(*Cloud_Message_GroupSettingRequest_Desc); ok {
		return x.Desc
	}
	return nil
}

func (x *Cloud_Message_GroupSettingRequest) GetJoinNeedPermission() *Cloud_Message_GroupSettingJoinNeedPermission {
	if x, ok := x.GetGroupSetting().(*Cloud_Message_GroupSettingRequest_JoinNeedPermission); ok {
		return x.JoinNeedPermission
	}
	return nil
}

func (x *Cloud_Message_GroupSettingRequest) GetInvitePermission() *Cloud_Message_GroupSettingInvitePermission {
	if x, ok := x.GetGroupSetting().(*Cloud_Message_GroupSettingRequest_InvitePermission); ok {
		return x.InvitePermission
	}
	return nil
}

type isCloud_Message_GroupSettingRequest_GroupSetting interface {
	isCloud_Message_GroupSettingRequest_GroupSetting()
}

type Cloud_Message_GroupSettingRequest_Rename struct {
	Rename *Cloud_Message_GroupSettingRename `protobuf:"bytes,2,opt,name=rename,proto3,oneof"`
}

type Cloud_Message_GroupSettingRequest_Desc struct {
	Desc *Cloud_Message_GroupSettingDesc `protobuf:"bytes,3,opt,name=desc,proto3,oneof"`
}

type Cloud_Message_GroupSettingRequest_JoinNeedPermission struct {
	JoinNeedPermission *Cloud_Message_GroupSettingJoinNeedPermission `protobuf:"bytes,4,opt,name=joinNeedPermission,proto3,oneof"`
}

type Cloud_Message_GroupSettingRequest_InvitePermission struct {
	InvitePermission *Cloud_Message_GroupSettingInvitePermission `protobuf:"bytes,5,opt,name=invitePermission,proto3,oneof"`
}

func (*Cloud_Message_GroupSettingRequest_Rename) isCloud_Message_GroupSettingRequest_GroupSetting() {}

func (*Cloud_Message_GroupSettingRequest_Desc) isCloud_Message_GroupSettingRequest_GroupSetting() {}

func (*Cloud_Message_GroupSettingRequest_JoinNeedPermission) isCloud_Message_GroupSettingRequest_GroupSetting() {
}

func (*Cloud_Message_GroupSettingRequest_InvitePermission) isCloud_Message_GroupSettingRequest_GroupSetting() {
}

type Cloud_Message_GroupSettingRename struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupName string `protobuf:"bytes,1,opt,name=groupName,proto3" json:"groupName,omitempty"`
}

func (x *Cloud_Message_GroupSettingRename) Reset() {
	*x = Cloud_Message_GroupSettingRename{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[156]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_GroupSettingRename) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_GroupSettingRename) ProtoMessage() {}

func (x *Cloud_Message_GroupSettingRename) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[156]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_GroupSettingRename.ProtoReflect.Descriptor instead.
func (*Cloud_Message_GroupSettingRename) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 36}
}

func (x *Cloud_Message_GroupSettingRename) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

type Cloud_Message_GroupSettingDesc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Desc string `protobuf:"bytes,1,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *Cloud_Message_GroupSettingDesc) Reset() {
	*x = Cloud_Message_GroupSettingDesc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[157]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_GroupSettingDesc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_GroupSettingDesc) ProtoMessage() {}

func (x *Cloud_Message_GroupSettingDesc) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[157]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_GroupSettingDesc.ProtoReflect.Descriptor instead.
func (*Cloud_Message_GroupSettingDesc) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 37}
}

func (x *Cloud_Message_GroupSettingDesc) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

type Cloud_Message_GroupSettingJoinNeedPermission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JoinNeedPermission Cloud_Message_JoinNeedPermissionType `protobuf:"varint,1,opt,name=joinNeedPermission,proto3,enum=AcFunDanmu.Im.Cloud_Message_JoinNeedPermissionType" json:"joinNeedPermission,omitempty"`
}

func (x *Cloud_Message_GroupSettingJoinNeedPermission) Reset() {
	*x = Cloud_Message_GroupSettingJoinNeedPermission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[158]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_GroupSettingJoinNeedPermission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_GroupSettingJoinNeedPermission) ProtoMessage() {}

func (x *Cloud_Message_GroupSettingJoinNeedPermission) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[158]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_GroupSettingJoinNeedPermission.ProtoReflect.Descriptor instead.
func (*Cloud_Message_GroupSettingJoinNeedPermission) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 38}
}

func (x *Cloud_Message_GroupSettingJoinNeedPermission) GetJoinNeedPermission() Cloud_Message_JoinNeedPermissionType {
	if x != nil {
		return x.JoinNeedPermission
	}
	return Cloud_Message_UNKNOWN_JOIN_NEED_PERMISSION_TYPE
}

type Cloud_Message_GroupSettingInvitePermission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvitePermissionType Cloud_Message_InvitePermissionType `protobuf:"varint,1,opt,name=invitePermissionType,proto3,enum=AcFunDanmu.Im.Cloud_Message_InvitePermissionType" json:"invitePermissionType,omitempty"`
}

func (x *Cloud_Message_GroupSettingInvitePermission) Reset() {
	*x = Cloud_Message_GroupSettingInvitePermission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[159]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_GroupSettingInvitePermission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_GroupSettingInvitePermission) ProtoMessage() {}

func (x *Cloud_Message_GroupSettingInvitePermission) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[159]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_GroupSettingInvitePermission.ProtoReflect.Descriptor instead.
func (*Cloud_Message_GroupSettingInvitePermission) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 39}
}

func (x *Cloud_Message_GroupSettingInvitePermission) GetInvitePermissionType() Cloud_Message_InvitePermissionType {
	if x != nil {
		return x.InvitePermissionType
	}
	return Cloud_Message_UNKNOWN_INVITE_PERMISSION_TYPE
}

type Cloud_Message_GroupSettingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Cloud_Message_GroupSettingResponse) Reset() {
	*x = Cloud_Message_GroupSettingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[160]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_GroupSettingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_GroupSettingResponse) ProtoMessage() {}

func (x *Cloud_Message_GroupSettingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[160]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_GroupSettingResponse.ProtoReflect.Descriptor instead.
func (*Cloud_Message_GroupSettingResponse) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 40}
}

type Cloud_Message_GroupMemberSettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	// Types that are assignable to UserSetting:
	//	*Cloud_Message_GroupMemberSettingRequest_SetNickname
	//	*Cloud_Message_GroupMemberSettingRequest_SetAntiDisturbing
	UserSetting isCloud_Message_GroupMemberSettingRequest_UserSetting `protobuf_oneof:"UserSetting"`
}

func (x *Cloud_Message_GroupMemberSettingRequest) Reset() {
	*x = Cloud_Message_GroupMemberSettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[161]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_GroupMemberSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_GroupMemberSettingRequest) ProtoMessage() {}

func (x *Cloud_Message_GroupMemberSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[161]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_GroupMemberSettingRequest.ProtoReflect.Descriptor instead.
func (*Cloud_Message_GroupMemberSettingRequest) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 41}
}

func (x *Cloud_Message_GroupMemberSettingRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (m *Cloud_Message_GroupMemberSettingRequest) GetUserSetting() isCloud_Message_GroupMemberSettingRequest_UserSetting {
	if m != nil {
		return m.UserSetting
	}
	return nil
}

func (x *Cloud_Message_GroupMemberSettingRequest) GetSetNickname() *Cloud_Message_SetUserNickname {
	if x, ok := x.GetUserSetting().(*Cloud_Message_GroupMemberSettingRequest_SetNickname); ok {
		return x.SetNickname
	}
	return nil
}

func (x *Cloud_Message_GroupMemberSettingRequest) GetSetAntiDisturbing() *Cloud_Message_SetUserAntiDisturbing {
	if x, ok := x.GetUserSetting().(*Cloud_Message_GroupMemberSettingRequest_SetAntiDisturbing); ok {
		return x.SetAntiDisturbing
	}
	return nil
}

type isCloud_Message_GroupMemberSettingRequest_UserSetting interface {
	isCloud_Message_GroupMemberSettingRequest_UserSetting()
}

type Cloud_Message_GroupMemberSettingRequest_SetNickname struct {
	SetNickname *Cloud_Message_SetUserNickname `protobuf:"bytes,2,opt,name=setNickname,proto3,oneof"`
}

type Cloud_Message_GroupMemberSettingRequest_SetAntiDisturbing struct {
	SetAntiDisturbing *Cloud_Message_SetUserAntiDisturbing `protobuf:"bytes,3,opt,name=setAntiDisturbing,proto3,oneof"`
}

func (*Cloud_Message_GroupMemberSettingRequest_SetNickname) isCloud_Message_GroupMemberSettingRequest_UserSetting() {
}

func (*Cloud_Message_GroupMemberSettingRequest_SetAntiDisturbing) isCloud_Message_GroupMemberSettingRequest_UserSetting() {
}

type Cloud_Message_SetUserNickname struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nickname string `protobuf:"bytes,1,opt,name=nickname,proto3" json:"nickname,omitempty"`
}

func (x *Cloud_Message_SetUserNickname) Reset() {
	*x = Cloud_Message_SetUserNickname{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[162]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_SetUserNickname) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_SetUserNickname) ProtoMessage() {}

func (x *Cloud_Message_SetUserNickname) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[162]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_SetUserNickname.ProtoReflect.Descriptor instead.
func (*Cloud_Message_SetUserNickname) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 42}
}

func (x *Cloud_Message_SetUserNickname) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

type Cloud_Message_SetUserAntiDisturbing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AntiDisturbing bool `protobuf:"varint,1,opt,name=antiDisturbing,proto3" json:"antiDisturbing,omitempty"`
}

func (x *Cloud_Message_SetUserAntiDisturbing) Reset() {
	*x = Cloud_Message_SetUserAntiDisturbing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[163]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_SetUserAntiDisturbing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_SetUserAntiDisturbing) ProtoMessage() {}

func (x *Cloud_Message_SetUserAntiDisturbing) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[163]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_SetUserAntiDisturbing.ProtoReflect.Descriptor instead.
func (*Cloud_Message_SetUserAntiDisturbing) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 43}
}

func (x *Cloud_Message_SetUserAntiDisturbing) GetAntiDisturbing() bool {
	if x != nil {
		return x.AntiDisturbing
	}
	return false
}

type Cloud_Message_GroupMemberSettingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Cloud_Message_GroupMemberSettingResponse) Reset() {
	*x = Cloud_Message_GroupMemberSettingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[164]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_GroupMemberSettingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_GroupMemberSettingResponse) ProtoMessage() {}

func (x *Cloud_Message_GroupMemberSettingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[164]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_GroupMemberSettingResponse.ProtoReflect.Descriptor instead.
func (*Cloud_Message_GroupMemberSettingResponse) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 44}
}

type Cloud_Message_GroupMemberListGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId    string            `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	SyncCookie *Basic_SyncCookie `protobuf:"bytes,2,opt,name=syncCookie,proto3" json:"syncCookie,omitempty"`
}

func (x *Cloud_Message_GroupMemberListGetRequest) Reset() {
	*x = Cloud_Message_GroupMemberListGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[165]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_GroupMemberListGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_GroupMemberListGetRequest) ProtoMessage() {}

func (x *Cloud_Message_GroupMemberListGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[165]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_GroupMemberListGetRequest.ProtoReflect.Descriptor instead.
func (*Cloud_Message_GroupMemberListGetRequest) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 45}
}

func (x *Cloud_Message_GroupMemberListGetRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *Cloud_Message_GroupMemberListGetRequest) GetSyncCookie() *Basic_SyncCookie {
	if x != nil {
		return x.SyncCookie
	}
	return nil
}

type Cloud_Message_GroupMemberListGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Members    []*Cloud_Message_GroupMember `protobuf:"bytes,1,rep,name=members,proto3" json:"members,omitempty"`
	SyncCookie *Basic_SyncCookie            `protobuf:"bytes,2,opt,name=syncCookie,proto3" json:"syncCookie,omitempty"`
}

func (x *Cloud_Message_GroupMemberListGetResponse) Reset() {
	*x = Cloud_Message_GroupMemberListGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[166]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_GroupMemberListGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_GroupMemberListGetResponse) ProtoMessage() {}

func (x *Cloud_Message_GroupMemberListGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[166]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_GroupMemberListGetResponse.ProtoReflect.Descriptor instead.
func (*Cloud_Message_GroupMemberListGetResponse) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 46}
}

func (x *Cloud_Message_GroupMemberListGetResponse) GetMembers() []*Cloud_Message_GroupMember {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *Cloud_Message_GroupMemberListGetResponse) GetSyncCookie() *Basic_SyncCookie {
	if x != nil {
		return x.SyncCookie
	}
	return nil
}

type Cloud_Message_GroupMemberGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string      `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	User    *Basic_User `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *Cloud_Message_GroupMemberGetRequest) Reset() {
	*x = Cloud_Message_GroupMemberGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[167]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_GroupMemberGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_GroupMemberGetRequest) ProtoMessage() {}

func (x *Cloud_Message_GroupMemberGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[167]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_GroupMemberGetRequest.ProtoReflect.Descriptor instead.
func (*Cloud_Message_GroupMemberGetRequest) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 47}
}

func (x *Cloud_Message_GroupMemberGetRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *Cloud_Message_GroupMemberGetRequest) GetUser() *Basic_User {
	if x != nil {
		return x.User
	}
	return nil
}

type Cloud_Message_GroupMemberGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Member *Cloud_Message_GroupMember `protobuf:"bytes,1,opt,name=member,proto3" json:"member,omitempty"`
}

func (x *Cloud_Message_GroupMemberGetResponse) Reset() {
	*x = Cloud_Message_GroupMemberGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[168]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_GroupMemberGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_GroupMemberGetResponse) ProtoMessage() {}

func (x *Cloud_Message_GroupMemberGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[168]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_GroupMemberGetResponse.ProtoReflect.Descriptor instead.
func (*Cloud_Message_GroupMemberGetResponse) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 48}
}

func (x *Cloud_Message_GroupMemberGetResponse) GetMember() *Cloud_Message_GroupMember {
	if x != nil {
		return x.Member
	}
	return nil
}

type Cloud_Message_UserGroupListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SyncCookie *Basic_SyncCookie `protobuf:"bytes,2,opt,name=syncCookie,proto3" json:"syncCookie,omitempty"`
}

func (x *Cloud_Message_UserGroupListRequest) Reset() {
	*x = Cloud_Message_UserGroupListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[169]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_UserGroupListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_UserGroupListRequest) ProtoMessage() {}

func (x *Cloud_Message_UserGroupListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[169]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_UserGroupListRequest.ProtoReflect.Descriptor instead.
func (*Cloud_Message_UserGroupListRequest) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 49}
}

func (x *Cloud_Message_UserGroupListRequest) GetSyncCookie() *Basic_SyncCookie {
	if x != nil {
		return x.SyncCookie
	}
	return nil
}

type Cloud_Message_UserGroupListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserGroupInfo []*Cloud_Message_UserGroupInfo `protobuf:"bytes,1,rep,name=userGroupInfo,proto3" json:"userGroupInfo,omitempty"`
	SyncCookie    *Basic_SyncCookie              `protobuf:"bytes,2,opt,name=syncCookie,proto3" json:"syncCookie,omitempty"`
}

func (x *Cloud_Message_UserGroupListResponse) Reset() {
	*x = Cloud_Message_UserGroupListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[170]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_UserGroupListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_UserGroupListResponse) ProtoMessage() {}

func (x *Cloud_Message_UserGroupListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[170]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_UserGroupListResponse.ProtoReflect.Descriptor instead.
func (*Cloud_Message_UserGroupListResponse) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 50}
}

func (x *Cloud_Message_UserGroupListResponse) GetUserGroupInfo() []*Cloud_Message_UserGroupInfo {
	if x != nil {
		return x.UserGroupInfo
	}
	return nil
}

func (x *Cloud_Message_UserGroupListResponse) GetSyncCookie() *Basic_SyncCookie {
	if x != nil {
		return x.SyncCookie
	}
	return nil
}

type Cloud_Message_UserGroupRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId    string `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	UpdateTime int64  `protobuf:"varint,2,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
}

func (x *Cloud_Message_UserGroupRecord) Reset() {
	*x = Cloud_Message_UserGroupRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[171]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_UserGroupRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_UserGroupRecord) ProtoMessage() {}

func (x *Cloud_Message_UserGroupRecord) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[171]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_UserGroupRecord.ProtoReflect.Descriptor instead.
func (*Cloud_Message_UserGroupRecord) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 51}
}

func (x *Cloud_Message_UserGroupRecord) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *Cloud_Message_UserGroupRecord) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

type Cloud_Message_UserGroupGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId []string `protobuf:"bytes,1,rep,name=groupId,proto3" json:"groupId,omitempty"`
}

func (x *Cloud_Message_UserGroupGetRequest) Reset() {
	*x = Cloud_Message_UserGroupGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[172]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_UserGroupGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_UserGroupGetRequest) ProtoMessage() {}

func (x *Cloud_Message_UserGroupGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[172]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_UserGroupGetRequest.ProtoReflect.Descriptor instead.
func (*Cloud_Message_UserGroupGetRequest) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 52}
}

func (x *Cloud_Message_UserGroupGetRequest) GetGroupId() []string {
	if x != nil {
		return x.GroupId
	}
	return nil
}

type Cloud_Message_UserGroupGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserGroupInfo []*Cloud_Message_UserGroupInfo `protobuf:"bytes,1,rep,name=userGroupInfo,proto3" json:"userGroupInfo,omitempty"`
}

func (x *Cloud_Message_UserGroupGetResponse) Reset() {
	*x = Cloud_Message_UserGroupGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[173]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_UserGroupGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_UserGroupGetResponse) ProtoMessage() {}

func (x *Cloud_Message_UserGroupGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[173]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_UserGroupGetResponse.ProtoReflect.Descriptor instead.
func (*Cloud_Message_UserGroupGetResponse) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 53}
}

func (x *Cloud_Message_UserGroupGetResponse) GetUserGroupInfo() []*Cloud_Message_UserGroupInfo {
	if x != nil {
		return x.UserGroupInfo
	}
	return nil
}

type Cloud_Message_UserGroupInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupInfo   *Cloud_Message_GroupInfo   `protobuf:"bytes,1,opt,name=groupInfo,proto3" json:"groupInfo,omitempty"`
	GroupMember *Cloud_Message_GroupMember `protobuf:"bytes,2,opt,name=groupMember,proto3" json:"groupMember,omitempty"`
}

func (x *Cloud_Message_UserGroupInfo) Reset() {
	*x = Cloud_Message_UserGroupInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[174]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_UserGroupInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_UserGroupInfo) ProtoMessage() {}

func (x *Cloud_Message_UserGroupInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[174]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_UserGroupInfo.ProtoReflect.Descriptor instead.
func (*Cloud_Message_UserGroupInfo) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 54}
}

func (x *Cloud_Message_UserGroupInfo) GetGroupInfo() *Cloud_Message_GroupInfo {
	if x != nil {
		return x.GroupInfo
	}
	return nil
}

func (x *Cloud_Message_UserGroupInfo) GetGroupMember() *Cloud_Message_GroupMember {
	if x != nil {
		return x.GroupMember
	}
	return nil
}

type Cloud_Message_GroupMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User           *Basic_User                                 `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Nickname       string                                      `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	AntiDisturbing bool                                        `protobuf:"varint,3,opt,name=antiDisturbing,proto3" json:"antiDisturbing,omitempty"`
	Status         Cloud_Message_GroupMember_GroupMemberStatus `protobuf:"varint,4,opt,name=status,proto3,enum=AcFunDanmu.Im.Cloud_Message_GroupMember_GroupMemberStatus" json:"status,omitempty"`
	InviterId      int64                                       `protobuf:"varint,5,opt,name=inviterId,proto3" json:"inviterId,omitempty"`
	JoinTime       int64                                       `protobuf:"varint,6,opt,name=joinTime,proto3" json:"joinTime,omitempty"`
	CreateTime     int64                                       `protobuf:"varint,7,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime     int64                                       `protobuf:"varint,8,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	Role           Cloud_Message_GroupMember_GroupMemberRole   `protobuf:"varint,9,opt,name=role,proto3,enum=AcFunDanmu.Im.Cloud_Message_GroupMember_GroupMemberRole" json:"role,omitempty"`
	FindType       Cloud_Message_GroupFindType                 `protobuf:"varint,10,opt,name=findType,proto3,enum=AcFunDanmu.Im.Cloud_Message_GroupFindType" json:"findType,omitempty"`
}

func (x *Cloud_Message_GroupMember) Reset() {
	*x = Cloud_Message_GroupMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[175]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_GroupMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_GroupMember) ProtoMessage() {}

func (x *Cloud_Message_GroupMember) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[175]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_GroupMember.ProtoReflect.Descriptor instead.
func (*Cloud_Message_GroupMember) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 55}
}

func (x *Cloud_Message_GroupMember) GetUser() *Basic_User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *Cloud_Message_GroupMember) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *Cloud_Message_GroupMember) GetAntiDisturbing() bool {
	if x != nil {
		return x.AntiDisturbing
	}
	return false
}

func (x *Cloud_Message_GroupMember) GetStatus() Cloud_Message_GroupMember_GroupMemberStatus {
	if x != nil {
		return x.Status
	}
	return Cloud_Message_GroupMember_UNKNOWN_MEMBER_STATUS
}

func (x *Cloud_Message_GroupMember) GetInviterId() int64 {
	if x != nil {
		return x.InviterId
	}
	return 0
}

func (x *Cloud_Message_GroupMember) GetJoinTime() int64 {
	if x != nil {
		return x.JoinTime
	}
	return 0
}

func (x *Cloud_Message_GroupMember) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *Cloud_Message_GroupMember) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *Cloud_Message_GroupMember) GetRole() Cloud_Message_GroupMember_GroupMemberRole {
	if x != nil {
		return x.Role
	}
	return Cloud_Message_GroupMember_UNKNOWN_ROLE
}

func (x *Cloud_Message_GroupMember) GetFindType() Cloud_Message_GroupFindType {
	if x != nil {
		return x.FindType
	}
	return Cloud_Message_BY_UNKNOWN
}

type Cloud_Message_GroupInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicInfo            *Cloud_Message_GroupBasicInfo       `protobuf:"bytes,1,opt,name=basicInfo,proto3" json:"basicInfo,omitempty"`
	GroupMemberBriefInfo *Cloud_Message_GroupMemberBriefInfo `protobuf:"bytes,2,opt,name=groupMemberBriefInfo,proto3" json:"groupMemberBriefInfo,omitempty"`
}

func (x *Cloud_Message_GroupInfo) Reset() {
	*x = Cloud_Message_GroupInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[176]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_GroupInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_GroupInfo) ProtoMessage() {}

func (x *Cloud_Message_GroupInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[176]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_GroupInfo.ProtoReflect.Descriptor instead.
func (*Cloud_Message_GroupInfo) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 56}
}

func (x *Cloud_Message_GroupInfo) GetBasicInfo() *Cloud_Message_GroupBasicInfo {
	if x != nil {
		return x.BasicInfo
	}
	return nil
}

func (x *Cloud_Message_GroupInfo) GetGroupMemberBriefInfo() *Cloud_Message_GroupMemberBriefInfo {
	if x != nil {
		return x.GroupMemberBriefInfo
	}
	return nil
}

type Cloud_Message_GroupBasicInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId              string                               `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	GroupName            string                               `protobuf:"bytes,2,opt,name=groupName,proto3" json:"groupName,omitempty"`
	Admin                *Basic_User                          `protobuf:"bytes,3,opt,name=admin,proto3" json:"admin,omitempty"`
	GroupStatus          Cloud_Message_GroupStatus            `protobuf:"varint,4,opt,name=groupStatus,proto3,enum=AcFunDanmu.Im.Cloud_Message_GroupStatus" json:"groupStatus,omitempty"`
	Description          string                               `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	JoinNeedPermission   Cloud_Message_JoinNeedPermissionType `protobuf:"varint,6,opt,name=joinNeedPermission,proto3,enum=AcFunDanmu.Im.Cloud_Message_JoinNeedPermissionType" json:"joinNeedPermission,omitempty"`
	CreateTime           int64                                `protobuf:"varint,7,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime           int64                                `protobuf:"varint,8,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	GroupType            Cloud_Message_GroupType              `protobuf:"varint,9,opt,name=groupType,proto3,enum=AcFunDanmu.Im.Cloud_Message_GroupType" json:"groupType,omitempty"`
	ForbiddenState       Cloud_Message_ForbiddenState         `protobuf:"varint,10,opt,name=forbiddenState,proto3,enum=AcFunDanmu.Im.Cloud_Message_ForbiddenState" json:"forbiddenState,omitempty"`
	InvitePermissionType Cloud_Message_InvitePermissionType   `protobuf:"varint,11,opt,name=invitePermissionType,proto3,enum=AcFunDanmu.Im.Cloud_Message_InvitePermissionType" json:"invitePermissionType,omitempty"`
	BizDefCode           int32                                `protobuf:"varint,12,opt,name=bizDefCode,proto3" json:"bizDefCode,omitempty"`
	DefalutGroupName     string                               `protobuf:"bytes,13,opt,name=defalutGroupName,proto3" json:"defalutGroupName,omitempty"`
	Extra                string                               `protobuf:"bytes,14,opt,name=extra,proto3" json:"extra,omitempty"`
}

func (x *Cloud_Message_GroupBasicInfo) Reset() {
	*x = Cloud_Message_GroupBasicInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[177]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_GroupBasicInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_GroupBasicInfo) ProtoMessage() {}

func (x *Cloud_Message_GroupBasicInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[177]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_GroupBasicInfo.ProtoReflect.Descriptor instead.
func (*Cloud_Message_GroupBasicInfo) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 57}
}

func (x *Cloud_Message_GroupBasicInfo) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *Cloud_Message_GroupBasicInfo) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *Cloud_Message_GroupBasicInfo) GetAdmin() *Basic_User {
	if x != nil {
		return x.Admin
	}
	return nil
}

func (x *Cloud_Message_GroupBasicInfo) GetGroupStatus() Cloud_Message_GroupStatus {
	if x != nil {
		return x.GroupStatus
	}
	return Cloud_Message_UNKNOW_GROUP_STATUS
}

func (x *Cloud_Message_GroupBasicInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Cloud_Message_GroupBasicInfo) GetJoinNeedPermission() Cloud_Message_JoinNeedPermissionType {
	if x != nil {
		return x.JoinNeedPermission
	}
	return Cloud_Message_UNKNOWN_JOIN_NEED_PERMISSION_TYPE
}

func (x *Cloud_Message_GroupBasicInfo) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *Cloud_Message_GroupBasicInfo) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *Cloud_Message_GroupBasicInfo) GetGroupType() Cloud_Message_GroupType {
	if x != nil {
		return x.GroupType
	}
	return Cloud_Message_UNKNOW_GROUP_TYPE
}

func (x *Cloud_Message_GroupBasicInfo) GetForbiddenState() Cloud_Message_ForbiddenState {
	if x != nil {
		return x.ForbiddenState
	}
	return Cloud_Message_UNKNOWN_FORBIDDEN_STATE
}

func (x *Cloud_Message_GroupBasicInfo) GetInvitePermissionType() Cloud_Message_InvitePermissionType {
	if x != nil {
		return x.InvitePermissionType
	}
	return Cloud_Message_UNKNOWN_INVITE_PERMISSION_TYPE
}

func (x *Cloud_Message_GroupBasicInfo) GetBizDefCode() int32 {
	if x != nil {
		return x.BizDefCode
	}
	return 0
}

func (x *Cloud_Message_GroupBasicInfo) GetDefalutGroupName() string {
	if x != nil {
		return x.DefalutGroupName
	}
	return ""
}

func (x *Cloud_Message_GroupBasicInfo) GetExtra() string {
	if x != nil {
		return x.Extra
	}
	return ""
}

type Cloud_Message_GroupMemberBriefInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberCount    int32         `protobuf:"varint,1,opt,name=memberCount,proto3" json:"memberCount,omitempty"`
	TopMembers     []*Basic_User `protobuf:"bytes,2,rep,name=topMembers,proto3" json:"topMembers,omitempty"`
	LastUpdateTime int64         `protobuf:"varint,3,opt,name=lastUpdateTime,proto3" json:"lastUpdateTime,omitempty"`
}

func (x *Cloud_Message_GroupMemberBriefInfo) Reset() {
	*x = Cloud_Message_GroupMemberBriefInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[178]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_GroupMemberBriefInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_GroupMemberBriefInfo) ProtoMessage() {}

func (x *Cloud_Message_GroupMemberBriefInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[178]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_GroupMemberBriefInfo.ProtoReflect.Descriptor instead.
func (*Cloud_Message_GroupMemberBriefInfo) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 58}
}

func (x *Cloud_Message_GroupMemberBriefInfo) GetMemberCount() int32 {
	if x != nil {
		return x.MemberCount
	}
	return 0
}

func (x *Cloud_Message_GroupMemberBriefInfo) GetTopMembers() []*Basic_User {
	if x != nil {
		return x.TopMembers
	}
	return nil
}

func (x *Cloud_Message_GroupMemberBriefInfo) GetLastUpdateTime() int64 {
	if x != nil {
		return x.LastUpdateTime
	}
	return 0
}

type Cloud_Message_ImcPassThroughRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatTarget  *Message_ChatTarget `protobuf:"bytes,1,opt,name=chatTarget,proto3" json:"chatTarget,omitempty"`
	Content     []byte              `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	ContentType int32               `protobuf:"varint,3,opt,name=contentType,proto3" json:"contentType,omitempty"`
}

func (x *Cloud_Message_ImcPassThroughRequest) Reset() {
	*x = Cloud_Message_ImcPassThroughRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[179]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_ImcPassThroughRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_ImcPassThroughRequest) ProtoMessage() {}

func (x *Cloud_Message_ImcPassThroughRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[179]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_ImcPassThroughRequest.ProtoReflect.Descriptor instead.
func (*Cloud_Message_ImcPassThroughRequest) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 59}
}

func (x *Cloud_Message_ImcPassThroughRequest) GetChatTarget() *Message_ChatTarget {
	if x != nil {
		return x.ChatTarget
	}
	return nil
}

func (x *Cloud_Message_ImcPassThroughRequest) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *Cloud_Message_ImcPassThroughRequest) GetContentType() int32 {
	if x != nil {
		return x.ContentType
	}
	return 0
}

type Cloud_Message_ImcPassThroughResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Cloud_Message_ImcPassThroughResponse) Reset() {
	*x = Cloud_Message_ImcPassThroughResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[180]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_ImcPassThroughResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_ImcPassThroughResponse) ProtoMessage() {}

func (x *Cloud_Message_ImcPassThroughResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[180]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_ImcPassThroughResponse.ProtoReflect.Descriptor instead.
func (*Cloud_Message_ImcPassThroughResponse) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 60}
}

type Cloud_Message_ImcPassThroughPush struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatTarget  *Message_ChatTarget `protobuf:"bytes,1,opt,name=chatTarget,proto3" json:"chatTarget,omitempty"`
	FromUser    *Basic_User         `protobuf:"bytes,2,opt,name=fromUser,proto3" json:"fromUser,omitempty"`
	Content     []byte              `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	ContentType int32               `protobuf:"varint,4,opt,name=contentType,proto3" json:"contentType,omitempty"`
}

func (x *Cloud_Message_ImcPassThroughPush) Reset() {
	*x = Cloud_Message_ImcPassThroughPush{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[181]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_ImcPassThroughPush) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_ImcPassThroughPush) ProtoMessage() {}

func (x *Cloud_Message_ImcPassThroughPush) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[181]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_ImcPassThroughPush.ProtoReflect.Descriptor instead.
func (*Cloud_Message_ImcPassThroughPush) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 61}
}

func (x *Cloud_Message_ImcPassThroughPush) GetChatTarget() *Message_ChatTarget {
	if x != nil {
		return x.ChatTarget
	}
	return nil
}

func (x *Cloud_Message_ImcPassThroughPush) GetFromUser() *Basic_User {
	if x != nil {
		return x.FromUser
	}
	return nil
}

func (x *Cloud_Message_ImcPassThroughPush) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *Cloud_Message_ImcPassThroughPush) GetContentType() int32 {
	if x != nil {
		return x.ContentType
	}
	return 0
}

type Cloud_Message_InputtingContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisplayInterval int32 `protobuf:"varint,1,opt,name=displayInterval,proto3" json:"displayInterval,omitempty"`
}

func (x *Cloud_Message_InputtingContent) Reset() {
	*x = Cloud_Message_InputtingContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[182]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_InputtingContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_InputtingContent) ProtoMessage() {}

func (x *Cloud_Message_InputtingContent) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[182]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_InputtingContent.ProtoReflect.Descriptor instead.
func (*Cloud_Message_InputtingContent) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 62}
}

func (x *Cloud_Message_InputtingContent) GetDisplayInterval() int32 {
	if x != nil {
		return x.DisplayInterval
	}
	return 0
}

type Cloud_Message_Emoticon_Code struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language string   `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
	Code     []string `protobuf:"bytes,2,rep,name=code,proto3" json:"code,omitempty"`
}

func (x *Cloud_Message_Emoticon_Code) Reset() {
	*x = Cloud_Message_Emoticon_Code{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[183]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_Emoticon_Code) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_Emoticon_Code) ProtoMessage() {}

func (x *Cloud_Message_Emoticon_Code) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[183]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_Emoticon_Code.ProtoReflect.Descriptor instead.
func (*Cloud_Message_Emoticon_Code) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 8, 0}
}

func (x *Cloud_Message_Emoticon_Code) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *Cloud_Message_Emoticon_Code) GetCode() []string {
	if x != nil {
		return x.Code
	}
	return nil
}

type Cloud_Message_Reference_ReferenceMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContentType int32  `protobuf:"varint,1,opt,name=contentType,proto3" json:"contentType,omitempty"`
	Content     []byte `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *Cloud_Message_Reference_ReferenceMessage) Reset() {
	*x = Cloud_Message_Reference_ReferenceMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Im_proto_msgTypes[184]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cloud_Message_Reference_ReferenceMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cloud_Message_Reference_ReferenceMessage) ProtoMessage() {}

func (x *Cloud_Message_Reference_ReferenceMessage) ProtoReflect() protoreflect.Message {
	mi := &file_Im_proto_msgTypes[184]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cloud_Message_Reference_ReferenceMessage.ProtoReflect.Descriptor instead.
func (*Cloud_Message_Reference_ReferenceMessage) Descriptor() ([]byte, []int) {
	return file_Im_proto_rawDescGZIP(), []int{2, 4, 10, 0}
}

func (x *Cloud_Message_Reference_ReferenceMessage) GetContentType() int32 {
	if x != nil {
		return x.ContentType
	}
	return 0
}

func (x *Cloud_Message_Reference_ReferenceMessage) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

var File_Im_proto protoreflect.FileDescriptor

var file_Im_proto_rawDesc = []byte{
	0x0a, 0x08, 0x49, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x41, 0x63, 0x46, 0x75,
	0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x22, 0xd4, 0x39, 0x0a, 0x05, 0x42, 0x61,
	0x73, 0x69, 0x63, 0x1a, 0xf5, 0x05, 0x0a, 0x0c, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x6c, 0x61,
	0x67, 0x73, 0x12, 0x52, 0x0a, 0x0c, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e,
	0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x45, 0x6e, 0x63, 0x6f,
	0x64, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69,
	0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65,
	0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x65, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x11, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x4c, 0x65, 0x6e, 0x12, 0x58, 0x0a, 0x0e, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x41,
	0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x42, 0x61, 0x73,
	0x69, 0x63, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e,
	0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0e,
	0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x3c,
	0x0a, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49,
	0x6d, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x65, 0x71, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x65, 0x71,
	0x49, 0x64, 0x12, 0x45, 0x0a, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x0b,
	0x20, 0x03, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d,
	0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52,
	0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x70, 0x6e,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x70, 0x6e, 0x22, 0x3f, 0x0a, 0x05, 0x46,
	0x6c, 0x61, 0x67, 0x73, 0x12, 0x10, 0x0a, 0x0c, 0x6b, 0x44, 0x69, 0x72, 0x55, 0x70, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x6b, 0x44, 0x69, 0x72, 0x44, 0x6f,
	0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x6b, 0x44,
	0x69, 0x72, 0x4d, 0x61, 0x73, 0x6b, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x22, 0x33, 0x0a, 0x0c,
	0x45, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d,
	0x6b, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12,
	0x10, 0x0a, 0x0c, 0x6b, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x4c, 0x7a, 0x34, 0x10,
	0x01, 0x22, 0x5d, 0x0a, 0x0e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x6f, 0x64, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x6b, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x6b, 0x45, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x6b, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x10, 0x02,
	0x22, 0x29, 0x0a, 0x07, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x6b,
	0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x6b, 0x43, 0x6f,
	0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x7a, 0x34, 0x10, 0x01, 0x1a, 0x2e, 0x0a, 0x04, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x1a, 0x5d, 0x0a, 0x0c, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x41, 0x63, 0x46, 0x75,
	0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x1a, 0x98, 0x04, 0x0a, 0x0f, 0x55,
	0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x65, 0x71, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x65, 0x71, 0x49, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x72, 0x65, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x72, 0x65, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x45, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61,
	0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x42, 0x0a, 0x0b, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x41, 0x63, 0x46,
	0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63,
	0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x51, 0x0a, 0x10, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75,
	0x2e, 0x49, 0x6d, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x10, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x75, 0x62, 0x42, 0x69, 0x7a, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x75,
	0x62, 0x42, 0x69, 0x7a, 0x12, 0x45, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x41, 0x63, 0x46,
	0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63,
	0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x66,
	0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x70, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x70, 0x6e, 0x12, 0x26, 0x0a,
	0x0e, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x1a, 0xd5, 0x01, 0x0a, 0x11, 0x44, 0x6f, 0x77, 0x6e, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x65, 0x71, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x65, 0x71, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x75, 0x62, 0x42, 0x69, 0x7a, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x75, 0x62, 0x42, 0x69, 0x7a, 0x1a, 0xb3, 0x01,
	0x0a, 0x0b, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x45, 0x0a,
	0x08, 0x70, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x29, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e,
	0x42, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x70, 0x69, 0x6e, 0x67,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x6f, 0x75, 0x6e,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x6f, 0x75,
	0x6e, 0x64, 0x22, 0x3f, 0x0a, 0x08, 0x50, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c,
	0x0a, 0x08, 0x6b, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e,
	0x6b, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x10, 0x01,
	0x12, 0x11, 0x0a, 0x0d, 0x6b, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x10, 0x02, 0x1a, 0x98, 0x01, 0x0a, 0x0c, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0f, 0x52, 0x0f, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x07,
	0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x49, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x07, 0x52, 0x0a,
	0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x49, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0c, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x1a, 0xf6,
	0x06, 0x0a, 0x0f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x36, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75,
	0x2e, 0x49, 0x6d, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x07, 0x61, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3f, 0x0a, 0x0a, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x42,
	0x61, 0x73, 0x69, 0x63, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x36, 0x0a, 0x07, 0x65,
	0x6e, 0x76, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x41,
	0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x42, 0x61, 0x73,
	0x69, 0x63, 0x2e, 0x45, 0x6e, 0x76, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x65, 0x6e, 0x76, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x5b, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x41, 0x63,
	0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x42, 0x61, 0x73, 0x69,
	0x63, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x0e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x5b, 0x0a, 0x0f, 0x61, 0x70, 0x70, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x41, 0x63, 0x46, 0x75,
	0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x2e,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0f, 0x61, 0x70,
	0x70, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x0a,
	0x0f, 0x61, 0x70, 0x70, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x51, 0x0a, 0x10, 0x70, 0x75, 0x73, 0x68, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49,
	0x6d, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x10, 0x70, 0x75, 0x73, 0x68, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x59, 0x0a, 0x14, 0x70, 0x75,
	0x73, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e,
	0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x50,
	0x75, 0x73, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x14, 0x70, 0x75, 0x73, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x6b, 0x65, 0x65, 0x70, 0x61, 0x6c, 0x69,
	0x76, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x53, 0x65, 0x63, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x14, 0x6b, 0x65, 0x65, 0x70, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x53, 0x65, 0x63, 0x12, 0x45, 0x0a, 0x0c, 0x7a, 0x74, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e,
	0x42, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x5a, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0c, 0x7a, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x3b, 0x0a, 0x0e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x4f,
	0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x6b, 0x50, 0x72, 0x65,
	0x73, 0x65, 0x6e, 0x63, 0x65, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x10, 0x01, 0x22, 0x48, 0x0a,
	0x0c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0c, 0x0a,
	0x08, 0x6b, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x6b,
	0x41, 0x70, 0x70, 0x49, 0x6e, 0x46, 0x6f, 0x72, 0x65, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x10,
	0x01, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x41, 0x70, 0x70, 0x69, 0x6e, 0x42, 0x61, 0x63, 0x6b, 0x67,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x10, 0x02, 0x1a, 0xc4, 0x02, 0x0a, 0x10, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x12,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e,
	0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x12, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x12,
	0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x3c, 0x0a, 0x09, 0x73, 0x64, 0x6b, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e,
	0x49, 0x6d, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x53, 0x64, 0x6b, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x09, 0x73, 0x64, 0x6b, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5f, 0x0a,
	0x16, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x43, 0x4f, 0x6e,
	0x66, 0x69, 0x67, 0x49, 0x70, 0x76, 0x36, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x42, 0x61,
	0x73, 0x69, 0x63, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x16, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x43, 0x4f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x70, 0x76, 0x36, 0x1a, 0x96,
	0x02, 0x0a, 0x12, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x40, 0x0a, 0x0a, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x6c,
	0x41, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x41, 0x63, 0x46, 0x75,
	0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x2e,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0a, 0x6f, 0x70, 0x74,
	0x69, 0x6d, 0x61, 0x6c, 0x41, 0x70, 0x73, 0x12, 0x3e, 0x0a, 0x09, 0x62, 0x61, 0x63, 0x6b, 0x75,
	0x70, 0x41, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x41, 0x63, 0x46,
	0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63,
	0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x09, 0x62, 0x61,
	0x63, 0x6b, 0x75, 0x70, 0x41, 0x70, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x0e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x12,
	0x56, 0x0a, 0x15, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x65, 0x4c, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x42,
	0x61, 0x73, 0x69, 0x63, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x52, 0x15, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x65, 0x4c, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x41, 0x70, 0x1a, 0x13, 0x0a, 0x11, 0x55, 0x6e, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x0a, 0x12,
	0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x1a, 0xae, 0x03, 0x0a, 0x10, 0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5b, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x73, 0x65,
	0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x33, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e,
	0x42, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x0e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x5b, 0x0a, 0x0f, 0x61, 0x70, 0x70, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e,
	0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x42, 0x61,
	0x73, 0x69, 0x63, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x0f, 0x61, 0x70, 0x70, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x51, 0x0a, 0x10, 0x70, 0x75, 0x73, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x41, 0x63,
	0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x42, 0x61, 0x73, 0x69,
	0x63, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x10, 0x70, 0x75, 0x73, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x59, 0x0a, 0x14, 0x70, 0x75, 0x73, 0x68, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e,
	0x49, 0x6d, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x14, 0x70, 0x75, 0x73, 0x68, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x32, 0x0a, 0x14, 0x6b, 0x65, 0x65, 0x70, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x53, 0x65, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x6b,
	0x65, 0x65, 0x70, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x53, 0x65, 0x63, 0x1a, 0xed, 0x01, 0x0a, 0x11, 0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x12, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e,
	0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x12,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x73, 0x65, 0x63,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x73,
	0x65, 0x63, 0x12, 0x5f, 0x0a, 0x16, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x70, 0x76, 0x36, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e,
	0x49, 0x6d, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x16, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49,
	0x70, 0x76, 0x36, 0x1a, 0xe3, 0x01, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x12, 0x4e, 0x0a, 0x0b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e,
	0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x70, 0x56, 0x34, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x07, 0x52, 0x04, 0x69, 0x70, 0x56, 0x34, 0x12, 0x12, 0x0a, 0x04, 0x69,
	0x70, 0x56, 0x36, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x69, 0x70, 0x56, 0x36, 0x12,
	0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x30, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x6b, 0x49, 0x50, 0x56, 0x34, 0x10,
	0x00, 0x12, 0x09, 0x0a, 0x05, 0x6b, 0x49, 0x50, 0x56, 0x36, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07,
	0x6b, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x10, 0x02, 0x1a, 0x97, 0x01, 0x0a, 0x09, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x46, 0x0a, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x41, 0x63, 0x46,
	0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63,
	0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x2c, 0x0a, 0x09, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x6b, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x10, 0x00,
	0x12, 0x11, 0x0a, 0x0d, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x10, 0x01, 0x1a, 0xe0, 0x02, 0x0a, 0x10, 0x50, 0x75, 0x73, 0x68, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x4a, 0x0a, 0x08, 0x70, 0x75, 0x73, 0x68,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x41, 0x63, 0x46,
	0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63,
	0x2e, 0x50, 0x75, 0x73, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x70, 0x75, 0x73, 0x68,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x73,
	0x50, 0x61, 0x73, 0x73, 0x54, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0d, 0x69, 0x73, 0x50, 0x61, 0x73, 0x73, 0x54, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68,
	0x22, 0xc3, 0x01, 0x0a, 0x08, 0x50, 0x75, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a,
	0x10, 0x6b, 0x50, 0x75, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x6b, 0x50, 0x75, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65,
	0x41, 0x50, 0x4e, 0x53, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x6b, 0x50, 0x75, 0x73, 0x68, 0x54,
	0x79, 0x70, 0x65, 0x58, 0x6d, 0x50, 0x75, 0x73, 0x68, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x6b,
	0x50, 0x75, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x4a, 0x67, 0x50, 0x75, 0x73, 0x68, 0x10, 0x03,
	0x12, 0x13, 0x0a, 0x0f, 0x6b, 0x50, 0x75, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x47, 0x74, 0x50,
	0x55, 0x73, 0x68, 0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x6b, 0x50, 0x75, 0x73, 0x68, 0x54, 0x79,
	0x70, 0x65, 0x4f, 0x70, 0x50, 0x75, 0x73, 0x68, 0x10, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x6b, 0x50,
	0x75, 0x73, 0x68, 0x54, 0x59, 0x70, 0x65, 0x56, 0x76, 0x50, 0x75, 0x73, 0x68, 0x10, 0x06, 0x12,
	0x13, 0x0a, 0x0f, 0x6b, 0x50, 0x75, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x48, 0x77, 0x50, 0x75,
	0x73, 0x68, 0x10, 0x07, 0x12, 0x10, 0x0a, 0x0c, 0x6b, 0x50, 0x75, 0x73, 0x68, 0x54, 0x59, 0x70,
	0x65, 0x46, 0x63, 0x6d, 0x10, 0x08, 0x1a, 0x41, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x11, 0x52,
	0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x1a, 0xa9, 0x01, 0x0a, 0x07, 0x41, 0x70,
	0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x1e, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12,
	0x1e, 0x0a, 0x0a, 0x73, 0x64, 0x6b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x64, 0x6b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x24, 0x0a, 0x0d, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0xcf, 0x03, 0x0a, 0x0a, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x50, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x41, 0x63, 0x46,
	0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63,
	0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x73, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x73, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6d, 0x65, 0x69, 0x4d, 0x64,
	0x35, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x69, 0x6d, 0x65, 0x69, 0x4d, 0x64, 0x35,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x6f, 0x66, 0x74, 0x44, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x6f, 0x66, 0x74, 0x44, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x77, 0x61, 0x69, 0x44, 0x69,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x77, 0x61, 0x69, 0x44, 0x69, 0x64,
	0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x80, 0x01, 0x0a, 0x0c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x6b, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x6b, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x10,
	0x01, 0x12, 0x08, 0x0a, 0x04, 0x6b, 0x69, 0x4f, 0x53, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x6b,
	0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x57, 0x45, 0x43,
	0x48, 0x41, 0x54, 0x5f, 0x41, 0x4e, 0x44, 0x52, 0x4f, 0x49, 0x44, 0x10, 0x04, 0x12, 0x0e, 0x0a,
	0x0a, 0x57, 0x45, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x49, 0x4f, 0x53, 0x10, 0x05, 0x12, 0x06, 0x0a,
	0x02, 0x48, 0x35, 0x10, 0x06, 0x12, 0x10, 0x0a, 0x0c, 0x6b, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x4e, 0x75, 0x6d, 0x10, 0x07, 0x1a, 0xa6, 0x01, 0x0a, 0x07, 0x45, 0x6e, 0x76, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x4a, 0x0a, 0x0b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e,
	0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x45,
	0x6e, 0x76, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x35, 0x0a, 0x0b, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x6b, 0x49, 0x6e, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x6b, 0x57, 0x49, 0x46, 0x49, 0x10,
	0x01, 0x12, 0x0d, 0x0a, 0x09, 0x6b, 0x43, 0x65, 0x6c, 0x6c, 0x75, 0x6c, 0x61, 0x72, 0x10, 0x02,
	0x1a, 0xd1, 0x03, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x61, 0x73, 0x69,
	0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4c, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x41, 0x63, 0x46, 0x75,
	0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x2e,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x61,
	0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x61, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x36, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61,
	0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x41, 0x70, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x61, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3f, 0x0a,
	0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49,
	0x6d, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x36,
	0x0a, 0x07, 0x65, 0x6e, 0x76, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e,
	0x42, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x45, 0x6e, 0x76, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x65,
	0x6e, 0x76, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x50, 0x6f, 0x72, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x70, 0x66, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x70, 0x66, 0x1a, 0x2c, 0x0a, 0x0a, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6f, 0x6b,
	0x69, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x79, 0x6e, 0x63, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x79, 0x6e, 0x63, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x1a, 0x51, 0x0a, 0x0f, 0x49, 0x31, 0x38, 0x6e, 0x43, 0x6f, 0x70, 0x79, 0x57, 0x72,
	0x69, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x4b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x4b, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x1a, 0xd7, 0x01, 0x0a, 0x09, 0x53, 0x64, 0x6b, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x15, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x15, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x12, 0x42, 0x0a, 0x1c, 0x6c, 0x7a, 0x34, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x1c, 0x6c, 0x7a, 0x34, 0x43, 0x6f, 0x6d, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x6e, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f,
	0x6e, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x1a,
	0xdc, 0x02, 0x0a, 0x0c, 0x5a, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x70, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x70, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x70, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x70, 0x66, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x75, 0x62, 0x42, 0x69, 0x7a, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x75, 0x62, 0x42, 0x69, 0x7a, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x64, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x69, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x70, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x70, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x70, 0x70, 0x56, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70,
	0x70, 0x56, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x76, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x6e, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6c, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f,
	0x6e, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x6f, 0x6e, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x6e, 0x65, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6e, 0x65, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x73, 0x79, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73,
	0x79, 0x73, 0x12, 0x0c, 0x0a, 0x01, 0x63, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x63,
	0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x1a, 0x32,
	0x0a, 0x0c, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f,
	0x72, 0x74, 0x22, 0xcb, 0x02, 0x0a, 0x0d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x50, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x12, 0x19, 0x0a, 0x15, 0x6b, 0x53, 0x68, 0x61, 0x72, 0x65, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x10, 0x00, 0x12,
	0x18, 0x0a, 0x14, 0x6b, 0x53, 0x68, 0x61, 0x72, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x10, 0x01, 0x12, 0x1f, 0x0a, 0x1b, 0x6b, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x57, 0x65, 0x63, 0x68, 0x61,
	0x74, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x51, 0x51, 0x10, 0x03,
	0x12, 0x17, 0x0a, 0x13, 0x6b, 0x53, 0x68, 0x61, 0x72, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x51, 0x7a, 0x6f, 0x6e, 0x65, 0x10, 0x04, 0x12, 0x17, 0x0a, 0x13, 0x6b, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x57, 0x65, 0x69, 0x62, 0x6f,
	0x10, 0x05, 0x12, 0x1a, 0x0a, 0x16, 0x6b, 0x53, 0x68, 0x61, 0x72, 0x65, 0x50, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x4b, 0x75, 0x61, 0x69, 0x73, 0x68, 0x6f, 0x75, 0x10, 0x06, 0x12, 0x1a,
	0x0a, 0x16, 0x6b, 0x53, 0x68, 0x61, 0x72, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x10, 0x07, 0x12, 0x19, 0x0a, 0x15, 0x6b, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x77, 0x69, 0x74,
	0x74, 0x65, 0x72, 0x10, 0x08, 0x12, 0x18, 0x0a, 0x14, 0x6b, 0x53, 0x68, 0x61, 0x72, 0x65, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x10, 0x09, 0x12,
	0x17, 0x0a, 0x13, 0x6b, 0x53, 0x68, 0x61, 0x72, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x4b, 0x61, 0x6b, 0x61, 0x6f, 0x10, 0x0a, 0x12, 0x16, 0x0a, 0x12, 0x6b, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5a, 0x61, 0x6c, 0x6f, 0x10, 0x0b,
	0x22, 0xd1, 0x45, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0xac, 0x07, 0x0a,
	0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x65, 0x71, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x65, 0x71, 0x49, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x71, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x71, 0x49, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4d, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x4d, 0x73, 0x12, 0x35, 0x0a, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d,
	0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x08, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x06, 0x74, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e,
	0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x06, 0x74, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75,
	0x63, 0x6b, 0x75, 0x70, 0x54, 0x69, 0x70, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x62, 0x75, 0x63, 0x6b, 0x75, 0x70, 0x54, 0x69, 0x70, 0x73, 0x12, 0x37, 0x0a, 0x09, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x42, 0x61,
	0x73, 0x69, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x09, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x6e, 0x6f, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x6e,
	0x6f, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x12,
	0x28, 0x0a, 0x0f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x12, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x6e, 0x6f, 0x74, 0x41, 0x75,
	0x74, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x6e, 0x6f, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x75,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x75, 0x73, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x74, 0x72, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74,
	0x72, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x45, 0x0a, 0x10, 0x65, 0x78, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x73, 0x18, 0x13, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75,
	0x2e, 0x49, 0x6d, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x10,
	0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x72, 0x6b, 0x44, 0x65, 0x6c, 0x74, 0x65, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x6d, 0x61, 0x72, 0x6b, 0x44, 0x65, 0x6c, 0x74, 0x65, 0x12, 0x3b,
	0x0a, 0x08, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65,
	0x72, 0x52, 0x08, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72,
	0x61, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x1a, 0x81, 0x02, 0x0a, 0x13,
	0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x71,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x53, 0x65, 0x71, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x10, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x65, 0x71, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x73, 0x65, 0x71, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x12, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x1a,
	0xc7, 0x01, 0x0a, 0x0e, 0x50, 0x75, 0x6c, 0x6c, 0x4f, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x31, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e,
	0x49, 0x6d, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x06, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x69, 0x6e, 0x53, 0x65, 0x71, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x69, 0x6e, 0x53, 0x65, 0x71, 0x12, 0x16, 0x0a,
	0x06, 0x6d, 0x61, 0x78, 0x53, 0x65, 0x71, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d,
	0x61, 0x78, 0x53, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x74, 0x72, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74,
	0x72, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x1a, 0x6d, 0x0a, 0x0f, 0x50, 0x75, 0x6c,
	0x6c, 0x4f, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x08,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0xaf, 0x01, 0x0a, 0x0e, 0x50, 0x75, 0x6c,
	0x6c, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x06, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x41, 0x63,
	0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x42, 0x61, 0x73, 0x69,
	0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x6d, 0x69, 0x6e, 0x53, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x6d, 0x69, 0x6e, 0x53, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x74, 0x72, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73,
	0x74, 0x72, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x1a, 0x4d, 0x0a, 0x0f, 0x50, 0x75,
	0x6c, 0x6c, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a,
	0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x1a, 0x9f, 0x01, 0x0a, 0x12, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x3f, 0x0a, 0x0a, 0x73, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d,
	0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x43,
	0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x52, 0x0a, 0x73, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6f, 0x6b, 0x69,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49,
	0x64, 0x12, 0x28, 0x0a, 0x0f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x8e, 0x06, 0x0a, 0x0b,
	0x43, 0x68, 0x61, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x06, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x41, 0x63,
	0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x42, 0x61, 0x73, 0x69,
	0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x6d, 0x61, 0x78, 0x53, 0x65, 0x71, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x6d, 0x61, 0x78, 0x53, 0x65, 0x71, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65,
	0x61, 0x64, 0x53, 0x65, 0x71, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72,
	0x65, 0x61, 0x64, 0x53, 0x65, 0x71, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x75, 0x6e, 0x72, 0x65,
	0x61, 0x64, 0x4d, 0x73, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0e, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x73, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x44, 0x0a, 0x0d, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44,
	0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0d, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4d, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x74, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25,
	0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x63, 0x68, 0x61, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63,
	0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x10, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x6a, 0x75, 0x6d, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6a, 0x75, 0x6d,
	0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x41, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x41, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x65, 0x66, 0x66, 0x65, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d,
	0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x20, 0x0a,
	0x0b, 0x73, 0x74, 0x72, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12,
	0x41, 0x0a, 0x0a, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x42, 0x6f, 0x64, 0x79, 0x18, 0x14, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75,
	0x2e, 0x49, 0x6d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x69,
	0x6e, 0x64, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x0a, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x42, 0x6f,
	0x64, 0x79, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x61, 0x64,
	0x53, 0x65, 0x71, 0x49, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x52, 0x65, 0x61, 0x64, 0x53, 0x65, 0x71, 0x49, 0x64, 0x1a, 0x6d, 0x0a, 0x08,
	0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x12, 0x41, 0x0a, 0x0a, 0x72, 0x65, 0x6d, 0x69,
	0x6e, 0x64, 0x42, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x41,
	0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x42, 0x6f, 0x64, 0x79, 0x52,
	0x0a, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x42, 0x6f, 0x64, 0x79, 0x1a, 0xd5, 0x02, 0x0a, 0x0a,
	0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x4c, 0x0a, 0x0a, 0x72, 0x65,
	0x6d, 0x69, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c,
	0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x42, 0x6f, 0x64,
	0x79, 0x2e, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x72, 0x65,
	0x6d, 0x69, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x65, 0x71, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x65, 0x71, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x22, 0x73,
	0x0a, 0x0a, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x54, 0x5f,
	0x41, 0x4c, 0x4c, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x54, 0x5f, 0x55, 0x53, 0x45, 0x52,
	0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x42, 0x55, 0x4c, 0x4c,
	0x45, 0x54, 0x49, 0x4e, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x52, 0x45, 0x43, 0x45, 0x49, 0x50,
	0x54, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x10, 0x04, 0x12, 0x16, 0x0a, 0x12, 0x47,
	0x52, 0x4f, 0x55, 0x50, 0x5f, 0x4a, 0x4f, 0x49, 0x4e, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53,
	0x54, 0x10, 0x05, 0x1a, 0x6f, 0x0a, 0x0a, 0x43, 0x68, 0x61, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x45, 0x0a,
	0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x25, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49,
	0x6d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x1a, 0xce, 0x02, 0x0a, 0x13, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0a,
	0x73, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d,
	0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6f, 0x6b, 0x69,
	0x65, 0x52, 0x0a, 0x73, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x12, 0x3e, 0x0a,
	0x08, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x08, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x22, 0x0a,
	0x0c, 0x6e, 0x6f, 0x74, 0x46, 0x75, 0x6c, 0x6c, 0x46, 0x65, 0x74, 0x63, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0c, 0x6e, 0x6f, 0x74, 0x46, 0x75, 0x6c, 0x6c, 0x46, 0x65, 0x74, 0x63,
	0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x63, 0x6c, 0x65, 0x61, 0x72,
	0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x10, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x66, 0x0a, 0x16, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x50, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x1a, 0x73, 0x0a,
	0x17, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x61, 0x73, 0x4d,
	0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f,
	0x72, 0x65, 0x12, 0x3e, 0x0a, 0x08, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d,
	0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x68, 0x61,
	0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x1a, 0xf5, 0x01, 0x0a, 0x14, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x4d, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x74, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x25, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x63, 0x68, 0x61, 0x74, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x74, 0x72, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x72,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x6e, 0x6f, 0x74, 0x43,
	0x6c, 0x65, 0x61, 0x6e, 0x41, 0x6c, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x6e, 0x6f, 0x74, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x41,
	0x6c, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x1a, 0x17, 0x0a, 0x15, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x1a, 0x58, 0x0a, 0x13, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6c,
	0x65, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x0a, 0x63, 0x68,
	0x61, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x1a, 0x16, 0x0a,
	0x14, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0xb9, 0x01, 0x0a, 0x14, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x4d, 0x0a, 0x0e, 0x63, 0x68,
	0x61, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x25, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e,
	0x49, 0x6d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x63, 0x68, 0x61, 0x74, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x65, 0x71,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x05, 0x73, 0x65, 0x71, 0x49, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x73, 0x74, 0x72, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49,
	0x64, 0x1a, 0x17, 0x0a, 0x15, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x6f, 0x0a, 0x14, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x41, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61,
	0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43,
	0x68, 0x61, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x65, 0x71, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x05, 0x73, 0x65, 0x71, 0x49, 0x64, 0x1a, 0x17, 0x0a, 0x15, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x58, 0x0a, 0x13, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43,
	0x6c, 0x65, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x0a, 0x63,
	0x68, 0x61, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x1a, 0x16,
	0x0a, 0x14, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x6a, 0x0a, 0x0b, 0x52, 0x65, 0x61, 0x64, 0x53, 0x65,
	0x71, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x41, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x41, 0x63, 0x46, 0x75,
	0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x0a, 0x63, 0x68,
	0x61, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x61, 0x64,
	0x53, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x65, 0x61, 0x64, 0x53,
	0x65, 0x71, 0x1a, 0x5a, 0x0a, 0x15, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61,
	0x64, 0x53, 0x65, 0x71, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x0a, 0x63,
	0x68, 0x61, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x1a, 0x5e,
	0x0a, 0x16, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x64, 0x53, 0x65, 0x71,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x64,
	0x53, 0x65, 0x71, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x53, 0x65, 0x71, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0b, 0x72, 0x65, 0x61, 0x64, 0x53, 0x65, 0x71, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0xb8,
	0x01, 0x0a, 0x0f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x64, 0x50, 0x75,
	0x73, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x72, 0x65, 0x61, 0x64, 0x53, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x72, 0x65, 0x61, 0x64, 0x53, 0x65, 0x71, 0x12, 0x4d, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x74,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x25, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x63, 0x68, 0x61, 0x74, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x74, 0x72, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74,
	0x72, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x1a, 0x17, 0x0a, 0x15, 0x41, 0x6c, 0x6c,
	0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x40, 0x0a, 0x16, 0x41, 0x6c, 0x6c, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x0e,
	0x61, 0x6c, 0x6c, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x61, 0x6c, 0x6c, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x45, 0x0a, 0x15, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x61, 0x64, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a,
	0x11, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x1a, 0x44, 0x0a, 0x16, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x64, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x61, 0x64, 0x41, 0x6c, 0x6c,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x10, 0x72, 0x65, 0x61, 0x64, 0x41, 0x6c, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x1a, 0x7f, 0x0a, 0x18, 0x53, 0x65, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x69, 0x63, 0x6b,
	0x79, 0x4f, 0x6e, 0x54, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a,
	0x0a, 0x63, 0x68, 0x61, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49,
	0x6d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x79, 0x4f, 0x6e, 0x54, 0x6f, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x79, 0x4f, 0x6e, 0x54,
	0x6f, 0x70, 0x1a, 0x5a, 0x0a, 0x1a, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x69,
	0x63, 0x6b, 0x79, 0x4f, 0x6e, 0x54, 0x6f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3c, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49,
	0x6d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x82,
	0x01, 0x0a, 0x0a, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x77, 0x12, 0x3c, 0x0a,
	0x03, 0x72, 0x61, 0x77, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x41, 0x63, 0x46,
	0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x77, 0x2e, 0x52, 0x61,
	0x77, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x72, 0x61, 0x77, 0x1a, 0x36, 0x0a, 0x08, 0x52,
	0x61, 0x77, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x1a, 0x6f, 0x0a, 0x14, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x63, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x0a, 0x63,
	0x68, 0x61, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x65, 0x71, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73,
	0x65, 0x71, 0x49, 0x64, 0x1a, 0x17, 0x0a, 0x15, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x63, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0xb5, 0x01,
	0x0a, 0x15, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x59, 0x0a, 0x12, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75,
	0x2e, 0x49, 0x6d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x12,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x41, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61,
	0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43,
	0x68, 0x61, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x1a, 0x18, 0x0a, 0x16, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a,
	0x2e, 0x0a, 0x12, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x61, 0x64, 0x53, 0x65, 0x71,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x65, 0x61, 0x64, 0x53, 0x65, 0x71, 0x1a,
	0x78, 0x0a, 0x1d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70,
	0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x65, 0x71, 0x49, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x05, 0x73, 0x65, 0x71, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x41, 0x63, 0x46,
	0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x0a, 0x63,
	0x68, 0x61, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x1a, 0x65, 0x0a, 0x1e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x41, 0x63,
	0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x70, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x1a, 0x8c, 0x01, 0x0a, 0x14, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x70, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x61,
	0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x72, 0x65,
	0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x6e, 0x72, 0x65, 0x61,
	0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x75, 0x6e,
	0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x65, 0x71,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x65, 0x71, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x1a,
	0x79, 0x0a, 0x1e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x65, 0x71, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x73, 0x65, 0x71, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x41, 0x63,
	0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x0a,
	0x63, 0x68, 0x61, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x1a, 0x93, 0x01, 0x0a, 0x1f, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35,
	0x0a, 0x08, 0x72, 0x65, 0x61, 0x64, 0x55, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d,
	0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x08, 0x72, 0x65, 0x61,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x41, 0x63, 0x46, 0x75,
	0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x0a, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x1a, 0x53, 0x0a, 0x17, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x41,
	0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x62, 0x0a, 0x18, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x46, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75,
	0x2e, 0x49, 0x6d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x65, 0x6e, 0x64,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x93, 0x01, 0x0a, 0x0f, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x77,
	0x69, 0x64, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74,
	0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x49, 0x6e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x49, 0x6e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x1a,
	0x93, 0x01, 0x0a, 0x0f, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x24, 0x0a, 0x0d, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x49, 0x6e, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x49, 0x6e,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x1a, 0x9d, 0x01, 0x0a, 0x0d, 0x47, 0x69, 0x66, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x61, 0x55, 0x72, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x61, 0x55, 0x72,
	0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x1a, 0xc2, 0x01, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x52, 0x0a, 0x0f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x52, 0x0a, 0x0f, 0x61, 0x75, 0x64, 0x69,
	0x6f, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49,
	0x6d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x41,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x61, 0x75, 0x64,
	0x69, 0x6f, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x0c, 0x0a, 0x0a,
	0x61, 0x74, 0x74, 0x61, 0x63, 0x6d, 0x6e, 0x65, 0x6e, 0x74, 0x1a, 0x52, 0x0a, 0x0b, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x43, 0x0a, 0x0b, 0x61, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x44,
	0x0a, 0x12, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x69, 0x6e, 0x53, 0x65, 0x71, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x69, 0x6e, 0x53, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06,
	0x6d, 0x61, 0x78, 0x53, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x61,
	0x78, 0x53, 0x65, 0x71, 0x1a, 0xbc, 0x01, 0x0a, 0x10, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x65,
	0x78, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1c, 0x0a,
	0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x77,
	0x69, 0x64, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74,
	0x68, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x73, 0x70, 0x65, 0x63, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6f,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x61, 0x73, 0x70, 0x65, 0x63, 0x74, 0x52, 0x61,
	0x74, 0x69, 0x6f, 0x1a, 0x69, 0x0a, 0x0f, 0x52, 0x69, 0x63, 0x68, 0x54, 0x65, 0x78, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x56, 0x0a, 0x0f, 0x72, 0x69, 0x63, 0x68, 0x54, 0x65,
	0x78, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x69, 0x63, 0x68, 0x54, 0x65, 0x78, 0x74,
	0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0f, 0x72,
	0x69, 0x63, 0x68, 0x54, 0x65, 0x78, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0xc7,
	0x01, 0x0a, 0x0d, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x54, 0x0a, 0x0e, 0x72, 0x69, 0x63, 0x68, 0x54, 0x65, 0x78, 0x74, 0x4e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e,
	0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x52, 0x69, 0x63, 0x68, 0x54, 0x65, 0x78, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0e, 0x72, 0x69, 0x63, 0x68, 0x54, 0x65, 0x78, 0x74,
	0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x4e, 0x0a, 0x0f, 0x69, 0x31, 0x38, 0x6e,
	0x43, 0x6f, 0x70, 0x79, 0x57, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49,
	0x6d, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x49, 0x31, 0x38, 0x6e, 0x43, 0x6f, 0x70, 0x79,
	0x57, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x0f, 0x69, 0x31, 0x38, 0x6e, 0x43, 0x6f, 0x70,
	0x79, 0x57, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x1a, 0xf7, 0x01, 0x0a, 0x15, 0x52, 0x69, 0x63,
	0x68, 0x54, 0x65, 0x78, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x4f, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x39, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49,
	0x6d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x69, 0x63, 0x68, 0x54, 0x65,
	0x78, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x52, 0x69, 0x63, 0x68, 0x54, 0x65, 0x78, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x1a, 0x8c, 0x01, 0x0a, 0x0c, 0x52, 0x69, 0x63, 0x68, 0x54, 0x65, 0x78, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x6c, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6c,
	0x65, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x69, 0x6e,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x69,
	0x6e, 0x65, 0x22, 0x60, 0x0a, 0x12, 0x4b, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x68, 0x69, 0x70, 0x12, 0x0b, 0x0a, 0x07, 0x6b, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x46, 0x4f, 0x4c, 0x4c, 0x4f, 0x57, 0x5f,
	0x45, 0x41, 0x43, 0x48, 0x5f, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e,
	0x54, 0x4f, 0x5f, 0x46, 0x4f, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x46, 0x52, 0x4f, 0x4d, 0x10, 0x02,
	0x12, 0x12, 0x0a, 0x0e, 0x46, 0x52, 0x4f, 0x4d, 0x5f, 0x46, 0x4f, 0x4c, 0x4c, 0x4f, 0x57, 0x5f,
	0x54, 0x4f, 0x10, 0x03, 0x22, 0x42, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00,
	0x12, 0x0c, 0x0a, 0x08, 0x4f, 0x46, 0x46, 0x49, 0x43, 0x49, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x0a,
	0x0a, 0x06, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x54,
	0x52, 0x41, 0x4e, 0x47, 0x45, 0x52, 0x10, 0x03, 0x22, 0x7f, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x74,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x54,
	0x54, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x54, 0x54, 0x5f,
	0x43, 0x48, 0x41, 0x54, 0x5f, 0x52, 0x4f, 0x4f, 0x4d, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x43,
	0x54, 0x54, 0x5f, 0x4d, 0x55, 0x4c, 0x54, 0x49, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f,
	0x52, 0x4f, 0x4f, 0x4d, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x54, 0x54, 0x5f, 0x47, 0x52,
	0x4f, 0x55, 0x50, 0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x54, 0x54, 0x5f, 0x43, 0x48, 0x41,
	0x4e, 0x4e, 0x45, 0x4c, 0x10, 0x05, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x54, 0x54, 0x5f, 0x41, 0x47,
	0x47, 0x52, 0x45, 0x47, 0x41, 0x54, 0x45, 0x10, 0x06, 0x22, 0x39, 0x0a, 0x0a, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x12, 0x6b, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x10, 0x00, 0x12,
	0x13, 0x0a, 0x0e, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x49,
	0x44, 0x10, 0x90, 0x4e, 0x22, 0xca, 0x6a, 0x0a, 0x05, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x1a, 0x9f,
	0x09, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x1a, 0x57, 0x0a, 0x17, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x74, 0x42, 0x61, 0x72, 0x72, 0x69, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73, 0x65, 0x74, 0x42, 0x61, 0x72, 0x72,
	0x69, 0x65, 0x72, 0x1a, 0x1a, 0x0a, 0x18, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a,
	0x39, 0x0a, 0x19, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x1a, 0x3c, 0x0a, 0x1c, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x73,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x1a, 0x5a, 0x0a, 0x1d, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x73, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x73, 0x6e, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x42, 0x61,
	0x73, 0x69, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x72, 0x1a, 0x5a, 0x0a, 0x10, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x42,
	0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x1a, 0x9e, 0x01, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x2d, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49,
	0x6d, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x12, 0x3f, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x27, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e,
	0x49, 0x6d, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x1a, 0x3a, 0x0a, 0x1a, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x42, 0x61, 0x73, 0x69,
	0x63, 0x49, 0x6e, 0x66, 0x6f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x1a, 0x6a, 0x0a,
	0x1b, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66,
	0x6f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x09,
	0x62, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09,
	0x62, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x37, 0x0a, 0x17, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x49, 0x64, 0x1a, 0x48, 0x0a, 0x18, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x48, 0x65, 0x61,
	0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c,
	0x0a, 0x11, 0x6e, 0x6f, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x6e, 0x6f, 0x74, 0x45, 0x78,
	0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x1a, 0xba, 0x01, 0x0a,
	0x16, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66,
	0x6f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x53, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x75, 0x73,
	0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4b, 0x0a, 0x09,
	0x62, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09,
	0x62, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x65, 0x0a, 0x0a, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x13, 0x55, 0x53, 0x45, 0x52, 0x5f,
	0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00,
	0x12, 0x15, 0x0a, 0x11, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4a, 0x4f, 0x49, 0x4e, 0x5f, 0x43, 0x48,
	0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x55, 0x53, 0x45, 0x52, 0x5f,
	0x51, 0x55, 0x49, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x10, 0x02, 0x12, 0x10,
	0x0a, 0x0c, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4f, 0x46, 0x46, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x03,
	0x1a, 0x87, 0x06, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x32, 0x0a, 0x16, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x1a,
	0x81, 0x01, 0x0a, 0x17, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x4c, 0x0a, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x41, 0x63,
	0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x1a, 0x7d, 0x0a, 0x1d, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x51, 0x75,
	0x61, 0x6c, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64,
	0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x32,
	0x0a, 0x14, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x76, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x53, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x64, 0x65,
	0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x76, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x53,
	0x65, 0x63, 0x1a, 0xc5, 0x03, 0x0a, 0x0c, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x38, 0x0a, 0x17, 0x66, 0x65, 0x74, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x17, 0x66, 0x65, 0x74, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x42, 0x0a,
	0x1c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x48, 0x65, 0x61, 0x72,
	0x74, 0x62, 0x65, 0x61, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x1c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72,
	0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x12, 0x7f, 0x0a, 0x1d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x51, 0x75, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e,
	0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x51, 0x75, 0x61,
	0x6c, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x1d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x51, 0x75, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x40, 0x0a, 0x1b, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x54,
	0x69, 0x70, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x1b, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x54, 0x69, 0x70, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x12, 0x3a, 0x0a, 0x18, 0x62, 0x61, 0x74, 0x63, 0x68, 0x53, 0x65, 0x6e,
	0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4d, 0x61, 0x78, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x18, 0x62, 0x61, 0x74, 0x63, 0x68, 0x53, 0x65, 0x6e,
	0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4d, 0x61, 0x78, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x38, 0x0a, 0x17, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x17, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x1a, 0xc2, 0x03, 0x0a, 0x07, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x1a, 0xe9, 0x01, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x4f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2d, 0x0a, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x41, 0x63, 0x46, 0x75,
	0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x0f, 0x6c, 0x61,
	0x73, 0x74, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x4c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d,
	0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x2e, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x4e, 0x4c,
	0x49, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x4f, 0x46, 0x46, 0x4c, 0x49, 0x4e, 0x45,
	0x10, 0x02, 0x1a, 0x4e, 0x0a, 0x1d, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49,
	0x6d, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x1a, 0x7b, 0x0a, 0x1e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x10, 0x75,
	0x73, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a,
	0xd9, 0x06, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x1a, 0xd0, 0x06, 0x0a, 0x06, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x1a, 0x85, 0x01, 0x0a, 0x19, 0x4b, 0x73, 0x49, 0x6d, 0x44, 0x61, 0x74, 0x61,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x75, 0x73, 0x68, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x12, 0x4e, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3a, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x2e, 0x4b, 0x73, 0x49, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x75, 0x73, 0x68, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x1a, 0x2f, 0x0a, 0x13, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x1a, 0x31, 0x0a, 0x15,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x1a,
	0x27, 0x0a, 0x0b, 0x59, 0x6f, 0x75, 0x42, 0x65, 0x4b, 0x69, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x1a, 0x98, 0x01, 0x0a, 0x0b, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x74, 0x72, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73,
	0x74, 0x72, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65,
	0x61, 0x64, 0x53, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x65, 0x61,
	0x64, 0x53, 0x65, 0x71, 0x12, 0x4d, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x74, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x41,
	0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0e, 0x63, 0x68, 0x61, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x1a, 0xa6, 0x01, 0x0a, 0x0e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x12, 0x41, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x41, 0x63, 0x46,
	0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x0a, 0x63,
	0x68, 0x61, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x51, 0x0a, 0x0d, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x70, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0d, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xec, 0x01, 0x0a,
	0x12, 0x4b, 0x73, 0x49, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00,
	0x12, 0x15, 0x0a, 0x11, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x55,
	0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x47, 0x52, 0x4f, 0x55, 0x50,
	0x5f, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x55, 0x50, 0x44,
	0x41, 0x54, 0x45, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x59, 0x4f, 0x55, 0x5f, 0x42, 0x45, 0x5f,
	0x4b, 0x49, 0x43, 0x4b, 0x45, 0x44, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x4d, 0x45, 0x53, 0x53,
	0x41, 0x47, 0x45, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x10, 0x04,
	0x12, 0x19, 0x0a, 0x15, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x52, 0x45, 0x43, 0x45,
	0x49, 0x50, 0x54, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x10, 0x05, 0x12, 0x16, 0x0a, 0x12, 0x46,
	0x52, 0x49, 0x45, 0x4e, 0x44, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54,
	0x45, 0x10, 0x06, 0x12, 0x1f, 0x0a, 0x1b, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x5f, 0x52, 0x45,
	0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x55, 0x50, 0x44, 0x41,
	0x54, 0x45, 0x10, 0x07, 0x12, 0x15, 0x0a, 0x11, 0x42, 0x4c, 0x41, 0x43, 0x4b, 0x5f, 0x4c, 0x49,
	0x53, 0x54, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x08, 0x1a, 0xf3, 0x50, 0x0a, 0x07,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x9f, 0x01, 0x0a, 0x12, 0x49, 0x6d, 0x63, 0x52,
	0x65, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3c,
	0x0a, 0x09, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x4d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49,
	0x6d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x09, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x4d, 0x73, 0x67, 0x12, 0x4b, 0x0a, 0x09,
	0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x49, 0x6d,
	0x63, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x09,
	0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4d, 0x73, 0x67, 0x1a, 0x53, 0x0a, 0x11, 0x49, 0x6d, 0x63,
	0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3e,
	0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x4d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e,
	0x49, 0x6d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x4d, 0x73, 0x67, 0x1a, 0x1a,
	0x0a, 0x04, 0x54, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x1a, 0x47, 0x0a, 0x05, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x1a, 0x49, 0x0a, 0x05, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x1a, 0x93,
	0x01, 0x0a, 0x05, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x55, 0x72, 0x69,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x55, 0x72, 0x69,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x1a, 0x22, 0x0a, 0x06, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6e, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x5c, 0x0a, 0x06, 0x50, 0x69, 0x63, 0x55,
	0x72, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x64, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x63, 0x64, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x72, 0x6c, 0x50, 0x61, 0x74,
	0x74, 0x65, 0x72, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x72, 0x6c, 0x50,
	0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x1a, 0xd3, 0x03, 0x0a, 0x08, 0x45, 0x6d, 0x6f, 0x74, 0x69,
	0x63, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75,
	0x2e, 0x49, 0x6d, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x45, 0x6d, 0x6f, 0x74, 0x69, 0x63, 0x6f, 0x6e, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3b, 0x0a, 0x06, 0x62, 0x69, 0x67, 0x55, 0x72, 0x6c, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e,
	0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x50, 0x69, 0x63, 0x55, 0x72, 0x6c, 0x52, 0x06, 0x62, 0x69, 0x67, 0x55,
	0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x4e, 0x0a, 0x0c, 0x65, 0x6d, 0x6f, 0x74, 0x69, 0x63, 0x6f, 0x6e, 0x43, 0x4f, 0x64, 0x65,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61,
	0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x6d, 0x6f, 0x74, 0x69, 0x63, 0x6f, 0x6e, 0x2e, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x0c, 0x65, 0x6d, 0x6f, 0x74, 0x69, 0x63, 0x6f, 0x6e, 0x43, 0x4f, 0x64, 0x65,
	0x1a, 0x36, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x52, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x09, 0x0a,
	0x05, 0x42, 0x41, 0x53, 0x49, 0x43, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x4d, 0x41, 0x47,
	0x45, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x49, 0x46, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x41, 0x4c, 0x5f, 0x45, 0x46, 0x46, 0x45, 0x43, 0x54, 0x10, 0x04,
	0x12, 0x0a, 0x0a, 0x06, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x10, 0x05, 0x1a, 0x54, 0x0a, 0x04,
	0x46, 0x69, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x78, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x1a, 0xf6, 0x01, 0x0a, 0x09, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x12, 0x3c, 0x0a, 0x09, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x4d, 0x73, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75,
	0x2e, 0x49, 0x6d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x09, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x4d, 0x73, 0x67, 0x12, 0x5b,
	0x0a, 0x0c, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x4d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d,
	0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0c, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x4d, 0x73, 0x67, 0x1a, 0x4e, 0x0a, 0x10, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x1a, 0x51, 0x0a, 0x15, 0x46,
	0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e,
	0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x6b,
	0x0a, 0x15, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x1a, 0xe0, 0x01, 0x0a, 0x10,
	0x49, 0x6d, 0x63, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x12, 0x68, 0x0a, 0x15, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x50, 0x6c,
	0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75,
	0x2e, 0x49, 0x6d, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x15, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x50,
	0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x26,
	0x0a, 0x0e, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e,
	0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x2f,
	0x0a, 0x15, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x1a,
	0xa6, 0x01, 0x0a, 0x24, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x49, 0x6e, 0x74, 0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x12, 0x46, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x2e, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d,
	0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4a,
	0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0xa4, 0x01, 0x0a, 0x22, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x72, 0x6d, 0x4a, 0x6f, 0x69, 0x6e, 0x49, 0x6e, 0x74, 0x6f, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x46, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44,
	0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a,
	0x49, 0x0a, 0x12, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61,
	0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x1a, 0xb8, 0x01, 0x0a, 0x12, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x09, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x42, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e,
	0x49, 0x6d, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x07, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x1a, 0x2e, 0x0a, 0x12, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x1a, 0x15, 0x0a, 0x13, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x85, 0x01, 0x0a,
	0x12, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x33, 0x0a,
	0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x42,
	0x61, 0x73, 0x69, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x1a, 0xcd, 0x01, 0x0a, 0x13, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e,
	0x76, 0x69, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x61, 0x0a, 0x0c, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x41,
	0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x6e, 0x76, 0x69, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0c, 0x69, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x39, 0x0a, 0x0c, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x00, 0x12, 0x08, 0x0a,
	0x04, 0x53, 0x55, 0x43, 0x43, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49,
	0x4e, 0x47, 0x10, 0x02, 0x1a, 0xcb, 0x01, 0x0a, 0x10, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4a, 0x6f,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x07, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d,
	0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x07, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x46, 0x0a, 0x08, 0x66, 0x69,
	0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x41,
	0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x46, 0x69, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x66, 0x69, 0x6e, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x1a, 0xa7, 0x01, 0x0a, 0x11, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4a, 0x6f, 0x69, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x0a, 0x6a, 0x6f, 0x69, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x39, 0x2e, 0x41,
	0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4a, 0x6f, 0x69,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0a, 0x6a, 0x6f, 0x69, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x37, 0x0a, 0x0a, 0x4a, 0x6f, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x55, 0x43, 0x43, 0x10, 0x01, 0x12,
	0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x1a, 0x8b, 0x02, 0x0a,
	0x1a, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x41, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x72,
	0x65, 0x71, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x72, 0x65, 0x71, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x74, 0x0a, 0x10, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x4a, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x48, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e,
	0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x41, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4a, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x10, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4a, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x6b, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x47, 0x0a, 0x10, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4a, 0x6f, 0x69, 0x6e, 0x41, 0x63,
	0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x47, 0x52, 0x45, 0x45,
	0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45, 0x46, 0x55, 0x53, 0x45, 0x10, 0x02, 0x12, 0x0a,
	0x0a, 0x06, 0x49, 0x47, 0x4e, 0x4f, 0x52, 0x45, 0x10, 0x03, 0x1a, 0x1d, 0x0a, 0x1b, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x63,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x4e, 0x0a, 0x1a, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x71, 0x53, 0x65,
	0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x65, 0x71, 0x53, 0x65, 0x71, 0x12,
	0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x1a, 0xd3, 0x02, 0x0a, 0x1b, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x07, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d,
	0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x07, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x72, 0x12, 0x35, 0x0a, 0x08, 0x69, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x41, 0x63, 0x46,
	0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x08, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x65, 0x73, 0x12,
	0x44, 0x0a, 0x07, 0x66, 0x69, 0x6e, 0x64, 0x57, 0x61, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x2a, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d,
	0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x46, 0x69, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x66, 0x69,
	0x6e, 0x64, 0x57, 0x61, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x46, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44,
	0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a,
	0x51, 0x0a, 0x1d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x71, 0x53, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x72, 0x65, 0x71, 0x53, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x1a, 0xd6, 0x02, 0x0a, 0x1e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4a, 0x6f, 0x69, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x73, 0x6e, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12,
	0x33, 0x0a, 0x07, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d,
	0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x07, 0x69, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x72, 0x12, 0x35, 0x0a, 0x08, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61,
	0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x08, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x65, 0x73, 0x12, 0x44, 0x0a, 0x07, 0x66,
	0x69, 0x6e, 0x64, 0x57, 0x61, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x41,
	0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x46, 0x69, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x66, 0x69, 0x6e, 0x64, 0x57, 0x61,
	0x79, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x46, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75,
	0x2e, 0x49, 0x6d, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x2c, 0x0a, 0x10, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x51, 0x75, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x1a, 0x2d, 0x0a, 0x11, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x51, 0x75, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x1a, 0x5f, 0x0a, 0x10, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4b, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61,
	0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x1a, 0x2d, 0x0a, 0x11, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4b, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x1a, 0xa7, 0x03, 0x0a, 0x13, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x49, 0x0a, 0x06, 0x72, 0x65,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x41, 0x63, 0x46,
	0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x06, 0x72,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x43, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75,
	0x2e, 0x49, 0x6d, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x44, 0x65,
	0x73, 0x63, 0x48, 0x00, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x6d, 0x0a, 0x12, 0x6a, 0x6f,
	0x69, 0x6e, 0x4e, 0x65, 0x65, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61,
	0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x4a, 0x6f, 0x69, 0x6e, 0x4e, 0x65, 0x65, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x12, 0x6a, 0x6f, 0x69, 0x6e, 0x4e, 0x65, 0x65, 0x64, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x67, 0x0a, 0x10, 0x69, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75,
	0x2e, 0x49, 0x6d, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x00,
	0x52, 0x10, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x42, 0x0e, 0x0a, 0x0c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x1a, 0x32, 0x0a, 0x12, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x26, 0x0a, 0x10, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x73, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65,
	0x73, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x1a, 0x85,
	0x01, 0x0a, 0x1e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4a,
	0x6f, 0x69, 0x6e, 0x4e, 0x65, 0x65, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x63, 0x0a, 0x12, 0x6a, 0x6f, 0x69, 0x6e, 0x4e, 0x65, 0x65, 0x64, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e,
	0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4a, 0x6f, 0x69, 0x6e,
	0x4e, 0x65, 0x65, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x12, 0x6a, 0x6f, 0x69, 0x6e, 0x4e, 0x65, 0x65, 0x64, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x85, 0x01, 0x0a, 0x1c, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x65, 0x0a, 0x14, 0x69, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e,
	0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x14, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x16,
	0x0a, 0x14, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0xfa, 0x01, 0x0a, 0x19, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x50,
	0x0a, 0x0b, 0x73, 0x65, 0x74, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75,
	0x2e, 0x49, 0x6d, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d,
	0x65, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x65, 0x74, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x62, 0x0a, 0x11, 0x73, 0x65, 0x74, 0x41, 0x6e, 0x74, 0x69, 0x44, 0x69, 0x73, 0x74, 0x75,
	0x72, 0x62, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x41, 0x63,
	0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x6e, 0x74, 0x69, 0x44, 0x69, 0x73, 0x74, 0x75, 0x72, 0x62, 0x69, 0x6e, 0x67, 0x48,
	0x00, 0x52, 0x11, 0x73, 0x65, 0x74, 0x41, 0x6e, 0x74, 0x69, 0x44, 0x69, 0x73, 0x74, 0x75, 0x72,
	0x62, 0x69, 0x6e, 0x67, 0x42, 0x0d, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x1a, 0x2d, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x1a, 0x3f, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6e, 0x74,
	0x69, 0x44, 0x69, 0x73, 0x74, 0x75, 0x72, 0x62, 0x69, 0x6e, 0x67, 0x12, 0x26, 0x0a, 0x0e, 0x61,
	0x6e, 0x74, 0x69, 0x44, 0x69, 0x73, 0x74, 0x75, 0x72, 0x62, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0e, 0x61, 0x6e, 0x74, 0x69, 0x44, 0x69, 0x73, 0x74, 0x75, 0x72, 0x62,
	0x69, 0x6e, 0x67, 0x1a, 0x1c, 0x0a, 0x1a, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x1a, 0x76, 0x0a, 0x19, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x3f, 0x0a, 0x0a, 0x73, 0x79, 0x6e, 0x63,
	0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x41,
	0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x42, 0x61, 0x73,
	0x69, 0x63, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x52, 0x0a, 0x73,
	0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x1a, 0xa1, 0x01, 0x0a, 0x1a, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x41, 0x63, 0x46, 0x75,
	0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x3f, 0x0a, 0x0a,
	0x73, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d,
	0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6f, 0x6b, 0x69,
	0x65, 0x52, 0x0a, 0x73, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x1a, 0x60, 0x0a,
	0x15, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x12, 0x2d, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x42,
	0x61, 0x73, 0x69, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x1a,
	0x5a, 0x0a, 0x16, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x06, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x41, 0x63, 0x46, 0x75,
	0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x1a, 0x57, 0x0a, 0x14, 0x55,
	0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x0a, 0x73, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6f, 0x6b, 0x69,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44,
	0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x53, 0x79,
	0x6e, 0x63, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x52, 0x0a, 0x73, 0x79, 0x6e, 0x63, 0x43, 0x6f,
	0x6f, 0x6b, 0x69, 0x65, 0x1a, 0xaa, 0x01, 0x0a, 0x15, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50,
	0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e,
	0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x3f, 0x0a, 0x0a, 0x73, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d,
	0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x43,
	0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x52, 0x0a, 0x73, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6f, 0x6b, 0x69,
	0x65, 0x1a, 0x4b, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0x2f,
	0x0a, 0x13, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x1a,
	0x68, 0x0a, 0x14, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x72,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0xa1, 0x01, 0x0a, 0x0d, 0x55, 0x73,
	0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x44, 0x0a, 0x09, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x4a, 0x0a, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61,
	0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x1a, 0x84, 0x05,
	0x0a, 0x0b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2d, 0x0a,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x41, 0x63,
	0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x42, 0x61, 0x73, 0x69,
	0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x6e, 0x74, 0x69,
	0x44, 0x69, 0x73, 0x74, 0x75, 0x72, 0x62, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0e, 0x61, 0x6e, 0x74, 0x69, 0x44, 0x69, 0x73, 0x74, 0x75, 0x72, 0x62, 0x69, 0x6e, 0x67,
	0x12, 0x52, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x3a, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d,
	0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6a, 0x6f, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6a, 0x6f, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x4c,
	0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x41,
	0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x46, 0x0a, 0x08,
	0x66, 0x69, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a,
	0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x46, 0x69, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x66, 0x69, 0x6e, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x22, 0x62, 0x0a, 0x11, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x15, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x10, 0x01,
	0x12, 0x0b, 0x0a, 0x07, 0x51, 0x55, 0x49, 0x54, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0a, 0x0a,
	0x06, 0x4b, 0x49, 0x43, 0x4b, 0x45, 0x44, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x49, 0x53,
	0x4d, 0x49, 0x53, 0x53, 0x45, 0x44, 0x10, 0x04, 0x22, 0x3a, 0x0a, 0x0f, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a,
	0x06, 0x43, 0x4f, 0x4d, 0x4d, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x44, 0x4d,
	0x49, 0x4e, 0x10, 0x02, 0x1a, 0xbd, 0x01, 0x0a, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x49, 0x0a, 0x09, 0x62, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e,
	0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x09, 0x62, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x65, 0x0a,
	0x14, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x72, 0x69, 0x65,
	0x66, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x41, 0x63,
	0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x72, 0x69, 0x65, 0x66, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x14,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x72, 0x69, 0x65, 0x66,
	0x49, 0x6e, 0x66, 0x6f, 0x1a, 0xf0, 0x05, 0x0a, 0x0e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61,
	0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x2f, 0x0a, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x42,
	0x61, 0x73, 0x69, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x12, 0x4a, 0x0a, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e,
	0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x63,
	0x0a, 0x12, 0x6a, 0x6f, 0x69, 0x6e, 0x4e, 0x65, 0x65, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x41, 0x63, 0x46,
	0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x4e, 0x65, 0x65,
	0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x12, 0x6a, 0x6f, 0x69, 0x6e, 0x4e, 0x65, 0x65, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x44, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61,
	0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x53, 0x0a, 0x0e, 0x66, 0x6f, 0x72,
	0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x2b, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49,
	0x6d, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x46, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0e,
	0x66, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x65,
	0x0a, 0x14, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x41,
	0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x14, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x69, 0x7a, 0x44, 0x65, 0x66, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x69, 0x7a, 0x44, 0x65,
	0x66, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x65, 0x66, 0x61, 0x6c, 0x75, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x64, 0x65, 0x66, 0x61, 0x6c, 0x75, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x1a, 0x9b, 0x01, 0x0a, 0x14, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x72, 0x69, 0x65, 0x66, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x74, 0x6f, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61,
	0x6e, 0x6d, 0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x0a, 0x74, 0x6f, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x26, 0x0a,
	0x0e, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0x96, 0x01, 0x0a, 0x15, 0x49, 0x6d, 0x63, 0x50, 0x61, 0x73,
	0x73, 0x54, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x41, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75,
	0x2e, 0x49, 0x6d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x74,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x18,
	0x0a, 0x16, 0x49, 0x6d, 0x63, 0x50, 0x61, 0x73, 0x73, 0x54, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0xca, 0x01, 0x0a, 0x12, 0x49, 0x6d, 0x63,
	0x50, 0x61, 0x73, 0x73, 0x54, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x50, 0x75, 0x73, 0x68, 0x12,
	0x41, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75,
	0x2e, 0x49, 0x6d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x74,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x12, 0x35, 0x0a, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d,
	0x75, 0x2e, 0x49, 0x6d, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x08, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x3c, 0x0a, 0x10, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x22, 0xe5, 0x01, 0x0a, 0x0e, 0x49, 0x6d, 0x63, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x45, 0x58, 0x54, 0x10, 0x00,
	0x12, 0x09, 0x0a, 0x05, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x43,
	0x55, 0x53, 0x54, 0x4f, 0x4d, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x55, 0x44, 0x49, 0x4f,
	0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x10, 0x04, 0x12, 0x0c, 0x0a,
	0x08, 0x45, 0x4d, 0x4f, 0x54, 0x49, 0x43, 0x4f, 0x4e, 0x10, 0x05, 0x12, 0x08, 0x0a, 0x04, 0x46,
	0x49, 0x4c, 0x45, 0x10, 0x06, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x4f, 0x54, 0x49, 0x43, 0x45, 0x10,
	0x0a, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x43, 0x41, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x0b, 0x12,
	0x0d, 0x0a, 0x09, 0x52, 0x45, 0x46, 0x45, 0x52, 0x45, 0x4e, 0x43, 0x45, 0x10, 0x0c, 0x12, 0x11,
	0x0a, 0x0d, 0x4d, 0x45, 0x52, 0x47, 0x45, 0x5f, 0x46, 0x4f, 0x52, 0x57, 0x41, 0x52, 0x44, 0x10,
	0x0d, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x4c, 0x41, 0x43, 0x45, 0x5f, 0x48, 0x4f, 0x4c, 0x44, 0x45,
	0x52, 0x10, 0x64, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x45, 0x50, 0x4c, 0x41, 0x43, 0x45, 0x10, 0x65,
	0x12, 0x17, 0x0a, 0x12, 0x49, 0x4e, 0x56, 0x49, 0x53, 0x49, 0x42, 0x4c, 0x45, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x4d, 0x41, 0x53, 0x10, 0xc7, 0x01, 0x12, 0x10, 0x0a, 0x0b, 0x52, 0x49, 0x43,
	0x48, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x43, 0x45, 0x10, 0xc8, 0x01, 0x22, 0xaf, 0x01, 0x0a, 0x0e,
	0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c,
	0x0a, 0x18, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x43, 0x45,
	0x5f, 0x4d, 0x45, 0x54, 0x41, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17,
	0x43, 0x4f, 0x4d, 0x4d, 0x4f, 0x4e, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x43, 0x45, 0x5f, 0x4d, 0x45,
	0x54, 0x41, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x01, 0x12, 0x22, 0x0a, 0x1e, 0x43, 0x4f, 0x4e,
	0x46, 0x49, 0x52, 0x4d, 0x5f, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45, 0x5f, 0x49, 0x4e, 0x54, 0x4f,
	0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x4d, 0x45, 0x54, 0x41, 0x10, 0x02, 0x12, 0x20, 0x0a,
	0x1c, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x52, 0x4d, 0x5f, 0x4a, 0x4f, 0x49, 0x4e, 0x5f, 0x49, 0x4e,
	0x54, 0x4f, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x4d, 0x45, 0x54, 0x41, 0x10, 0x03, 0x12,
	0x1c, 0x0a, 0x18, 0x4c, 0x49, 0x4e, 0x4b, 0x45, 0x44, 0x5f, 0x50, 0x52, 0x4f, 0x46, 0x49, 0x4c,
	0x45, 0x5f, 0x4d, 0x45, 0x54, 0x41, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x04, 0x22, 0x7a, 0x0a,
	0x0d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x69, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e,
	0x0a, 0x0a, 0x42, 0x59, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x09,
	0x0a, 0x05, 0x42, 0x59, 0x5f, 0x49, 0x44, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x59, 0x5f,
	0x4e, 0x41, 0x4d, 0x45, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x42, 0x59, 0x5f, 0x51, 0x52, 0x5f,
	0x43, 0x4f, 0x44, 0x45, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x59, 0x5f, 0x43, 0x41, 0x52,
	0x44, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x42, 0x59, 0x5f, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x10, 0x05, 0x12, 0x11, 0x0a, 0x0d, 0x42, 0x59, 0x5f, 0x53, 0x48, 0x41,
	0x52, 0x45, 0x5f, 0x4c, 0x49, 0x4e, 0x4b, 0x10, 0x06, 0x22, 0x51, 0x0a, 0x11, 0x4a, 0x6f, 0x69,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12,
	0x0a, 0x0e, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x45, 0x44, 0x10,
	0x01, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x50, 0x50, 0x52, 0x4f, 0x56, 0x45, 0x44, 0x10, 0x02, 0x12,
	0x0b, 0x0a, 0x07, 0x52, 0x45, 0x46, 0x55, 0x53, 0x45, 0x44, 0x10, 0x03, 0x22, 0x58, 0x0a, 0x14,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x1e, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f,
	0x49, 0x4e, 0x56, 0x49, 0x54, 0x45, 0x5f, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f,
	0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x45, 0x56, 0x45, 0x52,
	0x59, 0x4f, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x4f, 0x4e, 0x4c, 0x59, 0x5f, 0x41,
	0x44, 0x4d, 0x49, 0x4e, 0x10, 0x02, 0x22, 0x54, 0x0a, 0x16, 0x4a, 0x6f, 0x69, 0x6e, 0x4e, 0x65,
	0x65, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x25, 0x0a, 0x21, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x4a, 0x4f, 0x49, 0x4e,
	0x5f, 0x4e, 0x45, 0x45, 0x44, 0x5f, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x01, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x10, 0x02, 0x22, 0x3e, 0x0a, 0x0b,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x17, 0x0a, 0x13, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x01, 0x12,
	0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x02, 0x22, 0x3b, 0x0a, 0x09,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x07, 0x50, 0x52, 0x49, 0x56, 0x41, 0x54, 0x45, 0x10, 0x03, 0x12, 0x0a, 0x0a,
	0x06, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x43, 0x10, 0x04, 0x22, 0x53, 0x0a, 0x0e, 0x46, 0x6f, 0x72,
	0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x46, 0x4f, 0x52, 0x42, 0x49, 0x44, 0x44, 0x45, 0x4e,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x4e, 0x5f, 0x46,
	0x4f, 0x52, 0x42, 0x49, 0x44, 0x44, 0x45, 0x4e, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x46, 0x4f,
	0x52, 0x42, 0x49, 0x44, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x10, 0x02, 0x22, 0x31,
	0x0a, 0x0f, 0x50, 0x61, 0x73, 0x73, 0x54, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x50, 0x54, 0x54,
	0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x54, 0x49, 0x4e, 0x47, 0x10,
	0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_Im_proto_rawDescOnce sync.Once
	file_Im_proto_rawDescData = file_Im_proto_rawDesc
)

func file_Im_proto_rawDescGZIP() []byte {
	file_Im_proto_rawDescOnce.Do(func() {
		file_Im_proto_rawDescData = protoimpl.X.CompressGZIP(file_Im_proto_rawDescData)
	})
	return file_Im_proto_rawDescData
}

var file_Im_proto_enumTypes = make([]protoimpl.EnumInfo, 37)
var file_Im_proto_msgTypes = make([]protoimpl.MessageInfo, 185)
var file_Im_proto_goTypes = []interface{}{
	(Basic_SharePlatform)(0),                                       // 0: AcFunDanmu.Im.Basic.SharePlatform
	(Basic_PacketHeader_Flags)(0),                                  // 1: AcFunDanmu.Im.Basic.PacketHeader.Flags
	(Basic_PacketHeader_EncodingType)(0),                           // 2: AcFunDanmu.Im.Basic.PacketHeader.EncodingType
	(Basic_PacketHeader_EncryptionMode)(0),                         // 3: AcFunDanmu.Im.Basic.PacketHeader.EncryptionMode
	(Basic_PacketHeader_Feature)(0),                                // 4: AcFunDanmu.Im.Basic.PacketHeader.Feature
	(Basic_PingRequest_PingType)(0),                                // 5: AcFunDanmu.Im.Basic.PingRequest.PingType
	(Basic_RegisterRequest_PresenceStatus)(0),                      // 6: AcFunDanmu.Im.Basic.RegisterRequest.PresenceStatus
	(Basic_RegisterRequest_ActiveStatus)(0),                        // 7: AcFunDanmu.Im.Basic.RegisterRequest.ActiveStatus
	(Basic_AccessPoint_AddressType)(0),                             // 8: AcFunDanmu.Im.Basic.AccessPoint.AddressType
	(Basic_TokenInfo_TokenType)(0),                                 // 9: AcFunDanmu.Im.Basic.TokenInfo.TokenType
	(Basic_PushServiceToken_PushType)(0),                           // 10: AcFunDanmu.Im.Basic.PushServiceToken.PushType
	(Basic_DeviceInfo_PlatformType)(0),                             // 11: AcFunDanmu.Im.Basic.DeviceInfo.PlatformType
	(Basic_EnvInfo_NetworkType)(0),                                 // 12: AcFunDanmu.Im.Basic.EnvInfo.NetworkType
	(Message_KsUserRelationShip)(0),                                // 13: AcFunDanmu.Im.Message.KsUserRelationShip
	(Message_AccountType)(0),                                       // 14: AcFunDanmu.Im.Message.AccountType
	(Message_ChatTargetType)(0),                                    // 15: AcFunDanmu.Im.Message.ChatTargetType
	(Message_SystemUser)(0),                                        // 16: AcFunDanmu.Im.Message.SystemUser
	(Message_RemindBody_RemindType)(0),                             // 17: AcFunDanmu.Im.Message.RemindBody.RemindType
	(Cloud_Channel_UserAction)(0),                                  // 18: AcFunDanmu.Im.Cloud.Channel.UserAction
	(Cloud_Profile_UserOnlineStatus_Status)(0),                     // 19: AcFunDanmu.Im.Cloud.Profile.UserOnlineStatus.Status
	(Cloud_Data_Update_KsImDataUpdateType)(0),                      // 20: AcFunDanmu.Im.Cloud.Data.Update.KsImDataUpdateType
	(Cloud_Message_ImcMessageType)(0),                              // 21: AcFunDanmu.Im.Cloud.Message.ImcMessageType
	(Cloud_Message_NoticeMetaType)(0),                              // 22: AcFunDanmu.Im.Cloud.Message.NoticeMetaType
	(Cloud_Message_GroupFindType)(0),                               // 23: AcFunDanmu.Im.Cloud.Message.GroupFindType
	(Cloud_Message_JoinRequestStatus)(0),                           // 24: AcFunDanmu.Im.Cloud.Message.JoinRequestStatus
	(Cloud_Message_InvitePermissionType)(0),                        // 25: AcFunDanmu.Im.Cloud.Message.InvitePermissionType
	(Cloud_Message_JoinNeedPermissionType)(0),                      // 26: AcFunDanmu.Im.Cloud.Message.JoinNeedPermissionType
	(Cloud_Message_GroupStatus)(0),                                 // 27: AcFunDanmu.Im.Cloud.Message.GroupStatus
	(Cloud_Message_GroupType)(0),                                   // 28: AcFunDanmu.Im.Cloud.Message.GroupType
	(Cloud_Message_ForbiddenState)(0),                              // 29: AcFunDanmu.Im.Cloud.Message.ForbiddenState
	(Cloud_Message_PassThroughType)(0),                             // 30: AcFunDanmu.Im.Cloud.Message.PassThroughType
	(Cloud_Message_Emoticon_Type)(0),                               // 31: AcFunDanmu.Im.Cloud.Message.Emoticon.Type
	(Cloud_Message_GroupInvideResponse_InviteStatus)(0),            // 32: AcFunDanmu.Im.Cloud.Message.GroupInvideResponse.InviteStatus
	(Cloud_Message_GroupJoinResponse_JoinStatus)(0),                // 33: AcFunDanmu.Im.Cloud.Message.GroupJoinResponse.JoinStatus
	(Cloud_Message_GroupJoinRequestAckRequest_GroupJoinAckType)(0), // 34: AcFunDanmu.Im.Cloud.Message.GroupJoinRequestAckRequest.GroupJoinAckType
	(Cloud_Message_GroupMember_GroupMemberStatus)(0),               // 35: AcFunDanmu.Im.Cloud.Message.GroupMember.GroupMemberStatus
	(Cloud_Message_GroupMember_GroupMemberRole)(0),                 // 36: AcFunDanmu.Im.Cloud.Message.GroupMember.GroupMemberRole
	(*Basic)(nil),                                              // 37: AcFunDanmu.Im.Basic
	(*Message)(nil),                                            // 38: AcFunDanmu.Im.Message
	(*Cloud)(nil),                                              // 39: AcFunDanmu.Im.Cloud
	(*Basic_PacketHeader)(nil),                                 // 40: AcFunDanmu.Im.Basic.PacketHeader
	(*Basic_User)(nil),                                         // 41: AcFunDanmu.Im.Basic.User
	(*Basic_UserInstance)(nil),                                 // 42: AcFunDanmu.Im.Basic.UserInstance
	(*Basic_UpstreamPayload)(nil),                              // 43: AcFunDanmu.Im.Basic.UpstreamPayload
	(*Basic_DownstreamPayload)(nil),                            // 44: AcFunDanmu.Im.Basic.DownstreamPayload
	(*Basic_PingRequest)(nil),                                  // 45: AcFunDanmu.Im.Basic.PingRequest
	(*Basic_PingResponse)(nil),                                 // 46: AcFunDanmu.Im.Basic.PingResponse
	(*Basic_RegisterRequest)(nil),                              // 47: AcFunDanmu.Im.Basic.RegisterRequest
	(*Basic_RegisterResponse)(nil),                             // 48: AcFunDanmu.Im.Basic.RegisterResponse
	(*Basic_AccessPointsConfig)(nil),                           // 49: AcFunDanmu.Im.Basic.AccessPointsConfig
	(*Basic_UnregisterRequest)(nil),                            // 50: AcFunDanmu.Im.Basic.UnregisterRequest
	(*Basic_UnregisterResponse)(nil),                           // 51: AcFunDanmu.Im.Basic.UnregisterResponse
	(*Basic_KeepAliveRequest)(nil),                             // 52: AcFunDanmu.Im.Basic.KeepAliveRequest
	(*Basic_KeepAliveResponse)(nil),                            // 53: AcFunDanmu.Im.Basic.KeepAliveResponse
	(*Basic_AccessPoint)(nil),                                  // 54: AcFunDanmu.Im.Basic.AccessPoint
	(*Basic_TokenInfo)(nil),                                    // 55: AcFunDanmu.Im.Basic.TokenInfo
	(*Basic_PushServiceToken)(nil),                             // 56: AcFunDanmu.Im.Basic.PushServiceToken
	(*Basic_SettingInfo)(nil),                                  // 57: AcFunDanmu.Im.Basic.SettingInfo
	(*Basic_AppInfo)(nil),                                      // 58: AcFunDanmu.Im.Basic.AppInfo
	(*Basic_DeviceInfo)(nil),                                   // 59: AcFunDanmu.Im.Basic.DeviceInfo
	(*Basic_EnvInfo)(nil),                                      // 60: AcFunDanmu.Im.Basic.EnvInfo
	(*Basic_RequestBasicInfo)(nil),                             // 61: AcFunDanmu.Im.Basic.RequestBasicInfo
	(*Basic_SyncCookie)(nil),                                   // 62: AcFunDanmu.Im.Basic.SyncCookie
	(*Basic_I18NCopyWriting)(nil),                              // 63: AcFunDanmu.Im.Basic.I18nCopyWriting
	(*Basic_SdkOption)(nil),                                    // 64: AcFunDanmu.Im.Basic.SdkOption
	(*Basic_ZtCommonInfo)(nil),                                 // 65: AcFunDanmu.Im.Basic.ZtCommonInfo
	(*Basic_FrontendInfo)(nil),                                 // 66: AcFunDanmu.Im.Basic.FrontendInfo
	(*Message_Message)(nil),                                    // 67: AcFunDanmu.Im.Message.Message
	(*Message_SendMessageResponse)(nil),                        // 68: AcFunDanmu.Im.Message.SendMessageResponse
	(*Message_PullOldRequest)(nil),                             // 69: AcFunDanmu.Im.Message.PullOldRequest
	(*Message_PullOldResponse)(nil),                            // 70: AcFunDanmu.Im.Message.PullOldResponse
	(*Message_PullNewRequest)(nil),                             // 71: AcFunDanmu.Im.Message.PullNewRequest
	(*Message_PullNewResponse)(nil),                            // 72: AcFunDanmu.Im.Message.PullNewResponse
	(*Message_SessionListRequest)(nil),                         // 73: AcFunDanmu.Im.Message.SessionListRequest
	(*Message_ChatSession)(nil),                                // 74: AcFunDanmu.Im.Message.ChatSession
	(*Message_Reminder)(nil),                                   // 75: AcFunDanmu.Im.Message.Reminder
	(*Message_RemindBody)(nil),                                 // 76: AcFunDanmu.Im.Message.RemindBody
	(*Message_ChatTarget)(nil),                                 // 77: AcFunDanmu.Im.Message.ChatTarget
	(*Message_SessionListResponse)(nil),                        // 78: AcFunDanmu.Im.Message.SessionListResponse
	(*Message_SessionPageListRequest)(nil),                     // 79: AcFunDanmu.Im.Message.SessionPageListRequest
	(*Message_SessionPageListResponse)(nil),                    // 80: AcFunDanmu.Im.Message.SessionPageListResponse
	(*Message_SessionRemoveRequest)(nil),                       // 81: AcFunDanmu.Im.Message.SessionRemoveRequest
	(*Message_SessionRemoveResponse)(nil),                      // 82: AcFunDanmu.Im.Message.SessionRemoveResponse
	(*Message_SessionCleanRequest)(nil),                        // 83: AcFunDanmu.Im.Message.SessionCleanRequest
	(*Message_SessionCleanResponse)(nil),                       // 84: AcFunDanmu.Im.Message.SessionCleanResponse
	(*Message_MessageDeleteRequest)(nil),                       // 85: AcFunDanmu.Im.Message.MessageDeleteRequest
	(*Message_MessageDeleteResponse)(nil),                      // 86: AcFunDanmu.Im.Message.MessageDeleteResponse
	(*Message_MessageCancelRequest)(nil),                       // 87: AcFunDanmu.Im.Message.MessageCancelRequest
	(*Message_MessageCancelResponse)(nil),                      // 88: AcFunDanmu.Im.Message.MessageCancelResponse
	(*Message_MessageClearRequest)(nil),                        // 89: AcFunDanmu.Im.Message.MessageClearRequest
	(*Message_MessageClearResponse)(nil),                       // 90: AcFunDanmu.Im.Message.MessageClearResponse
	(*Message_ReadSeqInfo)(nil),                                // 91: AcFunDanmu.Im.Message.ReadSeqInfo
	(*Message_MessageReadSeqRequest)(nil),                      // 92: AcFunDanmu.Im.Message.MessageReadSeqRequest
	(*Message_MessageReadSeqResponse)(nil),                     // 93: AcFunDanmu.Im.Message.MessageReadSeqResponse
	(*Message_MessageReadPush)(nil),                            // 94: AcFunDanmu.Im.Message.MessageReadPush
	(*Message_AllUnreadCountRequest)(nil),                      // 95: AcFunDanmu.Im.Message.AllUnreadCountRequest
	(*Message_AllUnreadCountResponse)(nil),                     // 96: AcFunDanmu.Im.Message.AllUnreadCountResponse
	(*Message_MessageReadAllRequest)(nil),                      // 97: AcFunDanmu.Im.Message.MessageReadAllRequest
	(*Message_MessageReadAllResponse)(nil),                     // 98: AcFunDanmu.Im.Message.MessageReadAllResponse
	(*Message_SesionStickyOnTopRequest)(nil),                   // 99: AcFunDanmu.Im.Message.SesionStickyOnTopRequest
	(*Message_SessionStickyOnTopResponse)(nil),                 // 100: AcFunDanmu.Im.Message.SessionStickyOnTopResponse
	(*Message_SessionRaw)(nil),                                 // 101: AcFunDanmu.Im.Message.SessionRaw
	(*Message_MessageRecallRequest)(nil),                       // 102: AcFunDanmu.Im.Message.MessageRecallRequest
	(*Message_MessageRecallResponse)(nil),                      // 103: AcFunDanmu.Im.Message.MessageRecallResponse
	(*Message_MessageReceiptRequest)(nil),                      // 104: AcFunDanmu.Im.Message.MessageReceiptRequest
	(*Message_MessageReceiptResponse)(nil),                     // 105: AcFunDanmu.Im.Message.MessageReceiptResponse
	(*Message_MessageReceiptInfo)(nil),                         // 106: AcFunDanmu.Im.Message.MessageReceiptInfo
	(*Message_MessageReceiptCountGetRequest)(nil),              // 107: AcFunDanmu.Im.Message.MessageReceiptCountGetRequest
	(*Message_MessageReceiptCountGetResponse)(nil),             // 108: AcFunDanmu.Im.Message.MessageReceiptCountGetResponse
	(*Message_MessageReceiptStatus)(nil),                       // 109: AcFunDanmu.Im.Message.MessageReceiptStatus
	(*Message_MessageReceiptDetailGetRequest)(nil),             // 110: AcFunDanmu.Im.Message.MessageReceiptDetailGetRequest
	(*Message_MessageReceiptDetailGetResponse)(nil),            // 111: AcFunDanmu.Im.Message.MessageReceiptDetailGetResponse
	(*Message_MessageBatchSendRequest)(nil),                    // 112: AcFunDanmu.Im.Message.MessageBatchSendRequest
	(*Message_MessageBatchSendResponse)(nil),                   // 113: AcFunDanmu.Im.Message.MessageBatchSendResponse
	(*Message_ImageAttachment)(nil),                            // 114: AcFunDanmu.Im.Message.ImageAttachment
	(*Message_AudioAttachment)(nil),                            // 115: AcFunDanmu.Im.Message.AudioAttachment
	(*Message_GifAttachment)(nil),                              // 116: AcFunDanmu.Im.Message.GifAttachment
	(*Message_Attachment)(nil),                                 // 117: AcFunDanmu.Im.Message.Attachment
	(*Message_Attachments)(nil),                                // 118: AcFunDanmu.Im.Message.Attachments
	(*Message_PlaceHolderMessage)(nil),                         // 119: AcFunDanmu.Im.Message.PlaceHolderMessage
	(*Message_ImageTextMessage)(nil),                           // 120: AcFunDanmu.Im.Message.ImageTextMessage
	(*Message_RichTextMessage)(nil),                            // 121: AcFunDanmu.Im.Message.RichTextMessage
	(*Message_NoticeMessage)(nil),                              // 122: AcFunDanmu.Im.Message.NoticeMessage
	(*Message_RichTextNoticeMessage)(nil),                      // 123: AcFunDanmu.Im.Message.RichTextNoticeMessage
	nil,                                                        // 124: AcFunDanmu.Im.Message.SessionRaw.RawEntry
	(*Message_RichTextNoticeMessage_RichTextItem)(nil),         // 125: AcFunDanmu.Im.Message.RichTextNoticeMessage.RichTextItem
	(*Cloud_Channel)(nil),                                      // 126: AcFunDanmu.Im.Cloud.Channel
	(*Cloud_Config)(nil),                                       // 127: AcFunDanmu.Im.Cloud.Config
	(*Cloud_Profile)(nil),                                      // 128: AcFunDanmu.Im.Cloud.Profile
	(*Cloud_Data)(nil),                                         // 129: AcFunDanmu.Im.Cloud.Data
	(*Cloud_Message)(nil),                                      // 130: AcFunDanmu.Im.Cloud.Message
	(*Cloud_Channel_ChannelSubscribeRequest)(nil),              // 131: AcFunDanmu.Im.Cloud.Channel.ChannelSubscribeRequest
	(*Cloud_Channel_ChannelSubscribeResponse)(nil),             // 132: AcFunDanmu.Im.Cloud.Channel.ChannelSubscribeResponse
	(*Cloud_Channel_ChannelUnsubscribeRequest)(nil),            // 133: AcFunDanmu.Im.Cloud.Channel.ChannelUnsubscribeRequest
	(*Cloud_Channel_ChannelSubscribersGetRequest)(nil),         // 134: AcFunDanmu.Im.Cloud.Channel.ChannelSubscribersGetRequest
	(*Cloud_Channel_ChannelSubscribersGetResposne)(nil),        // 135: AcFunDanmu.Im.Cloud.Channel.ChannelSubscribersGetResposne
	(*Cloud_Channel_ChannelBasicInfo)(nil),                     // 136: AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfo
	(*Cloud_Channel_UserActionInfo)(nil),                       // 137: AcFunDanmu.Im.Cloud.Channel.UserActionInfo
	(*Cloud_Channel_ChannelBasicInfoGetRequest)(nil),           // 138: AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfoGetRequest
	(*Cloud_Channel_ChannelBasicInfoGetResponse)(nil),          // 139: AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfoGetResponse
	(*Cloud_Channel_ChannelHeartbeatRequest)(nil),              // 140: AcFunDanmu.Im.Cloud.Channel.ChannelHeartbeatRequest
	(*Cloud_Channel_ChannelHeartbeatResponse)(nil),             // 141: AcFunDanmu.Im.Cloud.Channel.ChannelHeartbeatResponse
	(*Cloud_Channel_ChannelBasicInfoNotify)(nil),               // 142: AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfoNotify
	(*Cloud_Config_ClientConfigGetRequest)(nil),                // 143: AcFunDanmu.Im.Cloud.Config.ClientConfigGetRequest
	(*Cloud_Config_ClientConfigGetResponse)(nil),               // 144: AcFunDanmu.Im.Cloud.Config.ClientConfigGetResponse
	(*Cloud_Config_NetworkQualityDetectionConfig)(nil),         // 145: AcFunDanmu.Im.Cloud.Config.NetworkQualityDetectionConfig
	(*Cloud_Config_ClientConfig)(nil),                          // 146: AcFunDanmu.Im.Cloud.Config.ClientConfig
	(*Cloud_Profile_UserOnlineStatus)(nil),                     // 147: AcFunDanmu.Im.Cloud.Profile.UserOnlineStatus
	(*Cloud_Profile_ProfileBatchOnlineTimeRequest)(nil),        // 148: AcFunDanmu.Im.Cloud.Profile.ProfileBatchOnlineTimeRequest
	(*Cloud_Profile_ProfileBatchOnlineTimeResponse)(nil),       // 149: AcFunDanmu.Im.Cloud.Profile.ProfileBatchOnlineTimeResponse
	(*Cloud_Data_Update)(nil),                                  // 150: AcFunDanmu.Im.Cloud.Data.Update
	(*Cloud_Data_Update_KsImDataUpdatePushPayload)(nil),        // 151: AcFunDanmu.Im.Cloud.Data.Update.KsImDataUpdatePushPayload
	(*Cloud_Data_Update_GroupInfoDataUpdate)(nil),              // 152: AcFunDanmu.Im.Cloud.Data.Update.GroupInfoDataUpdate
	(*Cloud_Data_Update_GroupMemberListUpdate)(nil),            // 153: AcFunDanmu.Im.Cloud.Data.Update.GroupMemberListUpdate
	(*Cloud_Data_Update_YouBeKicked)(nil),                      // 154: AcFunDanmu.Im.Cloud.Data.Update.YouBeKicked
	(*Cloud_Data_Update_MessageRead)(nil),                      // 155: AcFunDanmu.Im.Cloud.Data.Update.MessageRead
	(*Cloud_Data_Update_MessageReceipt)(nil),                   // 156: AcFunDanmu.Im.Cloud.Data.Update.MessageReceipt
	(*Cloud_Message_ImcRecalledMessage)(nil),                   // 157: AcFunDanmu.Im.Cloud.Message.ImcRecalledMessage
	(*Cloud_Message_ImcReplaceMessage)(nil),                    // 158: AcFunDanmu.Im.Cloud.Message.ImcReplaceMessage
	(*Cloud_Message_Text)(nil),                                 // 159: AcFunDanmu.Im.Cloud.Message.Text
	(*Cloud_Message_Image)(nil),                                // 160: AcFunDanmu.Im.Cloud.Message.Image
	(*Cloud_Message_Audio)(nil),                                // 161: AcFunDanmu.Im.Cloud.Message.Audio
	(*Cloud_Message_Video)(nil),                                // 162: AcFunDanmu.Im.Cloud.Message.Video
	(*Cloud_Message_Custon)(nil),                               // 163: AcFunDanmu.Im.Cloud.Message.Custon
	(*Cloud_Message_PicUrl)(nil),                               // 164: AcFunDanmu.Im.Cloud.Message.PicUrl
	(*Cloud_Message_Emoticon)(nil),                             // 165: AcFunDanmu.Im.Cloud.Message.Emoticon
	(*Cloud_Message_File)(nil),                                 // 166: AcFunDanmu.Im.Cloud.Message.File
	(*Cloud_Message_Reference)(nil),                            // 167: AcFunDanmu.Im.Cloud.Message.Reference
	(*Cloud_Message_ForwardMessageContent)(nil),                // 168: AcFunDanmu.Im.Cloud.Message.ForwardMessageContent
	(*Cloud_Message_NoticePlaceholderMeta)(nil),                // 169: AcFunDanmu.Im.Cloud.Message.NoticePlaceholderMeta
	(*Cloud_Message_ImcNoticeMessage)(nil),                     // 170: AcFunDanmu.Im.Cloud.Message.ImcNoticeMessage
	(*Cloud_Message_LinkedProfileMetaInfo)(nil),                // 171: AcFunDanmu.Im.Cloud.Message.LinkedProfileMetaInfo
	(*Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo)(nil), // 172: AcFunDanmu.Im.Cloud.Message.ConfirmInviteIntoGroupNoticeMetaInfo
	(*Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo)(nil),   // 173: AcFunDanmu.Im.Cloud.Message.ConfirmJoinIntoGroupNoticeMetaInfo
	(*Cloud_Message_GroupCreateRequest)(nil),                   // 174: AcFunDanmu.Im.Cloud.Message.GroupCreateRequest
	(*Cloud_Message_GroupCreateReponse)(nil),                   // 175: AcFunDanmu.Im.Cloud.Message.GroupCreateReponse
	(*Cloud_Message_GroupDeleteRequest)(nil),                   // 176: AcFunDanmu.Im.Cloud.Message.GroupDeleteRequest
	(*Cloud_Message_GroupDeleteResponse)(nil),                  // 177: AcFunDanmu.Im.Cloud.Message.GroupDeleteResponse
	(*Cloud_Message_GroupInviteRequest)(nil),                   // 178: AcFunDanmu.Im.Cloud.Message.GroupInviteRequest
	(*Cloud_Message_GroupInvideResponse)(nil),                  // 179: AcFunDanmu.Im.Cloud.Message.GroupInvideResponse
	(*Cloud_Message_GroupJoinRequest)(nil),                     // 180: AcFunDanmu.Im.Cloud.Message.GroupJoinRequest
	(*Cloud_Message_GroupJoinResponse)(nil),                    // 181: AcFunDanmu.Im.Cloud.Message.GroupJoinResponse
	(*Cloud_Message_GroupJoinRequestAckRequest)(nil),           // 182: AcFunDanmu.Im.Cloud.Message.GroupJoinRequestAckRequest
	(*Cloud_Message_GroupJoinRequestAckResponse)(nil),          // 183: AcFunDanmu.Im.Cloud.Message.GroupJoinRequestAckResponse
	(*Cloud_Message_GroupJoinRequestGetRequest)(nil),           // 184: AcFunDanmu.Im.Cloud.Message.GroupJoinRequestGetRequest
	(*Cloud_Message_GroupJoinRequestGetResponse)(nil),          // 185: AcFunDanmu.Im.Cloud.Message.GroupJoinRequestGetResponse
	(*Cloud_Message_GroupJoinRequestCancelRequest)(nil),        // 186: AcFunDanmu.Im.Cloud.Message.GroupJoinRequestCancelRequest
	(*Cloud_Message_GroupJoinRequestCancelResposne)(nil),       // 187: AcFunDanmu.Im.Cloud.Message.GroupJoinRequestCancelResposne
	(*Cloud_Message_GroupQuitRequest)(nil),                     // 188: AcFunDanmu.Im.Cloud.Message.GroupQuitRequest
	(*Cloud_Message_GroupQuitResponse)(nil),                    // 189: AcFunDanmu.Im.Cloud.Message.GroupQuitResponse
	(*Cloud_Message_GroupKickRequest)(nil),                     // 190: AcFunDanmu.Im.Cloud.Message.GroupKickRequest
	(*Cloud_Message_GroupKickResponse)(nil),                    // 191: AcFunDanmu.Im.Cloud.Message.GroupKickResponse
	(*Cloud_Message_GroupSettingRequest)(nil),                  // 192: AcFunDanmu.Im.Cloud.Message.GroupSettingRequest
	(*Cloud_Message_GroupSettingRename)(nil),                   // 193: AcFunDanmu.Im.Cloud.Message.GroupSettingRename
	(*Cloud_Message_GroupSettingDesc)(nil),                     // 194: AcFunDanmu.Im.Cloud.Message.GroupSettingDesc
	(*Cloud_Message_GroupSettingJoinNeedPermission)(nil),       // 195: AcFunDanmu.Im.Cloud.Message.GroupSettingJoinNeedPermission
	(*Cloud_Message_GroupSettingInvitePermission)(nil),         // 196: AcFunDanmu.Im.Cloud.Message.GroupSettingInvitePermission
	(*Cloud_Message_GroupSettingResponse)(nil),                 // 197: AcFunDanmu.Im.Cloud.Message.GroupSettingResponse
	(*Cloud_Message_GroupMemberSettingRequest)(nil),            // 198: AcFunDanmu.Im.Cloud.Message.GroupMemberSettingRequest
	(*Cloud_Message_SetUserNickname)(nil),                      // 199: AcFunDanmu.Im.Cloud.Message.SetUserNickname
	(*Cloud_Message_SetUserAntiDisturbing)(nil),                // 200: AcFunDanmu.Im.Cloud.Message.SetUserAntiDisturbing
	(*Cloud_Message_GroupMemberSettingResponse)(nil),           // 201: AcFunDanmu.Im.Cloud.Message.GroupMemberSettingResponse
	(*Cloud_Message_GroupMemberListGetRequest)(nil),            // 202: AcFunDanmu.Im.Cloud.Message.GroupMemberListGetRequest
	(*Cloud_Message_GroupMemberListGetResponse)(nil),           // 203: AcFunDanmu.Im.Cloud.Message.GroupMemberListGetResponse
	(*Cloud_Message_GroupMemberGetRequest)(nil),                // 204: AcFunDanmu.Im.Cloud.Message.GroupMemberGetRequest
	(*Cloud_Message_GroupMemberGetResponse)(nil),               // 205: AcFunDanmu.Im.Cloud.Message.GroupMemberGetResponse
	(*Cloud_Message_UserGroupListRequest)(nil),                 // 206: AcFunDanmu.Im.Cloud.Message.UserGroupListRequest
	(*Cloud_Message_UserGroupListResponse)(nil),                // 207: AcFunDanmu.Im.Cloud.Message.UserGroupListResponse
	(*Cloud_Message_UserGroupRecord)(nil),                      // 208: AcFunDanmu.Im.Cloud.Message.UserGroupRecord
	(*Cloud_Message_UserGroupGetRequest)(nil),                  // 209: AcFunDanmu.Im.Cloud.Message.UserGroupGetRequest
	(*Cloud_Message_UserGroupGetResponse)(nil),                 // 210: AcFunDanmu.Im.Cloud.Message.UserGroupGetResponse
	(*Cloud_Message_UserGroupInfo)(nil),                        // 211: AcFunDanmu.Im.Cloud.Message.UserGroupInfo
	(*Cloud_Message_GroupMember)(nil),                          // 212: AcFunDanmu.Im.Cloud.Message.GroupMember
	(*Cloud_Message_GroupInfo)(nil),                            // 213: AcFunDanmu.Im.Cloud.Message.GroupInfo
	(*Cloud_Message_GroupBasicInfo)(nil),                       // 214: AcFunDanmu.Im.Cloud.Message.GroupBasicInfo
	(*Cloud_Message_GroupMemberBriefInfo)(nil),                 // 215: AcFunDanmu.Im.Cloud.Message.GroupMemberBriefInfo
	(*Cloud_Message_ImcPassThroughRequest)(nil),                // 216: AcFunDanmu.Im.Cloud.Message.ImcPassThroughRequest
	(*Cloud_Message_ImcPassThroughResponse)(nil),               // 217: AcFunDanmu.Im.Cloud.Message.ImcPassThroughResponse
	(*Cloud_Message_ImcPassThroughPush)(nil),                   // 218: AcFunDanmu.Im.Cloud.Message.ImcPassThroughPush
	(*Cloud_Message_InputtingContent)(nil),                     // 219: AcFunDanmu.Im.Cloud.Message.InputtingContent
	(*Cloud_Message_Emoticon_Code)(nil),                        // 220: AcFunDanmu.Im.Cloud.Message.Emoticon.Code
	(*Cloud_Message_Reference_ReferenceMessage)(nil),           // 221: AcFunDanmu.Im.Cloud.Message.Reference.ReferenceMessage
}
var file_Im_proto_depIdxs = []int32{
	2,   // 0: AcFunDanmu.Im.Basic.PacketHeader.encodingType:type_name -> AcFunDanmu.Im.Basic.PacketHeader.EncodingType
	3,   // 1: AcFunDanmu.Im.Basic.PacketHeader.encryptionMode:type_name -> AcFunDanmu.Im.Basic.PacketHeader.EncryptionMode
	55,  // 2: AcFunDanmu.Im.Basic.PacketHeader.tokenInfo:type_name -> AcFunDanmu.Im.Basic.TokenInfo
	4,   // 3: AcFunDanmu.Im.Basic.PacketHeader.features:type_name -> AcFunDanmu.Im.Basic.PacketHeader.Feature
	41,  // 4: AcFunDanmu.Im.Basic.UserInstance.user:type_name -> AcFunDanmu.Im.Basic.User
	42,  // 5: AcFunDanmu.Im.Basic.UpstreamPayload.userInstance:type_name -> AcFunDanmu.Im.Basic.UserInstance
	57,  // 6: AcFunDanmu.Im.Basic.UpstreamPayload.settingInfo:type_name -> AcFunDanmu.Im.Basic.SettingInfo
	61,  // 7: AcFunDanmu.Im.Basic.UpstreamPayload.requestBasicInfo:type_name -> AcFunDanmu.Im.Basic.RequestBasicInfo
	66,  // 8: AcFunDanmu.Im.Basic.UpstreamPayload.frontendInfo:type_name -> AcFunDanmu.Im.Basic.FrontendInfo
	5,   // 9: AcFunDanmu.Im.Basic.PingRequest.pingType:type_name -> AcFunDanmu.Im.Basic.PingRequest.PingType
	58,  // 10: AcFunDanmu.Im.Basic.RegisterRequest.appInfo:type_name -> AcFunDanmu.Im.Basic.AppInfo
	59,  // 11: AcFunDanmu.Im.Basic.RegisterRequest.deviceInfo:type_name -> AcFunDanmu.Im.Basic.DeviceInfo
	60,  // 12: AcFunDanmu.Im.Basic.RegisterRequest.envInfo:type_name -> AcFunDanmu.Im.Basic.EnvInfo
	6,   // 13: AcFunDanmu.Im.Basic.RegisterRequest.presenceStatus:type_name -> AcFunDanmu.Im.Basic.RegisterRequest.PresenceStatus
	7,   // 14: AcFunDanmu.Im.Basic.RegisterRequest.appActiveStatus:type_name -> AcFunDanmu.Im.Basic.RegisterRequest.ActiveStatus
	56,  // 15: AcFunDanmu.Im.Basic.RegisterRequest.pushServiceToken:type_name -> AcFunDanmu.Im.Basic.PushServiceToken
	56,  // 16: AcFunDanmu.Im.Basic.RegisterRequest.pushServiceTokenList:type_name -> AcFunDanmu.Im.Basic.PushServiceToken
	65,  // 17: AcFunDanmu.Im.Basic.RegisterRequest.ztCommonInfo:type_name -> AcFunDanmu.Im.Basic.ZtCommonInfo
	49,  // 18: AcFunDanmu.Im.Basic.RegisterResponse.accessPointsConfig:type_name -> AcFunDanmu.Im.Basic.AccessPointsConfig
	64,  // 19: AcFunDanmu.Im.Basic.RegisterResponse.sdkOption:type_name -> AcFunDanmu.Im.Basic.SdkOption
	49,  // 20: AcFunDanmu.Im.Basic.RegisterResponse.accessPointsCOnfigIpv6:type_name -> AcFunDanmu.Im.Basic.AccessPointsConfig
	54,  // 21: AcFunDanmu.Im.Basic.AccessPointsConfig.optimalAps:type_name -> AcFunDanmu.Im.Basic.AccessPoint
	54,  // 22: AcFunDanmu.Im.Basic.AccessPointsConfig.backupAps:type_name -> AcFunDanmu.Im.Basic.AccessPoint
	54,  // 23: AcFunDanmu.Im.Basic.AccessPointsConfig.foreceLastConnectedAp:type_name -> AcFunDanmu.Im.Basic.AccessPoint
	6,   // 24: AcFunDanmu.Im.Basic.KeepAliveRequest.presenceStatus:type_name -> AcFunDanmu.Im.Basic.RegisterRequest.PresenceStatus
	7,   // 25: AcFunDanmu.Im.Basic.KeepAliveRequest.appActiveStatus:type_name -> AcFunDanmu.Im.Basic.RegisterRequest.ActiveStatus
	56,  // 26: AcFunDanmu.Im.Basic.KeepAliveRequest.pushServiceToken:type_name -> AcFunDanmu.Im.Basic.PushServiceToken
	56,  // 27: AcFunDanmu.Im.Basic.KeepAliveRequest.pushServiceTokenList:type_name -> AcFunDanmu.Im.Basic.PushServiceToken
	49,  // 28: AcFunDanmu.Im.Basic.KeepAliveResponse.accessPointsConfig:type_name -> AcFunDanmu.Im.Basic.AccessPointsConfig
	49,  // 29: AcFunDanmu.Im.Basic.KeepAliveResponse.accessPointsConfigIpv6:type_name -> AcFunDanmu.Im.Basic.AccessPointsConfig
	8,   // 30: AcFunDanmu.Im.Basic.AccessPoint.addressType:type_name -> AcFunDanmu.Im.Basic.AccessPoint.AddressType
	9,   // 31: AcFunDanmu.Im.Basic.TokenInfo.tokenType:type_name -> AcFunDanmu.Im.Basic.TokenInfo.TokenType
	10,  // 32: AcFunDanmu.Im.Basic.PushServiceToken.pushType:type_name -> AcFunDanmu.Im.Basic.PushServiceToken.PushType
	11,  // 33: AcFunDanmu.Im.Basic.DeviceInfo.platformType:type_name -> AcFunDanmu.Im.Basic.DeviceInfo.PlatformType
	12,  // 34: AcFunDanmu.Im.Basic.EnvInfo.networkType:type_name -> AcFunDanmu.Im.Basic.EnvInfo.NetworkType
	11,  // 35: AcFunDanmu.Im.Basic.RequestBasicInfo.clientType:type_name -> AcFunDanmu.Im.Basic.DeviceInfo.PlatformType
	58,  // 36: AcFunDanmu.Im.Basic.RequestBasicInfo.appInfo:type_name -> AcFunDanmu.Im.Basic.AppInfo
	59,  // 37: AcFunDanmu.Im.Basic.RequestBasicInfo.deviceInfo:type_name -> AcFunDanmu.Im.Basic.DeviceInfo
	60,  // 38: AcFunDanmu.Im.Basic.RequestBasicInfo.envInfo:type_name -> AcFunDanmu.Im.Basic.EnvInfo
	41,  // 39: AcFunDanmu.Im.Message.Message.fromUser:type_name -> AcFunDanmu.Im.Basic.User
	41,  // 40: AcFunDanmu.Im.Message.Message.toUser:type_name -> AcFunDanmu.Im.Basic.User
	41,  // 41: AcFunDanmu.Im.Message.Message.receivers:type_name -> AcFunDanmu.Im.Basic.User
	41,  // 42: AcFunDanmu.Im.Message.Message.excludeReceivers:type_name -> AcFunDanmu.Im.Basic.User
	75,  // 43: AcFunDanmu.Im.Message.Message.reminder:type_name -> AcFunDanmu.Im.Message.Reminder
	41,  // 44: AcFunDanmu.Im.Message.PullOldRequest.target:type_name -> AcFunDanmu.Im.Basic.User
	67,  // 45: AcFunDanmu.Im.Message.PullOldResponse.messages:type_name -> AcFunDanmu.Im.Message.Message
	41,  // 46: AcFunDanmu.Im.Message.PullNewRequest.target:type_name -> AcFunDanmu.Im.Basic.User
	67,  // 47: AcFunDanmu.Im.Message.PullNewResponse.messages:type_name -> AcFunDanmu.Im.Message.Message
	62,  // 48: AcFunDanmu.Im.Message.SessionListRequest.syncCookie:type_name -> AcFunDanmu.Im.Basic.SyncCookie
	41,  // 49: AcFunDanmu.Im.Message.ChatSession.target:type_name -> AcFunDanmu.Im.Basic.User
	67,  // 50: AcFunDanmu.Im.Message.ChatSession.latestMessage:type_name -> AcFunDanmu.Im.Message.Message
	15,  // 51: AcFunDanmu.Im.Message.ChatSession.chatTargetType:type_name -> AcFunDanmu.Im.Message.ChatTargetType
	76,  // 52: AcFunDanmu.Im.Message.ChatSession.remindBody:type_name -> AcFunDanmu.Im.Message.RemindBody
	76,  // 53: AcFunDanmu.Im.Message.Reminder.remindBody:type_name -> AcFunDanmu.Im.Message.RemindBody
	17,  // 54: AcFunDanmu.Im.Message.RemindBody.remindType:type_name -> AcFunDanmu.Im.Message.RemindBody.RemindType
	15,  // 55: AcFunDanmu.Im.Message.ChatTarget.targetType:type_name -> AcFunDanmu.Im.Message.ChatTargetType
	62,  // 56: AcFunDanmu.Im.Message.SessionListResponse.syncCookie:type_name -> AcFunDanmu.Im.Basic.SyncCookie
	74,  // 57: AcFunDanmu.Im.Message.SessionListResponse.sessions:type_name -> AcFunDanmu.Im.Message.ChatSession
	74,  // 58: AcFunDanmu.Im.Message.SessionPageListResponse.sessions:type_name -> AcFunDanmu.Im.Message.ChatSession
	15,  // 59: AcFunDanmu.Im.Message.SessionRemoveRequest.chatTargetType:type_name -> AcFunDanmu.Im.Message.ChatTargetType
	77,  // 60: AcFunDanmu.Im.Message.SessionCleanRequest.chatTarget:type_name -> AcFunDanmu.Im.Message.ChatTarget
	15,  // 61: AcFunDanmu.Im.Message.MessageDeleteRequest.chatTargetType:type_name -> AcFunDanmu.Im.Message.ChatTargetType
	77,  // 62: AcFunDanmu.Im.Message.MessageCancelRequest.chatTarget:type_name -> AcFunDanmu.Im.Message.ChatTarget
	77,  // 63: AcFunDanmu.Im.Message.MessageClearRequest.chatTarget:type_name -> AcFunDanmu.Im.Message.ChatTarget
	77,  // 64: AcFunDanmu.Im.Message.ReadSeqInfo.chatTarget:type_name -> AcFunDanmu.Im.Message.ChatTarget
	77,  // 65: AcFunDanmu.Im.Message.MessageReadSeqRequest.chatTarget:type_name -> AcFunDanmu.Im.Message.ChatTarget
	91,  // 66: AcFunDanmu.Im.Message.MessageReadSeqResponse.readSeqInfo:type_name -> AcFunDanmu.Im.Message.ReadSeqInfo
	15,  // 67: AcFunDanmu.Im.Message.MessageReadPush.chatTargetType:type_name -> AcFunDanmu.Im.Message.ChatTargetType
	77,  // 68: AcFunDanmu.Im.Message.SesionStickyOnTopRequest.chatTarget:type_name -> AcFunDanmu.Im.Message.ChatTarget
	74,  // 69: AcFunDanmu.Im.Message.SessionStickyOnTopResponse.session:type_name -> AcFunDanmu.Im.Message.ChatSession
	124, // 70: AcFunDanmu.Im.Message.SessionRaw.raw:type_name -> AcFunDanmu.Im.Message.SessionRaw.RawEntry
	77,  // 71: AcFunDanmu.Im.Message.MessageRecallRequest.chatTarget:type_name -> AcFunDanmu.Im.Message.ChatTarget
	106, // 72: AcFunDanmu.Im.Message.MessageReceiptRequest.messageReceiptInfo:type_name -> AcFunDanmu.Im.Message.MessageReceiptInfo
	77,  // 73: AcFunDanmu.Im.Message.MessageReceiptRequest.chatTarget:type_name -> AcFunDanmu.Im.Message.ChatTarget
	77,  // 74: AcFunDanmu.Im.Message.MessageReceiptCountGetRequest.chatTarget:type_name -> AcFunDanmu.Im.Message.ChatTarget
	109, // 75: AcFunDanmu.Im.Message.MessageReceiptCountGetResponse.status:type_name -> AcFunDanmu.Im.Message.MessageReceiptStatus
	77,  // 76: AcFunDanmu.Im.Message.MessageReceiptDetailGetRequest.chatTarget:type_name -> AcFunDanmu.Im.Message.ChatTarget
	41,  // 77: AcFunDanmu.Im.Message.MessageReceiptDetailGetResponse.readUser:type_name -> AcFunDanmu.Im.Basic.User
	41,  // 78: AcFunDanmu.Im.Message.MessageReceiptDetailGetResponse.unreadUser:type_name -> AcFunDanmu.Im.Basic.User
	67,  // 79: AcFunDanmu.Im.Message.MessageBatchSendRequest.message:type_name -> AcFunDanmu.Im.Message.Message
	68,  // 80: AcFunDanmu.Im.Message.MessageBatchSendResponse.response:type_name -> AcFunDanmu.Im.Message.SendMessageResponse
	114, // 81: AcFunDanmu.Im.Message.Attachment.imageAttachment:type_name -> AcFunDanmu.Im.Message.ImageAttachment
	115, // 82: AcFunDanmu.Im.Message.Attachment.audioAttachment:type_name -> AcFunDanmu.Im.Message.AudioAttachment
	117, // 83: AcFunDanmu.Im.Message.Attachments.attachments:type_name -> AcFunDanmu.Im.Message.Attachment
	123, // 84: AcFunDanmu.Im.Message.RichTextMessage.richTextMessage:type_name -> AcFunDanmu.Im.Message.RichTextNoticeMessage
	123, // 85: AcFunDanmu.Im.Message.NoticeMessage.richTextNotice:type_name -> AcFunDanmu.Im.Message.RichTextNoticeMessage
	63,  // 86: AcFunDanmu.Im.Message.NoticeMessage.i18nCopyWriting:type_name -> AcFunDanmu.Im.Basic.I18nCopyWriting
	125, // 87: AcFunDanmu.Im.Message.RichTextNoticeMessage.items:type_name -> AcFunDanmu.Im.Message.RichTextNoticeMessage.RichTextItem
	41,  // 88: AcFunDanmu.Im.Cloud.Channel.ChannelSubscribersGetResposne.subscriber:type_name -> AcFunDanmu.Im.Basic.User
	41,  // 89: AcFunDanmu.Im.Cloud.Channel.UserActionInfo.user:type_name -> AcFunDanmu.Im.Basic.User
	18,  // 90: AcFunDanmu.Im.Cloud.Channel.UserActionInfo.action:type_name -> AcFunDanmu.Im.Cloud.Channel.UserAction
	136, // 91: AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfoGetResponse.basicInfo:type_name -> AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfo
	137, // 92: AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfoNotify.userActionInfo:type_name -> AcFunDanmu.Im.Cloud.Channel.UserActionInfo
	136, // 93: AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfoNotify.basicInfo:type_name -> AcFunDanmu.Im.Cloud.Channel.ChannelBasicInfo
	146, // 94: AcFunDanmu.Im.Cloud.Config.ClientConfigGetResponse.clientConfig:type_name -> AcFunDanmu.Im.Cloud.Config.ClientConfig
	145, // 95: AcFunDanmu.Im.Cloud.Config.ClientConfig.networkQualityDetectionConfig:type_name -> AcFunDanmu.Im.Cloud.Config.NetworkQualityDetectionConfig
	41,  // 96: AcFunDanmu.Im.Cloud.Profile.UserOnlineStatus.user:type_name -> AcFunDanmu.Im.Basic.User
	19,  // 97: AcFunDanmu.Im.Cloud.Profile.UserOnlineStatus.status:type_name -> AcFunDanmu.Im.Cloud.Profile.UserOnlineStatus.Status
	41,  // 98: AcFunDanmu.Im.Cloud.Profile.ProfileBatchOnlineTimeRequest.user:type_name -> AcFunDanmu.Im.Basic.User
	147, // 99: AcFunDanmu.Im.Cloud.Profile.ProfileBatchOnlineTimeResponse.userOnlineStatus:type_name -> AcFunDanmu.Im.Cloud.Profile.UserOnlineStatus
	151, // 100: AcFunDanmu.Im.Cloud.Data.Update.KsImDataUpdatePushPayload.type:type_name -> AcFunDanmu.Im.Cloud.Data.Update.KsImDataUpdatePushPayload
	15,  // 101: AcFunDanmu.Im.Cloud.Data.Update.MessageRead.chatTargetType:type_name -> AcFunDanmu.Im.Message.ChatTargetType
	77,  // 102: AcFunDanmu.Im.Cloud.Data.Update.MessageReceipt.chatTarget:type_name -> AcFunDanmu.Im.Message.ChatTarget
	109, // 103: AcFunDanmu.Im.Cloud.Data.Update.MessageReceipt.receiptStatus:type_name -> AcFunDanmu.Im.Message.MessageReceiptStatus
	67,  // 104: AcFunDanmu.Im.Cloud.Message.ImcRecalledMessage.originMsg:type_name -> AcFunDanmu.Im.Message.Message
	170, // 105: AcFunDanmu.Im.Cloud.Message.ImcRecalledMessage.noticeMsg:type_name -> AcFunDanmu.Im.Cloud.Message.ImcNoticeMessage
	67,  // 106: AcFunDanmu.Im.Cloud.Message.ImcReplaceMessage.replaceMsg:type_name -> AcFunDanmu.Im.Message.Message
	31,  // 107: AcFunDanmu.Im.Cloud.Message.Emoticon.type:type_name -> AcFunDanmu.Im.Cloud.Message.Emoticon.Type
	164, // 108: AcFunDanmu.Im.Cloud.Message.Emoticon.bigUrl:type_name -> AcFunDanmu.Im.Cloud.Message.PicUrl
	220, // 109: AcFunDanmu.Im.Cloud.Message.Emoticon.emoticonCOde:type_name -> AcFunDanmu.Im.Cloud.Message.Emoticon.Code
	67,  // 110: AcFunDanmu.Im.Cloud.Message.Reference.originMsg:type_name -> AcFunDanmu.Im.Message.Message
	221, // 111: AcFunDanmu.Im.Cloud.Message.Reference.referenceMsg:type_name -> AcFunDanmu.Im.Cloud.Message.Reference.ReferenceMessage
	67,  // 112: AcFunDanmu.Im.Cloud.Message.ForwardMessageContent.message:type_name -> AcFunDanmu.Im.Message.Message
	169, // 113: AcFunDanmu.Im.Cloud.Message.ImcNoticeMessage.noticePlaceholderMeta:type_name -> AcFunDanmu.Im.Cloud.Message.NoticePlaceholderMeta
	24,  // 114: AcFunDanmu.Im.Cloud.Message.ConfirmInviteIntoGroupNoticeMetaInfo.status:type_name -> AcFunDanmu.Im.Cloud.Message.JoinRequestStatus
	24,  // 115: AcFunDanmu.Im.Cloud.Message.ConfirmJoinIntoGroupNoticeMetaInfo.status:type_name -> AcFunDanmu.Im.Cloud.Message.JoinRequestStatus
	41,  // 116: AcFunDanmu.Im.Cloud.Message.GroupCreateRequest.members:type_name -> AcFunDanmu.Im.Basic.User
	213, // 117: AcFunDanmu.Im.Cloud.Message.GroupCreateReponse.groupInfo:type_name -> AcFunDanmu.Im.Cloud.Message.GroupInfo
	212, // 118: AcFunDanmu.Im.Cloud.Message.GroupCreateReponse.members:type_name -> AcFunDanmu.Im.Cloud.Message.GroupMember
	41,  // 119: AcFunDanmu.Im.Cloud.Message.GroupInviteRequest.members:type_name -> AcFunDanmu.Im.Basic.User
	32,  // 120: AcFunDanmu.Im.Cloud.Message.GroupInvideResponse.inviteStatus:type_name -> AcFunDanmu.Im.Cloud.Message.GroupInvideResponse.InviteStatus
	41,  // 121: AcFunDanmu.Im.Cloud.Message.GroupJoinRequest.inviter:type_name -> AcFunDanmu.Im.Basic.User
	23,  // 122: AcFunDanmu.Im.Cloud.Message.GroupJoinRequest.findType:type_name -> AcFunDanmu.Im.Cloud.Message.GroupFindType
	33,  // 123: AcFunDanmu.Im.Cloud.Message.GroupJoinResponse.joinStatus:type_name -> AcFunDanmu.Im.Cloud.Message.GroupJoinResponse.JoinStatus
	34,  // 124: AcFunDanmu.Im.Cloud.Message.GroupJoinRequestAckRequest.groupJoinAckType:type_name -> AcFunDanmu.Im.Cloud.Message.GroupJoinRequestAckRequest.GroupJoinAckType
	41,  // 125: AcFunDanmu.Im.Cloud.Message.GroupJoinRequestGetResponse.inviter:type_name -> AcFunDanmu.Im.Basic.User
	41,  // 126: AcFunDanmu.Im.Cloud.Message.GroupJoinRequestGetResponse.invitees:type_name -> AcFunDanmu.Im.Basic.User
	23,  // 127: AcFunDanmu.Im.Cloud.Message.GroupJoinRequestGetResponse.findWay:type_name -> AcFunDanmu.Im.Cloud.Message.GroupFindType
	24,  // 128: AcFunDanmu.Im.Cloud.Message.GroupJoinRequestGetResponse.status:type_name -> AcFunDanmu.Im.Cloud.Message.JoinRequestStatus
	41,  // 129: AcFunDanmu.Im.Cloud.Message.GroupJoinRequestCancelResposne.inviter:type_name -> AcFunDanmu.Im.Basic.User
	41,  // 130: AcFunDanmu.Im.Cloud.Message.GroupJoinRequestCancelResposne.invitees:type_name -> AcFunDanmu.Im.Basic.User
	23,  // 131: AcFunDanmu.Im.Cloud.Message.GroupJoinRequestCancelResposne.findWay:type_name -> AcFunDanmu.Im.Cloud.Message.GroupFindType
	24,  // 132: AcFunDanmu.Im.Cloud.Message.GroupJoinRequestCancelResposne.status:type_name -> AcFunDanmu.Im.Cloud.Message.JoinRequestStatus
	41,  // 133: AcFunDanmu.Im.Cloud.Message.GroupKickRequest.target:type_name -> AcFunDanmu.Im.Basic.User
	193, // 134: AcFunDanmu.Im.Cloud.Message.GroupSettingRequest.rename:type_name -> AcFunDanmu.Im.Cloud.Message.GroupSettingRename
	194, // 135: AcFunDanmu.Im.Cloud.Message.GroupSettingRequest.desc:type_name -> AcFunDanmu.Im.Cloud.Message.GroupSettingDesc
	195, // 136: AcFunDanmu.Im.Cloud.Message.GroupSettingRequest.joinNeedPermission:type_name -> AcFunDanmu.Im.Cloud.Message.GroupSettingJoinNeedPermission
	196, // 137: AcFunDanmu.Im.Cloud.Message.GroupSettingRequest.invitePermission:type_name -> AcFunDanmu.Im.Cloud.Message.GroupSettingInvitePermission
	26,  // 138: AcFunDanmu.Im.Cloud.Message.GroupSettingJoinNeedPermission.joinNeedPermission:type_name -> AcFunDanmu.Im.Cloud.Message.JoinNeedPermissionType
	25,  // 139: AcFunDanmu.Im.Cloud.Message.GroupSettingInvitePermission.invitePermissionType:type_name -> AcFunDanmu.Im.Cloud.Message.InvitePermissionType
	199, // 140: AcFunDanmu.Im.Cloud.Message.GroupMemberSettingRequest.setNickname:type_name -> AcFunDanmu.Im.Cloud.Message.SetUserNickname
	200, // 141: AcFunDanmu.Im.Cloud.Message.GroupMemberSettingRequest.setAntiDisturbing:type_name -> AcFunDanmu.Im.Cloud.Message.SetUserAntiDisturbing
	62,  // 142: AcFunDanmu.Im.Cloud.Message.GroupMemberListGetRequest.syncCookie:type_name -> AcFunDanmu.Im.Basic.SyncCookie
	212, // 143: AcFunDanmu.Im.Cloud.Message.GroupMemberListGetResponse.members:type_name -> AcFunDanmu.Im.Cloud.Message.GroupMember
	62,  // 144: AcFunDanmu.Im.Cloud.Message.GroupMemberListGetResponse.syncCookie:type_name -> AcFunDanmu.Im.Basic.SyncCookie
	41,  // 145: AcFunDanmu.Im.Cloud.Message.GroupMemberGetRequest.user:type_name -> AcFunDanmu.Im.Basic.User
	212, // 146: AcFunDanmu.Im.Cloud.Message.GroupMemberGetResponse.member:type_name -> AcFunDanmu.Im.Cloud.Message.GroupMember
	62,  // 147: AcFunDanmu.Im.Cloud.Message.UserGroupListRequest.syncCookie:type_name -> AcFunDanmu.Im.Basic.SyncCookie
	211, // 148: AcFunDanmu.Im.Cloud.Message.UserGroupListResponse.userGroupInfo:type_name -> AcFunDanmu.Im.Cloud.Message.UserGroupInfo
	62,  // 149: AcFunDanmu.Im.Cloud.Message.UserGroupListResponse.syncCookie:type_name -> AcFunDanmu.Im.Basic.SyncCookie
	211, // 150: AcFunDanmu.Im.Cloud.Message.UserGroupGetResponse.userGroupInfo:type_name -> AcFunDanmu.Im.Cloud.Message.UserGroupInfo
	213, // 151: AcFunDanmu.Im.Cloud.Message.UserGroupInfo.groupInfo:type_name -> AcFunDanmu.Im.Cloud.Message.GroupInfo
	212, // 152: AcFunDanmu.Im.Cloud.Message.UserGroupInfo.groupMember:type_name -> AcFunDanmu.Im.Cloud.Message.GroupMember
	41,  // 153: AcFunDanmu.Im.Cloud.Message.GroupMember.user:type_name -> AcFunDanmu.Im.Basic.User
	35,  // 154: AcFunDanmu.Im.Cloud.Message.GroupMember.status:type_name -> AcFunDanmu.Im.Cloud.Message.GroupMember.GroupMemberStatus
	36,  // 155: AcFunDanmu.Im.Cloud.Message.GroupMember.role:type_name -> AcFunDanmu.Im.Cloud.Message.GroupMember.GroupMemberRole
	23,  // 156: AcFunDanmu.Im.Cloud.Message.GroupMember.findType:type_name -> AcFunDanmu.Im.Cloud.Message.GroupFindType
	214, // 157: AcFunDanmu.Im.Cloud.Message.GroupInfo.basicInfo:type_name -> AcFunDanmu.Im.Cloud.Message.GroupBasicInfo
	215, // 158: AcFunDanmu.Im.Cloud.Message.GroupInfo.groupMemberBriefInfo:type_name -> AcFunDanmu.Im.Cloud.Message.GroupMemberBriefInfo
	41,  // 159: AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.admin:type_name -> AcFunDanmu.Im.Basic.User
	27,  // 160: AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.groupStatus:type_name -> AcFunDanmu.Im.Cloud.Message.GroupStatus
	26,  // 161: AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.joinNeedPermission:type_name -> AcFunDanmu.Im.Cloud.Message.JoinNeedPermissionType
	28,  // 162: AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.groupType:type_name -> AcFunDanmu.Im.Cloud.Message.GroupType
	29,  // 163: AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.forbiddenState:type_name -> AcFunDanmu.Im.Cloud.Message.ForbiddenState
	25,  // 164: AcFunDanmu.Im.Cloud.Message.GroupBasicInfo.invitePermissionType:type_name -> AcFunDanmu.Im.Cloud.Message.InvitePermissionType
	41,  // 165: AcFunDanmu.Im.Cloud.Message.GroupMemberBriefInfo.topMembers:type_name -> AcFunDanmu.Im.Basic.User
	77,  // 166: AcFunDanmu.Im.Cloud.Message.ImcPassThroughRequest.chatTarget:type_name -> AcFunDanmu.Im.Message.ChatTarget
	77,  // 167: AcFunDanmu.Im.Cloud.Message.ImcPassThroughPush.chatTarget:type_name -> AcFunDanmu.Im.Message.ChatTarget
	41,  // 168: AcFunDanmu.Im.Cloud.Message.ImcPassThroughPush.fromUser:type_name -> AcFunDanmu.Im.Basic.User
	169, // [169:169] is the sub-list for method output_type
	169, // [169:169] is the sub-list for method input_type
	169, // [169:169] is the sub-list for extension type_name
	169, // [169:169] is the sub-list for extension extendee
	0,   // [0:169] is the sub-list for field type_name
}

func init() { file_Im_proto_init() }
func file_Im_proto_init() {
	if File_Im_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_Im_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Basic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Basic_PacketHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Basic_User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Basic_UserInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Basic_UpstreamPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Basic_DownstreamPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Basic_PingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Basic_PingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Basic_RegisterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Basic_RegisterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Basic_AccessPointsConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Basic_UnregisterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Basic_UnregisterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Basic_KeepAliveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Basic_KeepAliveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Basic_AccessPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Basic_TokenInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Basic_PushServiceToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Basic_SettingInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Basic_AppInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Basic_DeviceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Basic_EnvInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Basic_RequestBasicInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Basic_SyncCookie); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Basic_I18NCopyWriting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Basic_SdkOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Basic_ZtCommonInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Basic_FrontendInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_SendMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_PullOldRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_PullOldResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_PullNewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_PullNewResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_SessionListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_ChatSession); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_Reminder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_RemindBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_ChatTarget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_SessionListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_SessionPageListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_SessionPageListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_SessionRemoveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_SessionRemoveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_SessionCleanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_SessionCleanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_MessageDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_MessageDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_MessageCancelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_MessageCancelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_MessageClearRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_MessageClearResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_ReadSeqInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_MessageReadSeqRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_MessageReadSeqResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_MessageReadPush); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_AllUnreadCountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_AllUnreadCountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_MessageReadAllRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_MessageReadAllResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_SesionStickyOnTopRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_SessionStickyOnTopResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_SessionRaw); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_MessageRecallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_MessageRecallResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_MessageReceiptRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_MessageReceiptResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_MessageReceiptInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_MessageReceiptCountGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_MessageReceiptCountGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_MessageReceiptStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_MessageReceiptDetailGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_MessageReceiptDetailGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_MessageBatchSendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_MessageBatchSendResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_ImageAttachment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_AudioAttachment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_GifAttachment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_Attachment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_Attachments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_PlaceHolderMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_ImageTextMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_RichTextMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_NoticeMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_RichTextNoticeMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message_RichTextNoticeMessage_RichTextItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Channel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Profile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Channel_ChannelSubscribeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Channel_ChannelSubscribeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Channel_ChannelUnsubscribeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Channel_ChannelSubscribersGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Channel_ChannelSubscribersGetResposne); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Channel_ChannelBasicInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Channel_UserActionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Channel_ChannelBasicInfoGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Channel_ChannelBasicInfoGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Channel_ChannelHeartbeatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Channel_ChannelHeartbeatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Channel_ChannelBasicInfoNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Config_ClientConfigGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Config_ClientConfigGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Config_NetworkQualityDetectionConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Config_ClientConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Profile_UserOnlineStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Profile_ProfileBatchOnlineTimeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Profile_ProfileBatchOnlineTimeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Data_Update); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Data_Update_KsImDataUpdatePushPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Data_Update_GroupInfoDataUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Data_Update_GroupMemberListUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Data_Update_YouBeKicked); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Data_Update_MessageRead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Data_Update_MessageReceipt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_ImcRecalledMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_ImcReplaceMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_Text); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_Image); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_Audio); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_Video); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_Custon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_PicUrl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_Emoticon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_Reference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_ForwardMessageContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_NoticePlaceholderMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_ImcNoticeMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[134].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_LinkedProfileMetaInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[135].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_ConfirmInviteIntoGroupNoticeMetaInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[136].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_ConfirmJoinIntoGroupNoticeMetaInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[137].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_GroupCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[138].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_GroupCreateReponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[139].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_GroupDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[140].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_GroupDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[141].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_GroupInviteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[142].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_GroupInvideResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[143].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_GroupJoinRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[144].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_GroupJoinResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[145].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_GroupJoinRequestAckRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[146].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_GroupJoinRequestAckResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[147].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_GroupJoinRequestGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[148].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_GroupJoinRequestGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[149].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_GroupJoinRequestCancelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[150].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_GroupJoinRequestCancelResposne); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[151].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_GroupQuitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[152].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_GroupQuitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[153].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_GroupKickRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[154].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_GroupKickResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[155].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_GroupSettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[156].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_GroupSettingRename); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[157].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_GroupSettingDesc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[158].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_GroupSettingJoinNeedPermission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[159].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_GroupSettingInvitePermission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[160].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_GroupSettingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[161].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_GroupMemberSettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[162].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_SetUserNickname); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[163].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_SetUserAntiDisturbing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[164].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_GroupMemberSettingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[165].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_GroupMemberListGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[166].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_GroupMemberListGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[167].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_GroupMemberGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[168].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_GroupMemberGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[169].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_UserGroupListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[170].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_UserGroupListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[171].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_UserGroupRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[172].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_UserGroupGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[173].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_UserGroupGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[174].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_UserGroupInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[175].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_GroupMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[176].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_GroupInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[177].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_GroupBasicInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[178].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_GroupMemberBriefInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[179].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_ImcPassThroughRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[180].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_ImcPassThroughResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[181].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_ImcPassThroughPush); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[182].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_InputtingContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[183].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_Emoticon_Code); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Im_proto_msgTypes[184].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cloud_Message_Reference_ReferenceMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_Im_proto_msgTypes[80].OneofWrappers = []interface{}{
		(*Message_Attachment_ImageAttachment)(nil),
		(*Message_Attachment_AudioAttachment)(nil),
	}
	file_Im_proto_msgTypes[155].OneofWrappers = []interface{}{
		(*Cloud_Message_GroupSettingRequest_Rename)(nil),
		(*Cloud_Message_GroupSettingRequest_Desc)(nil),
		(*Cloud_Message_GroupSettingRequest_JoinNeedPermission)(nil),
		(*Cloud_Message_GroupSettingRequest_InvitePermission)(nil),
	}
	file_Im_proto_msgTypes[161].OneofWrappers = []interface{}{
		(*Cloud_Message_GroupMemberSettingRequest_SetNickname)(nil),
		(*Cloud_Message_GroupMemberSettingRequest_SetAntiDisturbing)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Im_proto_rawDesc,
			NumEnums:      37,
			NumMessages:   185,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Im_proto_goTypes,
		DependencyIndexes: file_Im_proto_depIdxs,
		EnumInfos:         file_Im_proto_enumTypes,
		MessageInfos:      file_Im_proto_msgTypes,
	}.Build()
	File_Im_proto = out.File
	file_Im_proto_rawDesc = nil
	file_Im_proto_goTypes = nil
	file_Im_proto_depIdxs = nil
}
